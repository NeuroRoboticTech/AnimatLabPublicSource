'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 10.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace AnimatTesting
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''NewProjectDlg_EnterNameAndPath - Use 'NewProjectDlg_EnterNameAndPathParams' to pass parameters into this method.
        '''</summary>
        Public Sub NewProjectDlg_EnterNameAndPath()
            Dim uITxtProjectNameEdit As WinEdit = Me.UINewProjectWindow.UINewProjectWindow1.UITxtProjectNameEdit
            Dim uITxtLocationEdit As WinEdit = Me.UINewProjectWindow.UITxtLocationWindow.UITxtLocationEdit
            Dim uIOKButton As WinButton = Me.UINewProjectWindow.UIOKWindow.UIOKButton

            'Type 'TestProject' in 'txtProjectName' text box
            uITxtProjectNameEdit.Text = Me.NewProjectDlg_EnterNameAndPathParams.UITxtProjectNameEditText

            'Type '{Tab}' in 'txtProjectName' text box
            Keyboard.SendKeys(uITxtProjectNameEdit, Me.NewProjectDlg_EnterNameAndPathParams.UITxtProjectNameEditSendKeys, ModifierKeys.None)

            'Type 'C:\Projects\AnimatLabSDK\Experiments' in 'txtLocation' text box
            uITxtLocationEdit.Text = Me.NewProjectDlg_EnterNameAndPathParams.UITxtLocationEditText

            'Click 'Ok' button
            Mouse.Click(uIOKButton, New Point(34, 15))
        End Sub
        
        '''<summary>
        '''AddRootPartType - Use 'AddRootPartTypeParams' to pass parameters into this method.
        '''</summary>
        Public Sub AddRootPartType()
            Dim uICtrlPartTypesList As WinList = Me.UISelectPartTypeWindow.UICtrlPartTypesWindow.UICtrlPartTypesList
            Dim uIOKButton As WinButton = Me.UISelectPartTypeWindow.UIOKWindow.UIOKButton

            'Select 'Box' in 'ctrlPartTypes' list box
            uICtrlPartTypesList.SelectedItemsAsString = Me.AddRootPartTypeParams.UICtrlPartTypesListSelectedItemsAsString

            'Click 'Ok' button
            Mouse.Click(uIOKButton, New Point(22, 10))
        End Sub
        
        '''<summary>
        '''AddChildPartTypeWithJoint - Use 'AddChildPartTypeWithJointParams' to pass parameters into this method.
        '''</summary>
        Public Sub AddChildPartTypeWithJoint()
            Dim uICtrlPartTypesList As WinList = Me.UISelectPartTypeWindow.UICtrlPartTypesWindow.UICtrlPartTypesList
            Dim uIOKButton As WinButton = Me.UISelectPartTypeWindow.UIOKWindow.UIOKButton

            'Select 'Box' in 'ctrlPartTypes' list box
            uICtrlPartTypesList.SelectedItemsAsString = Me.AddChildPartTypeWithJointParams.UICtrlPartTypesListSelectedItemsAsString

            'Click 'Ok' button
            Mouse.Click(uIOKButton, New Point(40, 9))

            'Select 'Hinge' in 'ctrlPartTypes' list box
            uICtrlPartTypesList.SelectedItemsAsString = Me.AddChildPartTypeWithJointParams.UICtrlPartTypesListSelectedItemsAsString1

            'Click 'Ok' button
            Mouse.Click(uIOKButton, New Point(45, 12))
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property NewProjectDlg_EnterNameAndPathParams() As NewProjectDlg_EnterNameAndPathParams
            Get
                If (Me.mNewProjectDlg_EnterNameAndPathParams Is Nothing) Then
                    Me.mNewProjectDlg_EnterNameAndPathParams = New NewProjectDlg_EnterNameAndPathParams()
                End If
                Return Me.mNewProjectDlg_EnterNameAndPathParams
            End Get
        End Property
        
        Public Overridable ReadOnly Property AddRootPartTypeParams() As AddRootPartTypeParams
            Get
                If (Me.mAddRootPartTypeParams Is Nothing) Then
                    Me.mAddRootPartTypeParams = New AddRootPartTypeParams()
                End If
                Return Me.mAddRootPartTypeParams
            End Get
        End Property
        
        Public Overridable ReadOnly Property AddChildPartTypeWithJointParams() As AddChildPartTypeWithJointParams
            Get
                If (Me.mAddChildPartTypeWithJointParams Is Nothing) Then
                    Me.mAddChildPartTypeWithJointParams = New AddChildPartTypeWithJointParams()
                End If
                Return Me.mAddChildPartTypeWithJointParams
            End Get
        End Property
        
        Public ReadOnly Property UINewProjectWindow() As UINewProjectWindow
            Get
                If (Me.mUINewProjectWindow Is Nothing) Then
                    Me.mUINewProjectWindow = New UINewProjectWindow()
                End If
                Return Me.mUINewProjectWindow
            End Get
        End Property
        
        Public ReadOnly Property UISelectPartTypeWindow() As UISelectPartTypeWindow
            Get
                If (Me.mUISelectPartTypeWindow Is Nothing) Then
                    Me.mUISelectPartTypeWindow = New UISelectPartTypeWindow()
                End If
                Return Me.mUISelectPartTypeWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mNewProjectDlg_EnterNameAndPathParams As NewProjectDlg_EnterNameAndPathParams
        
        Private mAddRootPartTypeParams As AddRootPartTypeParams
        
        Private mAddChildPartTypeWithJointParams As AddChildPartTypeWithJointParams
        
        Private mUINewProjectWindow As UINewProjectWindow
        
        Private mUISelectPartTypeWindow As UISelectPartTypeWindow
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'NewProjectDlg_EnterNameAndPath'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class NewProjectDlg_EnterNameAndPathParams
        
        #Region "Fields"
        '''<summary>
        '''Type 'TestProject' in 'txtProjectName' text box
        '''</summary>
        Public UITxtProjectNameEditText As String = "TestProject"
        
        '''<summary>
        '''Type '{Tab}' in 'txtProjectName' text box
        '''</summary>
        Public UITxtProjectNameEditSendKeys As String = "{Tab}"
        
        '''<summary>
        '''Type 'C:\Projects\AnimatLabSDK\Experiments' in 'txtLocation' text box
        '''</summary>
        Public UITxtLocationEditText As String = "C:\Projects\AnimatLabSDK\Experiments"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AddRootPartType'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AddRootPartTypeParams
        
        #Region "Fields"
        '''<summary>
        '''Select 'Box' in 'ctrlPartTypes' list box
        '''</summary>
        Public UICtrlPartTypesListSelectedItemsAsString As String = "Box"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AddChildPartTypeWithJoint'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AddChildPartTypeWithJointParams
        
        #Region "Fields"
        '''<summary>
        '''Select 'Box' in 'ctrlPartTypes' list box
        '''</summary>
        Public UICtrlPartTypesListSelectedItemsAsString As String = "Box"
        
        '''<summary>
        '''Select 'Hinge' in 'ctrlPartTypes' list box
        '''</summary>
        Public UICtrlPartTypesListSelectedItemsAsString1 As String = "Hinge"
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UINewProjectWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "New Project"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("New Project")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINewProjectWindow1() As UINewProjectWindow1
            Get
                If (Me.mUINewProjectWindow1 Is Nothing) Then
                    Me.mUINewProjectWindow1 = New UINewProjectWindow1(Me)
                End If
                Return Me.mUINewProjectWindow1
            End Get
        End Property
        
        Public ReadOnly Property UITxtLocationWindow() As UITxtLocationWindow
            Get
                If (Me.mUITxtLocationWindow Is Nothing) Then
                    Me.mUITxtLocationWindow = New UITxtLocationWindow(Me)
                End If
                Return Me.mUITxtLocationWindow
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINewProjectWindow1 As UINewProjectWindow1
        
        Private mUITxtLocationWindow As UITxtLocationWindow
        
        Private mUIOKWindow As UIOKWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UINewProjectWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtProjectName"
            Me.WindowTitles.Add("New Project")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtProjectNameEdit() As WinEdit
            Get
                If (Me.mUITxtProjectNameEdit Is Nothing) Then
                    Me.mUITxtProjectNameEdit = New WinEdit(Me)
                    Me.mUITxtProjectNameEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Location"
                    Me.mUITxtProjectNameEdit.WindowTitles.Add("New Project")
                End If
                Return Me.mUITxtProjectNameEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtProjectNameEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UITxtLocationWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtLocation"
            Me.WindowTitles.Add("New Project")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtLocationEdit() As WinEdit
            Get
                If (Me.mUITxtLocationEdit Is Nothing) Then
                    Me.mUITxtLocationEdit = New WinEdit(Me)
                    Me.mUITxtLocationEdit.WindowTitles.Add("New Project")
                End If
                Return Me.mUITxtLocationEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtLocationEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOKWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnOk"
            Me.WindowTitles.Add("New Project")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "Ok"
                    Me.mUIOKButton.WindowTitles.Add("New Project")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UISelectPartTypeWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Select Part Type"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Select Part Type")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICtrlPartTypesWindow() As UICtrlPartTypesWindow
            Get
                If (Me.mUICtrlPartTypesWindow Is Nothing) Then
                    Me.mUICtrlPartTypesWindow = New UICtrlPartTypesWindow(Me)
                End If
                Return Me.mUICtrlPartTypesWindow
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow1
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow1(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICtrlPartTypesWindow As UICtrlPartTypesWindow
        
        Private mUIOKWindow As UIOKWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UICtrlPartTypesWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "ctrlPartTypes"
            Me.WindowTitles.Add("Select Part Type")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICtrlPartTypesList() As WinList
            Get
                If (Me.mUICtrlPartTypesList Is Nothing) Then
                    Me.mUICtrlPartTypesList = New WinList(Me)
                    Me.mUICtrlPartTypesList.WindowTitles.Add("Select Part Type")
                End If
                Return Me.mUICtrlPartTypesList
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICtrlPartTypesList As WinList
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOKWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnOk"
            Me.WindowTitles.Add("Select Part Type")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "Ok"
                    Me.mUIOKButton.WindowTitles.Add("Select Part Type")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
End Namespace
