<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetMagic</name>
    </assembly>
    <members>
        <member name="T:Crownwood.DotNetMagic.Docking.HotAreaTabbed">
            <summary>
            Handle the mouse over a tabbed content instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotArea">
            <summary>
            Define a hot area that results in visual feedback on drop information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotArea.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initialize a new instance of the HotAreaTabbed class.
            </summary>
            <param name="manager">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotArea.FindHotZone(System.Drawing.Point,Crownwood.DotNetMagic.Docking.HotZone,System.Boolean@)">
            <summary>
            Find the new hot zone to use.
            </summary>
            <param name="mousePos">Screen mouse position.</param>
            <param name="hotZone">Incoming hot zone.</param>
            <param name="suppress">Suppress subsequent indicators.</param>
            <returns>New hot zone.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotArea.Cleanup">
            <summary>
            Cleanup because tracking has finished.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotArea.Manager">
            <summary>
            Gets access to the owning docking manager.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaTabbed.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.RedockerContent,Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.ZoneSequence,Crownwood.DotNetMagic.Docking.WindowContentTabbed,System.Boolean,System.Boolean,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the HotAreaTabbed class.
            </summary>
            <param name="squares">Squares or diamonds.</param>
            <param name="redocker">Reference to the redocker.</param>
            <param name="manager">Reference to docking manager.</param>
            <param name="zs">Sequence containing the tabbed content.</param>
            <param name="wct">Tabbed content instance.</param>
            <param name="disallowTabbed">Allow to drop in tabbed area.</param>
            <param name="suppress">Suppress indicators if match found.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaTabbed.FindHotZone(System.Drawing.Point,Crownwood.DotNetMagic.Docking.HotZone,System.Boolean@)">
            <summary>
            Find the new hot zone to use.
            </summary>
            <param name="mousePos">Screen mouse position.</param>
            <param name="hotZone">Incoming hot zone.</param>
            <param name="suppress">Suppress subsequent indicators.</param>
            <returns>New hot zone.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaTabbed.Cleanup">
            <summary>
            Cleanup because tracking has finished.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Node">
            <summary>
            Represents a single node in the data hierarchy.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.#ctor">
            <summary>
            Initialize a new instance of the Node class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.#ctor(System.String)">
            <summary>
            Initialize a new instance of the Node class.
            </summary>
            <param name="text">Initial Text property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetTooltip">
            <summary>
            Resets the Tooltip property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetNodeFont">
            <summary>
            Resets the NodeFont property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetForeColor">
            <summary>
            Resets the ForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetBackColor">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetImageIndex">
            <summary>
            Resets the ImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetSelectedImageIndex">
            <summary>
            Resets the SelectedImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetIcon">
            <summary>
            Resets the Icon property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetSelectedIcon">
            <summary>
            Resets the Icon property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetSelectedImage">
            <summary>
            Resets the SelectedImage property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetIndicator">
            <summary>
            Resets the Icon property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetCheckStates">
            <summary>
            Resets the CheckStates property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetCheckState">
            <summary>
            Resets the CheckState property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetVisible">
            <summary>
            Resets the Visible property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Show">
            <summary>
            Make this Node visible.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Hide">
            <summary>
            Make this Node invisible.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetExpanded">
            <summary>
            Resets the Expanded property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Expand">
            <summary>
            Expands the Node.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ExpandAll">
            <summary>
            Expand Node and all child nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Collapse">
            <summary>
            Collapses the Node.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.CollapseAll">
            <summary>
            Collapse Node and all child nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Toggle">
            <summary>
            Inverts the current Expanded state.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetSelectable">
            <summary>
            Resets the Selectable property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Select">
            <summary>
            Select this Node.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Deselect">
            <summary>
            Deselect this Node.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.BeginEdit">
            <summary>
            Initiates the editing of the node label.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetKey">
            <summary>
            Resets the Key property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.ResetTag">
            <summary>
            Resets the Tag property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Remove">
            <summary>
            Removes this node from the parent node collection.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.GetNodeCount">
            <summary>
            Returns the number of child nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.Clone">
            <summary>
            Creates a deep copy of the Node.
            </summary>
            <returns>New Node instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.UpdateInstance(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Update internal fields from source Node.
            </summary>
            <param name="source">Source Node to update from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnTextChanged">
            <summary>
            Raises the TextChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnTooltipChanged">
            <summary>
            Raises the TooltipChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnNodeFontChanged">
            <summary>
            Raises the NodeFontChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnForeColorChanged">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnBackColorChanged">
            <summary>
            Raises the BackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnSelectedImageIndexChanged">
            <summary>
            Raises the SelectedImageIndexChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnImageIndexChanged">
            <summary>
            Raises the ImageIndexChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnIndicatorChanged">
            <summary>
            Raises the IndicatorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnIconChanged">
            <summary>
            Raises the IconChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnSelectedIconChanged">
            <summary>
            Raises the SelectedIconChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnImageChanged">
            <summary>
            Raises the ImageChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnSelectedImageChanged">
            <summary>
            Raises the SelectedImageChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnCheckStateChanged">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnCheckStatesChanged">
            <summary>
            Raises the CheckStatesChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnVisibleChanged">
            <summary>
            Raises the VisibleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnExpandedChanged">
            <summary>
            Raises the ExpandedChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnSelectableChanged">
            <summary>
            Raises the SelectableChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnKeyChanged">
            <summary>
            Raises the KeyChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnTagChanged">
            <summary>
            Raises the TagChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Node.OnVCChanged">
            <summary>
            Raises the VCChanged event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.TextChanged">
            <summary>
            Occurs after the Text property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.TooltipChanged">
            <summary>
            Occurs after the Tooltip property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.NodeFontChanged">
            <summary>
            Occurs after the Font property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.BackColorChanged">
            <summary>
            Occurs after the BackColor property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.ForeColorChanged">
            <summary>
            Occurs after the ForeColor property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.ImageIndexChanged">
            <summary>
            Occurs after the ImageIndex property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.SelectedImageIndexChanged">
            <summary>
            Occurs after the SelectedImageIndex property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.IconChanged">
            <summary>
            Occurs after the Icon property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.SelectedIconChanged">
            <summary>
            Occurs after the SelectedIcon property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.ImageChanged">
            <summary>
            Occurs after the Image property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.SelectedImageChanged">
            <summary>
            Occurs after the SelectedImage property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.IndicatorChanged">
            <summary>
            Occurs after the Indicator property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.CheckStateChanged">
            <summary>
            Occurs when the value of the CheckState property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.CheckStatesChanged">
            <summary>
            Occurs when the value of the CheckStates property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.VisibleChanged">
            <summary>
            Occurs after the Visible property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.SelectableChanged">
            <summary>
            Occurs after the Selectable property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.ExpandedChanged">
            <summary>
            Occurs after the Expanded property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.KeyChanged">
            <summary>
            Occurs after the Key property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.TagChanged">
            <summary>
            Occurs after the Tag property value has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.Node.VCChanged">
            <summary>
            Occurs after the Tag property value has changed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Parent">
            <summary>
            Gets or sets the parent node that contains this node as a sub node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.ParentNodes">
            <summary>
            Gets or sets the parent node collection that contains this node as a sub node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.TreeControl">
            <summary>
            Gets reference to the TreeControl instance this node is inside.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.VC">
            <summary>
            Gets the TreeControl instance this collection is attached to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Nodes">
            <summary>
            Gets the collection of nodes in this node instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Text">
            <summary>
            Gets and sets the text associated with the node instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Tooltip">
            <summary>
            Gets and sets the tooltip associated with the node instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.NodeFont">
            <summary>
            Gets and sets the font used to display Node text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.ForeColor">
            <summary>
            Gets and sets the foreground color used to draw text and graphics.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.BackColor">
            <summary>
            Gets and sets the background color used to draw text and graphics.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.ImageIndex">
            <summary>
            Gets and sets the image index for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.SelectedImageIndex">
            <summary>
            Gets and sets the selected image index for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Icon">
            <summary>
            Gets and sets the icon for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.SelectedIcon">
            <summary>
            Gets and sets the selected icon for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Image">
            <summary>
            Gets and sets the image for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.SelectedImage">
            <summary>
            Gets and sets the selected image for node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Indicator">
            <summary>
            Gets and sets the indicator symbol.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.CheckStates">
            <summary>
            Gets and sets the style of checkboxes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.CheckState">
            <summary>
            Gets and sets the check state of the node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Checked">
            <summary>
            Gets and sets a value if node is checked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Visible">
            <summary>
            Gets and sets a value indicating if the Node is visible.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.IsVisible">
            <summary>
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Expanded">
            <summary>
            Gets and sets a value indicating if the Node is expanded.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.IsExpanded">
            <summary>
            Gets a value indicating if the Node is expanded.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Selectable">
            <summary>
            Gets and sets a value indicating if the Node can be selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.IsSelected">
            <summary>
            Gets a value indicating if the Node is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.FullPath">
            <summary>
            Gets the path from root node to this node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Key">
            <summary>
            Gets or sets a unique key to associate with the node instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Tag">
            <summary>
            Gets or sets the user object that contains node specific information.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Size">
            <summary>
            Gets the size of the node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Bounds">
            <summary>
            Gets the bounds of the node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.ChildBounds">
            <summary>
            Gets the bounds of the node including children nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.IsSizeDirty">
            <summary>
            Gets a value indicating if the size is dirty.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Index">
            <summary>
            Gets the index of this node in parent collection of nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.FirstNode">
            <summary>
            Gets reference to the first Node in this hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.FirstDisplayedNode">
            <summary>
            Gets reference to the first displayed Node in this hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.LastNode">
            <summary>
            Gets reference to the last Node in this hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.LastDisplayedNode">
            <summary>
            Gets reference to the last displayed Node in this hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.NextNode">
            <summary>
            Gets reference to the next Node in entire hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.NextDisplayedNode">
            <summary>
            Gets reference to the next displayed Node in entire hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.PreviousNode">
            <summary>
            Gets reference to the previous Node in entire hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.PreviousDisplayedNode">
            <summary>
            Gets reference to the previous displayed Node in entire hierarchy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Node.Cache">
            <summary>
            Gets a value indicating if the size of the node needs recalculating.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.IndentPaddingEdges">
            <summary>
            Determines the indent padding for the TreeControl.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.#ctor">
            <summary>
            Initialize a new instance of the IndentPaddingEdges class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.ResetLeft">
            <summary>
            Resets the Left property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.ResetTop">
            <summary>
            Resets the Top property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.ResetRight">
            <summary>
            Resets the Right property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.ResetBottom">
            <summary>
            Resets the Bottom property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.ToString">
            <summary>
            Returns a String that represents the current IndentPaddingEdges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.OnIndentChanged">
            <summary>
            Raises the IndentChanged event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.IndentChanged">
            <summary>
            Occures when any indent value changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.Left">
            <summary>
            Gets and sets the indent for the left edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.Top">
            <summary>
            Gets and sets the indent for the top edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.Right">
            <summary>
            Gets and sets the indent for the right edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IndentPaddingEdges.Bottom">
            <summary>
            Gets and sets the indent for the bottom edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabGroupSequence">
            <summary>
            Group that represents a sequence of child groups.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabGroupBase">
            <summary>
            Base class with common functionality for tab group classes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups)">
            <summary>
            Initializes a new instance of the TabGroupBase class.
            </summary>
            <param name="tabbedGroups">Owning control instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Initializes a new instance of the TabGroupBase class.
            </summary>
            <param name="tabbedGroups">Owning control instance.</param>
            <param name="parent">Parent group instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.Dispose">
            <summary>
            Releases all resources used by the group.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.SetPixelLength(System.Int32)">
            <summary>
            Set the Space of this item so it occupies the specified number of pixels, if possible.
            </summary>
            <param name="pixelSize">Pixel length requested.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.Notify(Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode)">
            <summary>
            Informs group of a notification.
            </summary>
            <param name="code">Which notification has occured.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.ContainsProminent(System.Boolean)">
            <summary>
            Returns a value indicating whether the group contains the prominent leaf.
            </summary>
            <param name="recurse">Should the group search child groups.</param>
            <returns>true if prominent leaf contained; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Request this group save its information and child groups.
            </summary>
            <param name="xmlOut">Write to save information into.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBase.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Request this group load its information and child groups.
            </summary>
            <param name="xmlIn">Reader to load information from.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.Space">
            <summary>
            Gets and sets the percentage space this group occupies inside parent group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.MinimumSize">
            <summary>
            Gets and sets the minimum screen size this group requires.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.ResizeBarLock">
            <summary>
            Gets or sets a value indicating if this group should be allowed to be resized by bar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.Parent">
            <summary>
            Gets the parent group this instance is inside.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.TabbedGroups">
            <summary>
            Gets the parent control instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.Tag">
            <summary>
            Gets and sets data associated with the instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.Unique">
            <summary>
            Gets and sets a unique number used to help debugging.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.Count">
            <summary>
            Gets the number of child items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.IsLeaf">
            <summary>
            Gets a value indicating whether the group is a leaf.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.IsSequence">
            <summary>
            Gets a value indicating whether the group is a sequence.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBase.GroupControl">
            <summary>
            Gets the parent control instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode">
            <summary>
            Specifies a notification code.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.StyleChanged">
            <summary>
            Specifies the visual style has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.OfficeStyleChanged">
            <summary>
            Specifies the Office2003 style has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.MediaPlayerStyleChanged">
            <summary>
            Specifies the Media Player style has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.IDE2005StyleChanged">
            <summary>
            Specifies the IDE2005 style has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ProminentChanged">
            <summary>
            Specifies the prominent leaf has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.MinimumSizeChanged">
            <summary>
            Specifies the minimum group size has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ResizeBarVectorChanged">
            <summary>
            Specifies the resize bar vector has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ResizeBarColorChanged">
            <summary>
            Specifies the resize bar color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ProminentBackColorChanged">
            <summary>
            Specifies the prominent background color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ProminentForeColorChanged">
            <summary>
            Specifies the prominent foreground color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.DisplayTabMode">
            <summary>
            Specifies the display tab mode has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ImageListChanging">
            <summary>
            Specifies the source image list is about to change.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.ImageListChanged">
            <summary>
            Specifies the source image list has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode.HotkeyPrefixChanged">
            <summary>
            Specifies the mode used for drawing hotkeys in tab headers.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.IResizeSource">
            <summary>
            Interface used by ResizeBar to control behaviour.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IResizeSource.CanResize(Crownwood.DotNetMagic.Controls.ResizeBar)">
            <summary>
            Determines if the ResizeBar instance is allowed to resize.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IResizeSource.StartResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Drawing.Rectangle@)">
            <summary>
            Determine the screen rectangle the bar can size into.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="screenBoundary">Screen bounding rectangle.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.IResizeSource.EndResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Int32)">
            <summary>
            Resize operation completed with delta change.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="delta">Delta change to size.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IResizeSource.ResizeBarColor">
            <summary>
            Gets the color used to draw.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IResizeSource.BackgroundColor">
            <summary>
            Gets the background color used to draw.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IResizeSource.ResizeBarVector">
            <summary>
            Gets the width/height of the ResizeBar control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.IResizeSource.Style">
            <summary>
            Gets the visual style required for display.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups)">
            <summary>
            Initializes a new instance of the TabGroupSequence class.
            </summary>
            <param name="tabbedGroups">Parent control instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Initializes a new instance of the TabGroupSequence class.
            </summary>
            <param name="tabbedGroups">Parent control instance.</param>
            <param name="parent">Parent group instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupBase,Crownwood.DotNetMagic.Common.LayoutDirection)">
            <summary>
            Initializes a new instance of the TabGroupSequence class.
            </summary>
            <param name="tabbedGroups">Parent control instance.</param>
            <param name="parent">Parent group instance.</param>
            <param name="direction">Which direction the group organises children.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Dispose">
            <summary>
            Releases all resources used by the group.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewLeaf">
            <summary>
            Create and add a new leaf group to end of children.
            </summary>
            <returns>New leaf group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewLeaf(Crownwood.DotNetMagic.Controls.TabGroupLeaf)">
            <summary>
            Add a leaf to the end of the children.
            </summary>
            <param name="tgl">Leaf derived instance to be added.</param>
            <returns>Added leaf instance on success; otherwise null</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewSequence">
            <summary>
            Create and add a new sequence to end of the children.
            </summary>
            <returns>New sequence group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewSequence(Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Add a sequence derived class at end of the children.
            </summary>
            <param name="tgs">Sequence derived instance to be added.</param>
            <returns>Added sequence instance on success; otherwise null</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewSequence(Crownwood.DotNetMagic.Common.LayoutDirection)">
            <summary>
            Create and add a new sequence with given direction to children.
            </summary>
            <param name="direction">Direction of flow for new sequence.</param>
            <returns>New sequence group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.AddNewSequence(Crownwood.DotNetMagic.Common.LayoutDirection,Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Add a sequence to the end of the collection of children.
            </summary>
            <param name="direction">Direction of flow for new sequence.</param>
            <param name="tgs">Sequence derived instance to be added.</param>
            <returns>Added sequence instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewLeaf(System.Int32)">
            <summary>
            Create and insert a new leaf group at specified index.
            </summary>
            <param name="index">Index position to insert at.</param>
            <returns>New leaf group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewLeaf(System.Int32,Crownwood.DotNetMagic.Controls.TabGroupLeaf)">
            <summary>
            Add an existing leaf at the specified index.
            </summary>
            <param name="index">Index position to insert at.</param>
            <param name="tgl">Leaf derived class to insert.</param>
            <returns>Leaf instance inserted on success; otherwise null</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewSequence(System.Int32)">
            <summary>
            Create and insert a new sequence group at specified index.
            </summary>
            <param name="index">Index position to insert at.</param>
            <returns>New sequence group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewSequence(System.Int32,Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Add a sequence derived instance at a specified index.
            </summary>
            <param name="index">Index position to insert at.</param>
            <param name="tgs">Sequence derived class to insert.</param>
            <returns>Sequence inserted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewSequence(System.Int32,Crownwood.DotNetMagic.Common.LayoutDirection)">
            <summary>
            Create and insert a new sequence with given direction at specified index.
            </summary>
            <param name="index">Index position to insert at.</param>
            <param name="direction">Direction of flow for new sequence.</param>
            <returns>New sequence group instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.InsertNewSequence(System.Int32,Crownwood.DotNetMagic.Common.LayoutDirection,Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Insert a sequence derived class at the specified index with specified direction.
            </summary>
            <param name="index">Index position to insert at.</param>
            <param name="direction">Direction of flow for sequence.</param>
            <param name="tgs">Sequence derived instance to insert.</param>
            <returns>Sequence inserted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Remove(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Find and remove the specified group from children.
            </summary>
            <param name="group">Group instance to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.RemoveAt(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Remove the indexed group from children.
            </summary>
            <param name="index">Index position to remove.</param>
            <param name="reallocate">Should removed space be allocated to remaining children.</param>
            <param name="dispose">Should dispose of removed child.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.IndexOf(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Returns the index of the first occurrence of the group.
            </summary>
            <param name="group">The group to locate.</param>
            <returns>Index of group; otherwise -1</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Clear">
            <summary>
            Remove all child groups.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Notify(Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode)">
            <summary>
            Informs group of a notification.
            </summary>
            <param name="code">Which notification has occured.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Rebalance(System.Boolean)">
            <summary>
            Restore equal proportional spacing to all groups.
            </summary>
            <param name="recurse">Should recurse into all groups.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.ContainsProminent(System.Boolean)">
            <summary>
            Determine if the prominent leaf is inside this group.
            </summary>
            <param name="recurse">Should recurse into all groups.</param>
            <returns>true if contains prominent leaf; otherwise false</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Request this group save its information and child groups.
            </summary>
            <param name="xmlOut">Write to save information into.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Request this group load its information and child groups.
            </summary>
            <param name="xmlIn">Reader to load information from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Compact">
            <summary>
            Perform compacting of hierarchy using default flags.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Compact(Crownwood.DotNetMagic.Controls.CompactFlags)">
            <summary>
            Perform compacting of hierarchy using specified flags.
            </summary>
            <param name="flags">Compacting options to be applied.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.Reposition">
            <summary>
            Recalculate the correct size and position of child groups.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.CanResize(Crownwood.DotNetMagic.Controls.ResizeBar)">
            <summary>
            Determines if the ResizeBar instance is allowed to resize.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.StartResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Drawing.Rectangle@)">
            <summary>
            Determine the screen rectangle the bar can size into.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="screenBoundary">Screen bounding rectangle.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupSequence.EndResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Int32)">
            <summary>
            Resize operation completed with delta change.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="delta">Delta change to size.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.Count">
            <summary>
            Gets the number of child items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.IsLeaf">
            <summary>
            Gets a value indicating whether the group is a leaf.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.IsSequence">
            <summary>
            Gets a value indicating whether the group is a sequence.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.GroupControl">
            <summary>
            Gets the parent control instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.Direction">
            <summary>
            Gets a valid indicating which direction children are organised.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.Style">
            <summary>
            Gets the visual style for the group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.ResizeBarVector">
            <summary>
            Gets the vector used for the resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.ResizeBarColor">
            <summary>
            Gets the color used for the resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.BackgroundColor">
            <summary>
            Gets the color used for the bachground.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupSequence.Item(System.Int32)">
            <summary>
            Gets the group at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.Office2007Renderer">
            <summary>
            Draw ToolStrip using the Office 2007 themed appearance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.#ctor(Crownwood.DotNetMagic.Common.Office2007Theme,System.Boolean)">
            <summary>
            Initialize a new instance of the Office2007Renderer class.
            </summary>
            <param name="theme">Initial theme.</param>
            <param name="applyClearType">Should clear type drawing of text be allowed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">An ToolStripItemTextRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.DrawButtonCommandBack(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,Crownwood.DotNetMagic.Common.ButtonStyle,System.Boolean,System.Boolean)">
            <summary>
            Draw a button in the Office2007 style using provided state information.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="direction">Vertical or Horizontal direction.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
            <param name="state">Button state.</param>
            <param name="buttonStyle">Button style.</param>
            <param name="pushed">Is the button checked.</param>
            <param name="enabled">Is the button enabled.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.DrawButtonBackground(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the background for a button in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.DrawButtonBorder(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the border for the button in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.DrawStatusBarBackground(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the background for the status bar in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007Renderer.DrawStatusBarBorder(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the border for the status bar in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.Office2007Theme">
            <summary>
            Specifies an Office 2007 theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Office2007Theme.Blue">
            <summary>Specified the Office 2007 standard Blue theme.</summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Office2007Theme.Silver">
            <summary>Specified the Office 2007 standard Silver theme.</summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Office2007Theme.Black">
            <summary>Specified the Office 2007 standard Black theme.</summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.MediaPlayerTheme">
            <summary>
            Specifies a Media Player theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.MediaPlayerTheme.Blue">
            <summary>Specified the Media Player Blue theme.</summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.MediaPlayerTheme.Orange">
            <summary>Specified the Media Player Orange theme.</summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.MediaPlayerTheme.Purple">
            <summary>Specified the Media Player Purple theme.</summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.UseAntiAlias">
            <summary>
            Set the SmoothingMode=AntiAlias until instance disposed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseAntiAlias.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseAntiAlias class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseAntiAlias.Dispose">
            <summary>
            Revert the SmoothingMode back to original setting.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.UseClearTypeGridFit">
            <summary>
            Set the TextRenderingHint.ClearTypeGridFit until instance disposed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseClearTypeGridFit.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseClearTypeGridFit class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseClearTypeGridFit.Dispose">
            <summary>
            Revert the TextRenderingHint back to original setting.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.UseClipping">
            <summary>
            Set the clipping region until instance disposed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Initialize a new instance of the UseClipping class.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="path">Clipping path.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Region)">
            <summary>
            Initialize a new instance of the UseClipping class.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="region">Clipping region.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.UseClipping.Dispose">
            <summary>
            Revert clipping back to origina setting.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ColorHelper">
            <summary>
            Collection of static helper methods for processing colors.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.ValidateStyle(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Validate the requested visual style is allowed under the current operating system.
            </summary>
            <param name="style">Requested style.</param>
            <returns>Validated style.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.TabBackgroundFromBaseColor(System.Drawing.Color)">
            <summary>
            Calculate the background color for the TabControl from a base color.
            </summary>
            <param name="backColor">Base color used to derive background color.</param>
            <returns>Color to use as background.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.CalculateColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Calculate an opaque color that is the equivalent of an alpha blended color.
            </summary>
            <param name="front">Foreground color.</param>
            <param name="back">Background color.</param>
            <param name="alpha">Level of alpha blending to apply between foreground and background.</param>
            <returns>New alpha blended opaque color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.ColorDepth">
            <summary>
            Get the number of bits used to define the color depth of the display.
            </summary>
            <returns>Number of bits in color depth.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge two colors together using the given relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge three colors together using the given relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <param name="color3">Third color.</param>
            <param name="percent3">Percentage of third color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.ColorToBlackAndWhite(System.Drawing.Color)">
            <summary>
            Convert the color to a black and white color.
            </summary>
            <param name="color">Base color.</param>
            <returns>Black and White version of color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorHelper.BlackenColor(System.Drawing.Color,System.Single,System.Single,System.Single)">
            <summary>
            Blacken a provided color by applying per channel percentages.
            </summary>
            <param name="color1">Color.</param>
            <param name="percentR">Percentage of red to keep.</param>
            <param name="percentG">Percentage of green to keep.</param>
            <param name="percentB">Percentage of blue to keep.</param>
            <returns>Modified color.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonCloseA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonCloseAH">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonCloseI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMaxA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMaxAH">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMaxI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMinA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMinAH">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonMinI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonPressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonPressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonRestoreA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonRestoreAH">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonRestoreI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonTracking">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackButtonTrackingS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackCaptionA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlackCaptionI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonCloseA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonCloseI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonMaxA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonMaxI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonMinA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonMinI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonPressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonPressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonRestoreA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonRestoreI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonTracking">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueButtonTrackingS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueCaptionA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.BlueCaptionI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonCloseA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonCloseI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonMaxA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonMaxI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonMinA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonMinI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonPressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonPressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonRestoreA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonRestoreI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonTracking">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverButtonTrackingS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverCaptionA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SilverCaptionI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonBluePressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonBluePressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonCloseA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonCloseI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonMaxA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonMaxI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonMinA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonMinI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonOrangePressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonOrangePressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonPurplePressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonPurplePressedS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonRestoreA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonRestoreI">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonTracking">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleButtonTrackingS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleGrayChecked">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Properties.Resources.SparkleGrayIndeterminate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaption">
            <summary>
            Base class for caption detail implementations.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetail">
            <summary>
            Base class for details that adorn a window.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initializes a new instance of the WindowDetail class.
            </summary>
            <param name="manager">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.WindowGotFocus">
            <summary>
            Handle the parent window getting focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.WindowLostFocus">
            <summary>
            Handle the parent window losing focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Handle a change in the image used when auto hidden property.
            </summary>
            <param name="autoHidden">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.NotifyCloseButton(System.Boolean)">
            <summary>
            Handle a change in showing the close button.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.NotifyHideButton(System.Boolean)">
            <summary>
            Handle a change in showing the hide button.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Handle a change in showing the caption bar.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.NotifyFullTitleText(System.String)">
            <summary>
            Handle a change in the caption bar text.
            </summary>
            <param name="title">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetail.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetail.DockingManager">
            <summary>
            Gets reference to the docking manager.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetail.ParentZone">
            <summary>
            Gets and sets the parent zone.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetail.ParentWindow">
            <summary>
            Gets and sets the parent window.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Size,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaption class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content.</param>
            <param name="fixedSize">Fixed size of the detail.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnClose">
            <summary>
            Raises the Close event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnInvertAutoHide">
            <summary>
            Raises the InvertAutoHide event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnRestore">
            <summary>
            Raises the Restore event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnContext(Crownwood.DotNetMagic.Docking.ContentCollection,System.Drawing.Point)">
            <summary>
            Raises the Context event.
            </summary>
            <param name="cc">Collection of content instances.</param>
            <param name="screenPos">Screen location of mouse at time of requesting context menu.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the group.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Handle a change in the image used when auto hidden property.
            </summary>
            <param name="autoHidden">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.NotifyCloseButton(System.Boolean)">
            <summary>
            Handle a change in showing the close button.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.NotifyHideButton(System.Boolean)">
            <summary>
            Handle a change in showing the hide button.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Handle a change in showing the caption bar.
            </summary>
            <param name="show">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.RecalculateMaximizeButton">
            <summary>
            Calculate if the maximize button should be available.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.AddMaximizeInterface(Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow)">
            <summary>
            Enable the maximize functionality.
            </summary>
            <param name="zmw"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.CreateMaxButton">
            <summary>
            Create the button class specific to this implementation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.RemoveMaximizeInterface">
            <summary>
            Disable the maximize functionality.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnRefreshMaximize(System.Object,System.EventArgs)">
            <summary>
            Refresh the state of the maximize functionality.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnButtonMax(System.Object,System.EventArgs)">
            <summary>
            Process the user pressing the maximize/minimize button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnButtonClose(System.Object,System.EventArgs)">
            <summary>
            Process the user pressing the close button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnButtonHide(System.Object,System.EventArgs)">
            <summary>
            Process the user pressing the auto hide button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnButtonGotFocus(System.Object,System.EventArgs)">
            <summary>
            Process one of our buttons getting the focus.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnDoubleClick(System.EventArgs)">
            <summary>
            A double click of the caption causes the content to be restored.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.OnRemoveMaximizeInterface">
            <summary>
            Process the maximize interface being removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaption.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter out; false otherwise.</returns>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.WindowDetailCaption.Close">
            <summary>
            Occurs when the user clicks the close detail button.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.WindowDetailCaption.Restore">
            <summary>
            Occurs when the user clicks the restore detail button.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.WindowDetailCaption.InvertAutoHide">
            <summary>
            Occurs when the user clicks the invert auto hide detail button.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.WindowDetailCaption.Context">
            <summary>
            Occurs when the user requests a context menu.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaption.ParentZone">
            <summary>
            Sets the paret zone that contains this caption detail.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaption.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain">
            <summary>
            Window caption detail implementation for Plain visual style.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionPlain class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.OnRemoveMaximizeInterface">
            <summary>
            Process the maximize interface being removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionPlain.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE">
            <summary>
            Window caption detail implementation for IDE visual style.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionIDE class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.WindowGotFocus">
            <summary>
            Handle the parent window getting focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.WindowLostFocus">
            <summary>
            Handle the parent window losing focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.NotifyFullTitleText(System.String)">
            <summary>
            Handle a change in the caption bar text.
            </summary>
            <param name="title">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.SetButtonState">
            <summary>
            Update the state of the caption buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.UpdateCaptionHeight(System.Drawing.Font)">
            <summary>
            Adjust the height of the caption to reflect changed font.
            </summary>
            <param name="captionFont"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.DockLeft">
            <summary>
            Is the heading docked to the left.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.YInset">
            <summary>
            Gets the vertical inset height.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.YInsetExtra">
            <summary>
            Gets the extra space needed for the caption height.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.ButtonSpacer">
            <summary>
            Gets the space between buttons.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.LocationExtra">
            <summary>
            Gets the extra positioning space.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005">
            <summary>
            Window caption detail implementation for IDE2005 visual style.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionIDE2005 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.CreateMaxButton">
            <summary>
            Create the button class specific to this implementation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.SetButtonState">
            <summary>
            Update the state of the caption buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.YInset">
            <summary>
            Gets the vertical inset height.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.YInsetExtra">
            <summary>
            Gets the extra space needed for the caption height.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005.LocationExtra">
            <summary>
            Gets the extra positioning space.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003">
            <summary>
            Window caption detail implementation for Office2003 visual style.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionOffice2003 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.WindowGotFocus">
            <summary>
            Handle the parent window getting focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.WindowLostFocus">
            <summary>
            Handle the parent window losing focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.NotifyFullTitleText(System.String)">
            <summary>
            Handle a change in the caption bar text.
            </summary>
            <param name="title">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.SetButtonState">
            <summary>
            Update the state of the caption buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.CreateMaxButton">
            <summary>
            Create the button class specific to this implementation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.UpdateCaptionHeight(System.Drawing.Font)">
            <summary>
            Adjust the height of the caption to reflect changed font.
            </summary>
            <param name="captionFont"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.ColorDetails">
            <summary>
            Gets access to the colouring details.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007">
            <summary>
            Window caption detail implementation for Office2007 visual styles.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionOffice2007 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.WindowGotFocus">
            <summary>
            Handle the parent window getting focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.WindowLostFocus">
            <summary>
            Handle the parent window losing focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.NotifyFullTitleText(System.String)">
            <summary>
            Handle a change in the caption bar text.
            </summary>
            <param name="title">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.SetButtonState">
            <summary>
            Update the state of the caption buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.CreateMaxButton">
            <summary>
            Create the button class specific to this implementation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.UpdateCaptionHeight(System.Drawing.Font)">
            <summary>
            Adjust the height of the caption to reflect changed font.
            </summary>
            <param name="captionFont"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.ColorDetails">
            <summary>
            Gets access to the colouring details.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Office2007CaptionButton">
            <summary>
            Derived class to draw the background to match the caption.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ButtonWithStyle">
            <summary>
            Styled button class that does not take the focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.#ctor">
            <summary>
            Initializes a new instance of the ButtonWithStyle class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetBackColor">
            <summary>
            Resets the Direction property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default button; otherwise false.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetImage">
            <summary>
            Reset the Image property to its default.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetDirection">
            <summary>
            Resets the Direction property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetTextEdge">
            <summary>
            Resets the TextEdge property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetTextAlignH">
            <summary>
            Resets the TextAlignH property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetTextAlignV">
            <summary>
            Resets the TextAlignV property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetButtonStyle">
            <summary>
            Resets the ButtonStyle property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetPushed">
            <summary>
            Resets the Pushed property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetImageAttributes">
            <summary>
            Resets the ImageAttributes property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetImageAttributesOver">
            <summary>
            Resets the ImageAttributesOver property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetStaticIDE">
            <summary>
            Resets the StaticIDE property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetAlwaysDrawEnabled">
            <summary>
            Resets the AlwaysDrawEnabled property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetAlwaysDrawBorder">
            <summary>
            Resets the AlwaysDrawBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetDrawBackground">
            <summary>
            Resets the AlwaysDrawEnabled property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetOffice2003GradBack">
            <summary>
            Resets the Office2003GradBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetIDE2005GradBack">
            <summary>
            Resets the IDE2005GradBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.PerformClick">
            <summary>
            Generates a Click event for a button style command.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ResetMouseState">
            <summary>
            Reset the internal state of the mouse handler.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.CanProcessMnemonic">
            <summary>
            Gets a value indicating is processing of mnemonics should be allowed.
            </summary>
            <returns>True to allow; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ButtonWithStyle.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the button is clicked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Image">
            <summary>
            Gets or sets the image to use for display.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Style">
            <summary>
            Gets or sets the visual style of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Direction">
            <summary>
            Gets or sets the direction of commands.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.TextEdge">
            <summary>
            Gets or sets the text edge used for commands displaying text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.TextAlignH">
            <summary>
            Gets or sets the horizontal text line alignment.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.TextAlignV">
            <summary>
            Gets or sets the vertical text line alignment.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Pushed">
            <summary>
            Gets and sets the pushed state of the button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ImageAttributes">
            <summary>
            Gets or sets the extra attributes applied to drawing images.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.ImageAttributesOver">
            <summary>
            Gets or sets the extra attributes applied to drawing images when the mouse is over the image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.StaticIDE">
            <summary>
            Gets and sets a value indicating if the IDE style should raise images.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.AlwaysDrawEnabled">
            <summary>
            Gets and sets a value indicating if the button should always drawn in enabled state.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.AlwaysDrawBorder">
            <summary>
            Gets and sets a value indicating if the button should always have a border drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.DrawBackground">
            <summary>
            Gets and sets a value indicating if the background should be drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.Office2003GradBack">
            <summary>
            Gets and sets a value indicating if the background should be drawn with a gradient when using Office2003 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ButtonWithStyle.IDE2005GradBack">
            <summary>
            Gets and sets a value indicating if the background should be drawn with a gradient when using IDE2005 style.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Office2007CaptionButton.#ctor(Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007)">
            <summary>
            Initialize a new instance of the Office2007CaptionButton class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Office2007CaptionButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer">
            <summary>
            Window caption detail implementation for MediaPlayer visual styles.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionMediaPlayer class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Reference to owning window content.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.WindowGotFocus">
            <summary>
            Handle the parent window getting focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.WindowLostFocus">
            <summary>
            Handle the parent window losing focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.NotifyFullTitleText(System.String)">
            <summary>
            Handle a change in the caption bar text.
            </summary>
            <param name="title">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.ParentStateChanged(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Handle a change in the state of the parent window.
            </summary>
            <param name="newState">New value of the property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.RemovedFromParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being removed from the parent window.
            </summary>
            <param name="parent">Window parent we are removed from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.AddedToParent(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Handle the detail being added to a parent window.
            </summary>
            <param name="parent">Window parent we are added to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.DefineButtonRemapping">
            <summary>
            Calculate which button recolors should be remapped.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.OnAddMaximizeInterface">
            <summary>
            Process the maximize interface being added.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.UpdateAutoHideImage">
            <summary>
            Update the appearance of the auto hide image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.UpdateMaximizeImage">
            <summary>
            Update the appearance of the maximize image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.SetButtonState">
            <summary>
            Update the state of the caption buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.RecalculateButtons">
            <summary>
            Calculate the visibility and position of buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.CreateMaxButton">
            <summary>
            Create the button class specific to this implementation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.CreateButtons">
            <summary>
            Create button required for caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.UpdateCaptionHeight(System.Drawing.Font)">
            <summary>
            Adjust the height of the caption to reflect changed font.
            </summary>
            <param name="captionFont"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.ColorDetails">
            <summary>
            Gets access to the colouring details.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer.Images">
            <summary>
            Let derived classes image specific images.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.MediaPlayerCaptionButton">
            <summary>
            Derived class to draw the background to match the caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.MediaPlayerCaptionButton.#ctor(Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer)">
            <summary>
            Initialize a new instance of the MediaPlayerCaptionButton class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.MediaPlayerCaptionButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Office2003CaptionButton">
            <summary>
            Derived class to draw the background to match the caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Office2003CaptionButton.#ctor(Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003)">
            <summary>
            Initialize a new instance of the Office2003Button class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Office2003CaptionButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.IDE2005CaptionButton">
            <summary>
            Derived class to draw the background to match the caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IDE2005CaptionButton.#ctor(Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005)">
            <summary>
            Initialize a new instance of the IDE2005Button class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IDE2005CaptionButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneReposition">
            <summary>
            Hot zone representing a content being positioned to an edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZone">
            <summary>
            Base class for specific hot zones.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the HotZone class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">Screen area to display with rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.ApplyChange(System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Apply the hot zone change.
            </summary>
            <param name="screenPos">Screen position when change applied.</param>
            <param name="parent">Parent redocker instance.</param>
            <returns>true is successful; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.UpdateForMousePosition(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Update the screen indication to reflect new mouse position.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="screenPos">New screen position.</param>
            <param name="parent">Parent redocker instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.DrawIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Draw the zone indicator to the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.RemoveIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Remove the zone indicator from the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZone.DrawFeedback(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Rectangle)">
            <summary>
            Draw a reversible rectangle on the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="rect">Screen bounding rectangle.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotZone.HotArea">
            <summary>
            Gets the screen hot area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotZone.NewSize">
            <summary>
            Gets and sets the screen display rectangle area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotZone.DragWidth">
            <summary>
            Gets the width of the drag rectangle.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneReposition.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Docking.State,System.Boolean)">
            <summary>
            Initializes a new instance of the HotZoneFloating class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">New size of hot zone.</param>
            <param name="state">New state of content.</param>
            <param name="inner">Repositioned to the inner edge.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneReposition.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Docking.State,System.Int32)">
            <summary>
            Initializes a new instance of the HotZoneFloating class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">New size of hot zone.</param>
            <param name="state">New state of content.</param>
            <param name="newIndex">New index within a zone.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneReposition.ApplyChange(System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Apply the hot zone change.
            </summary>
            <param name="screenPos">Screen position when change applied.</param>
            <param name="parent">Parent redocker instance.</param>
            <returns>true is successful; otherwise false.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotAreaInside">
            <summary>
            Handle the mouse over the client area of a docking container.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaInside.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Rectangle,System.Int32,System.Int32,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the HotAreaInside class.
            </summary>
            <param name="squares">Squares or diamonds.</param>
            <param name="manager">Reference to docking manager.</param>
            <param name="insideRect">Screen rectangle of inside container area.</param>
            <param name="vectorV">New vertical vector.</param>
            <param name="vectorH">New horizontal vector.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaInside.FindHotZone(System.Drawing.Point,Crownwood.DotNetMagic.Docking.HotZone,System.Boolean@)">
            <summary>
            Find the new hot zone to use.
            </summary>
            <param name="mousePos">Screen mouse position.</param>
            <param name="hotZone">Incoming hot zone.</param>
            <param name="suppress">Suppress subsequent indicators.</param>
            <returns>New hot zone.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaInside.Cleanup">
            <summary>
            Cleanup because tracking has finished.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeCache">
            <summary>
            Represents a single node in the data hierarchy.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCache.#ctor">
            <summary>
            Initialize a new instance of the NodeCache class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCache.InvalidateSize">
            <summary>
            Mark the node to indicate that its size need recalculating.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.TreeControl">
            <summary>
            Gets and sets the associated TreeControl instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.ParentNode">
            <summary>
            Gets and sets the associated TreeControl instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.IsSizeDirty">
            <summary>
            Gets a value indicating if the size of the node needs recalculating.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.Size">
            <summary>
            Gets and sets the size of the node..
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.Bounds">
            <summary>
            Gets and sets the bounding rectangle of node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCache.ChildBounds">
            <summary>
            Gets and sets the bounding rectangle of node and all children.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TitleButton">
            <summary>
            Definition of a button to appear on the TitleBar.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.#ctor">
            <summary>
            Initialize a new instance of the TitleButton class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.ResetEnabled">
            <summary>
            Resets the Enabled property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.ResetVisible">
            <summary>
            Resets the Visible property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.ResetImage">
            <summary>
            Resets the Image property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.ResetPictureBorder">
            <summary>
            Resets the PictureBorder property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.PerformClick">
            <summary>
            Fires the Click event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButton.OnPropertyChanged(System.EventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleButton.Click">
            <summary>
            Occurs when user clicks the button.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleButton.PropertyChanged">
            <summary>
            Occurs when a property changes value.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButton.Enabled">
            <summary>
            Gets and sets the enabled state of button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButton.Visible">
            <summary>
            Gets and sets the visible state of button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButton.Image">
            <summary>
            Gets and sets the Image for the button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButton.PictureBorder">
            <summary>
            Gets and sets the border space around the image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButton.Control">
            <summary>
            Gets and sets the associated ButtonWithStyle instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DrawHelper">
            <summary>
            Collection of static helper routines for drawing visual elements.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.RawTextSize(System.Drawing.Graphics,System.Drawing.Font,System.String)">
            <summary>
            Get the size required to draw the text using a raw sizing.
            </summary>
            <param name="g">Graphics object used to find size.</param>
            <param name="font">Font used to calculate size.</param>
            <param name="text">String to be measured.</param>
            <returns>Size of the rectangle large enough to enclose text.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawReverseString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
            Draw a string in the reverse direction.
            </summary>
            <param name="g">Graphics object used for drawing.</param>
            <param name="drawText">Text string to be drawn.</param>
            <param name="drawFont">Font to draw string using.</param>
            <param name="drawRect">Destination rectangle for string.</param>
            <param name="drawBrush">String text drawing brush.</param>
            <param name="drawFormat">Format flags appropriate for this operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawPlainRaisedBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw a three pixel wide border to given a raised appearance.
            </summary>
            <param name="g">Graphics object used to perform drawing.</param>
            <param name="rect">Draw raised edge inside the rectangle.</param>
            <param name="lightLight">Color used for drawing light lines.</param>
            <param name="baseColor">Color used for drawing base lines.</param>
            <param name="dark">Color used for drawing dark lines.</param>
            <param name="darkDark">Color used for drawing very dark lines.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawPlainRaisedBorderTopOrBottom(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw a three pixel wide raised border at either the top or bottom of rectangle.
            </summary>
            <param name="g">Graphics object used to perform drawing.</param>
            <param name="rect">Draw raised edge inside the rectangle.</param>
            <param name="lightLight">Color used for drawing light lines.</param>
            <param name="baseColor">Color used for drawing base lines.</param>
            <param name="dark">Color used for drawing dark lines.</param>
            <param name="darkDark">Color used for drawing very dark lines.</param>
            <param name="drawTop">Should border be drawn at top or bottom edge.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawPlainSunkenBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw a three pixel wide border to given a sunken appearance.
            </summary>
            <param name="g">Graphics object used to perform drawing.</param>
            <param name="rect">Draw raised edge inside the rectangle.</param>
            <param name="lightLight">Color used for drawing light lines.</param>
            <param name="baseColor">Color used for drawing base lines.</param>
            <param name="dark">Color used for drawing dark lines.</param>
            <param name="darkDark">Color used for drawing very dark lines.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawPlainSunkenBorderTopOrBottom(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw a three pixel wide sunken border at either the top or bottom of rectangle.
            </summary>
            <param name="g">Graphics object used to perform drawing.</param>
            <param name="rect">Draw raised edge inside the rectangle.</param>
            <param name="lightLight">Color used for drawing light lines.</param>
            <param name="baseColor">Color used for drawing base lines.</param>
            <param name="dark">Color used for drawing dark lines.</param>
            <param name="darkDark">Color used for drawing very dark lines.</param>
            <param name="drawTop">Should border be drawn at top or bottom edge.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawDragRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw a dragging rectangle inside the given rectangle with requested indent thickness.
            </summary>
            <param name="newRect">Draw inside this rectangle.</param>
            <param name="indent">Thickness of lines inside rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.DrawDragRectangles(System.Drawing.Rectangle[],System.Int32)">
            <summary>
            Draw a multiple dragging rectangles with requested indent thickness.
            </summary>
            <param name="newRects">Draw inside each rectangle.</param>
            <param name="indent">Thickness of lines inside rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DrawHelper.AccurateMeasureString(System.Drawing.Graphics,System.Drawing.Font,System.String)">
            <summary>
            Return an accurate measurement of text string dimensions.
            </summary>
            <param name="g">Reference to graphics object.</param>
            <param name="f">Font to use when measuring.</param>
            <param name="text">Text to be measured.</param>
            <returns>Integer based size of string.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabPageDesigner">
            <summary>
            Designer used in conjunction with TabPage class.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPageDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPageDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.AreaObscurer">
            <summary>
            Used to obscrure an area of the screen to hide form changes underneath.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.AreaObscurer.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initialize a new instance of the ControlObscurer class.
            </summary>
            <param name="f">Form to obscure.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.AreaObscurer.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the ControlObscurer class.
            </summary>
            <param name="c">Control to obscure.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.AreaObscurer.Dispose">
            <summary>
            Hide the obscurer from display.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.AreaObscurer.ObscurerForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="e">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.AreaObscurer.ObscurerForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.THEMESIZE">
            <summary>
            Specifies the type of size requested.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.THEMESIZE.TS_MIN">
            <summary>
            Specifies the TS_MIN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.THEMESIZE.TS_TRUE">
            <summary>
            Specifies the TS_TRUE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.THEMESIZE.TS_DRAW">
            <summary>
            Specifies the TS_DRAW enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ThemeButtonPart">
            <summary>
            Specifies the theme parts for a Button
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonPart.PushButton">
            <summary>
            Specifies the PushButton enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonPart.RadioButton">
            <summary>
            Specifies the RadioButton enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonPart.Checkbox">
            <summary>
            Specifies the Checkbox enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonPart.Groupbox">
            <summary>
            Specifies the Groupbox enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonPart.UserButton">
            <summary>
            Specifies the UserButton enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState">
            <summary>
            Specifies the theme states for a Button Checkbox
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.UncheckedNormal">
            <summary>
            Specifies the UncheckedNormal enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.UncheckedHot">
            <summary>
            Specifies the UncheckedHot enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.UncheckedPressed">
            <summary>
            Specifies the UncheckedPressed enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.UncheckedDisabled">
            <summary>
            Specifies the UncheckedDisabled enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.CheckedNormal">
            <summary>
            Specifies the CheckedNormal enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.CheckedHot">
            <summary>
            Specifies the CheckedHot enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.CheckedPressed">
            <summary>
            Specifies the CheckedPressed enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.CheckedDisabled">
            <summary>
            Specifies the CheckedDisabled enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.MixedNormal">
            <summary>
            Specifies the MixedNormal enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.MixedHot">
            <summary>
            Specifies the MixedHot enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.MixedPressed">
            <summary>
            Specifies the MixedPressed enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeButtonCheckboxState.MixedDisabled">
            <summary>
            Specifies the MixedDisabled enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ThemeTreeViewPart">
            <summary>
            Specifies the theme parts for a TreeView
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewPart.TreeItem">
            <summary>
            Specifies the TreeItem enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewPart.Glyph">
            <summary>
            Specifies the Glyph enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewPart.Branch">
            <summary>
            Specifies the Branch enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState">
            <summary>
            Specifies the theme states for a TreeView TreeItem
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState.Normal">
            <summary>
            Specifies the Normal enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState.Hot">
            <summary>
            Specifies the Hot enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState.Selected">
            <summary>
            Specifies the Selected enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState.Disabled">
            <summary>
            Specifies the Disabled enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewItemState.SelectedNotFocus">
            <summary>
            Specifies the SelectedNotFocus enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ThemeTreeViewGlyphState">
            <summary>
            Specifies the theme states for a TreeView Glyph
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewGlyphState.Closed">
            <summary>
            Specifies the Closed enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ThemeTreeViewGlyphState.Open">
            <summary>
            Specifies the Open enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.PeekMessageFlags">
            <summary>
            Specifies values from PeekMessageFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PeekMessageFlags.PM_NOREMOVE">
            <summary>
            Specified PM_NOREMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PeekMessageFlags.PM_REMOVE">
            <summary>
            Specified PM_REMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PeekMessageFlags.PM_NOYIELD">
            <summary>
            Specified PM_NOYIELD enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SetWindowPosFlags">
            <summary>
            Specifies values from SetWindowPosFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOSIZE">
            <summary>
            Specified SWP_NOSIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOMOVE">
            <summary>
            Specified SWP_NOMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOZORDER">
            <summary>
            Specified SWP_NOZORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            Specified SWP_NOREDRAW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Specified SWP_NOACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Specified SWP_FRAMECHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            Specified SWP_SHOWWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            Specified SWP_HIDEWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Specified SWP_NOCOPYBITS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            Specified SWP_NOOWNERZORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            Specified SWP_NOSENDCHANGING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>
            Specified SWP_DRAWFRAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>
            Specified SWP_NOREPOSITION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>
            Specified SWP_DEFERERASE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            Specified SWP_ASYNCWINDOWPOS enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SetWindowPosZ">
            <summary>
            Specifies values from SetWindowPosZ enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosZ.HWND_TOP">
            <summary>
            Specified HWND_TOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosZ.HWND_BOTTOM">
            <summary>
            Specified HWND_BOTTOM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosZ.HWND_TOPMOST">
            <summary>
            Specified HWND_TOPMOST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SetWindowPosZ.HWND_NOTOPMOST">
            <summary>
            Specified HWND_NOTOPMOST enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.ShowWindowStyles">
            <summary>
            Specifies values from ShowWindowStyles enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_HIDE">
            <summary>
            Specified SW_HIDE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWNORMAL">
            <summary>
            Specified SW_SHOWNORMAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_NORMAL">
            <summary>
            Specified SW_NORMAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWMINIMIZED">
            <summary>
            Specified SW_SHOWMINIMIZED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWMAXIMIZED">
            <summary>
            Specified SW_SHOWMAXIMIZED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_MAXIMIZE">
            <summary>
            Specified SW_MAXIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWNOACTIVATE">
            <summary>
            Specified SW_SHOWNOACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOW">
            <summary>
            Specified SW_SHOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_MINIMIZE">
            <summary>
            Specified SW_MINIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWMINNOACTIVE">
            <summary>
            Specified SW_SHOWMINNOACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWNA">
            <summary>
            Specified SW_SHOWNA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_RESTORE">
            <summary>
            Specified SW_RESTORE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_SHOWDEFAULT">
            <summary>
            Specified SW_SHOWDEFAULT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_FORCEMINIMIZE">
            <summary>
            Specified SW_FORCEMINIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.ShowWindowStyles.SW_MAX">
            <summary>
            Specified SW_MAX enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.WindowStyles">
            <summary>
            Specifies values from WindowStyles enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_OVERLAPPED">
            <summary>
            Specified WS_OVERLAPPED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_POPUP">
            <summary>
            Specified WS_POPUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_CHILD">
            <summary>
            Specified WS_CHILD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_MINIMIZE">
            <summary>
            Specified WS_MINIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_VISIBLE">
            <summary>
            Specified WS_VISIBLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_DISABLED">
            <summary>
            Specified WS_DISABLED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Specified WS_CLIPSIBLINGS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_CLIPCHILDREN">
            <summary>
            Specified WS_CLIPCHILDREN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_MAXIMIZE">
            <summary>
            Specified WS_MAXIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_CAPTION">
            <summary>
            Specified WS_CAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_BORDER">
            <summary>
            Specified WS_BORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_DLGFRAME">
            <summary>
            Specified WS_DLGFRAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_VSCROLL">
            <summary>
            Specified WS_VSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_HSCROLL">
            <summary>
            Specified WS_HSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_SYSMENU">
            <summary>
            Specified WS_SYSMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_THICKFRAME">
            <summary>
            Specified WS_THICKFRAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_GROUP">
            <summary>
            Specified WS_GROUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_TABSTOP">
            <summary>
            Specified WS_TABSTOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_MINIMIZEBOX">
            <summary>
            Specified WS_MINIMIZEBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_MAXIMIZEBOX">
            <summary>
            Specified WS_MAXIMIZEBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_TILED">
            <summary>
            Specified WS_TILED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_ICONIC">
            <summary>
            Specified WS_ICONIC enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_SIZEBOX">
            <summary>
            Specified WS_SIZEBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_POPUPWINDOW">
            <summary>
            Specified WS_POPUPWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>
            Specified WS_OVERLAPPEDWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_TILEDWINDOW">
            <summary>
            Specified WS_TILEDWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowStyles.WS_CHILDWINDOW">
            <summary>
            Specified WS_CHILDWINDOW enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.WindowExStyles">
            <summary>
            Specifies values from WindowExStyles enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_DLGMODALFRAME">
            <summary>
            Specified WS_EX_DLGMODALFRAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specified WS_EX_NOPARENTNOTIFY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_TOPMOST">
            <summary>
            Specified WS_EX_TOPMOST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_ACCEPTFILES">
            <summary>
            Specified WS_EX_ACCEPTFILES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_TRANSPARENT">
            <summary>
            Specified WS_EX_TRANSPARENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_MDICHILD">
            <summary>
            Specified WS_EX_MDICHILD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_TOOLWINDOW">
            <summary>
            Specified WS_EX_TOOLWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_WINDOWEDGE">
            <summary>
            Specified WS_EX_WINDOWEDGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_CLIENTEDGE">
            <summary>
            Specified WS_EX_CLIENTEDGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_CONTEXTHELP">
            <summary>
            Specified WS_EX_CONTEXTHELP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_RIGHT">
            <summary>
            Specified WS_EX_RIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_LEFT">
            <summary>
            Specified WS_EX_LEFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_RTLREADING">
            <summary>
            Specified WS_EX_RTLREADING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_LTRREADING">
            <summary>
            Specified WS_EX_LTRREADING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_LEFTSCROLLBAR">
            <summary>
            Specified WS_EX_LEFTSCROLLBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Specified WS_EX_RIGHTSCROLLBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_CONTROLPARENT">
            <summary>
            Specified WS_EX_CONTROLPARENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_STATICEDGE">
            <summary>
            Specified WS_EX_STATICEDGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_APPWINDOW">
            <summary>
            Specified WS_EX_APPWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Specified WS_EX_OVERLAPPEDWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_PALETTEWINDOW">
            <summary>
            Specified WS_EX_PALETTEWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WindowExStyles.WS_EX_LAYERED">
            <summary>
            Specified WS_EX_LAYERED enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.VirtualKeys">
            <summary>
            Specifies values from VirtualKeys enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LBUTTON">
            <summary>
            Specified VK_LBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_CANCEL">
            <summary>
            Specified VK_CANCEL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_BACK">
            <summary>
            Specified VK_BACK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_TAB">
            <summary>
            Specified VK_TAB enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_CLEAR">
            <summary>
            Specified VK_CLEAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RETURN">
            <summary>
            Specified VK_RETURN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SHIFT">
            <summary>
            Specified VK_SHIFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_CONTROL">
            <summary>
            Specified VK_CONTROL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_MENU">
            <summary>
            Specified VK_MENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_CAPITAL">
            <summary>
            Specified VK_CAPITAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_ESCAPE">
            <summary>
            Specified VK_ESCAPE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SPACE">
            <summary>
            Specified VK_SPACE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_PRIOR">
            <summary>
            Specified VK_PRIOR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NEXT">
            <summary>
            Specified VK_NEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_END">
            <summary>
            Specified VK_END enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_HOME">
            <summary>
            Specified VK_HOME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LEFT">
            <summary>
            Specified VK_LEFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_UP">
            <summary>
            Specified VK_UP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RIGHT">
            <summary>
            Specified VK_RIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_DOWN">
            <summary>
            Specified VK_DOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SELECT">
            <summary>
            Specified VK_SELECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_EXECUTE">
            <summary>
            Specified VK_EXECUTE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SNAPSHOT">
            <summary>
            Specified VK_SNAPSHOT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_HELP">
            <summary>
            Specified VK_HELP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_0">
            <summary>
            Specified VK_0 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_1">
            <summary>
            Specified VK_1 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_2">
            <summary>
            Specified VK_2 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_3">
            <summary>
            Specified VK_3 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_4">
            <summary>
            Specified VK_4 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_5">
            <summary>
            Specified VK_5 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_6">
            <summary>
            Specified VK_6 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_7">
            <summary>
            Specified VK_7 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_8">
            <summary>
            Specified VK_8 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_9">
            <summary>
            Specified VK_9 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_A">
            <summary>
            Specified VK_A enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_B">
            <summary>
            Specified VK_B enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_C">
            <summary>
            Specified VK_C enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_D">
            <summary>
            Specified VK_D enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_E">
            <summary>
            Specified VK_E enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_F">
            <summary>
            Specified VK_F enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_G">
            <summary>
            Specified VK_G enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_H">
            <summary>
            Specified VK_H enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_I">
            <summary>
            Specified VK_I enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_J">
            <summary>
            Specified VK_J enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_K">
            <summary>
            Specified VK_K enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_L">
            <summary>
            Specified VK_L enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_M">
            <summary>
            Specified VK_M enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_N">
            <summary>
            Specified VK_N enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_O">
            <summary>
            Specified VK_O enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_P">
            <summary>
            Specified VK_P enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_Q">
            <summary>
            Specified VK_Q enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_R">
            <summary>
            Specified VK_R enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_S">
            <summary>
            Specified VK_S enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_T">
            <summary>
            Specified VK_T enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_U">
            <summary>
            Specified VK_U enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_V">
            <summary>
            Specified VK_V enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_W">
            <summary>
            Specified VK_W enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_X">
            <summary>
            Specified VK_X enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_Y">
            <summary>
            Specified VK_Y enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_Z">
            <summary>
            Specified VK_Z enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD0">
            <summary>
            Specified VK_NUMPAD0 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD1">
            <summary>
            Specified VK_NUMPAD1 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD2">
            <summary>
            Specified VK_NUMPAD2 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD3">
            <summary>
            Specified VK_NUMPAD3 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD4">
            <summary>
            Specified VK_NUMPAD4 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD5">
            <summary>
            Specified VK_NUMPAD5 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD6">
            <summary>
            Specified VK_NUMPAD6 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD7">
            <summary>
            Specified VK_NUMPAD7 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD8">
            <summary>
            Specified VK_NUMPAD8 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NUMPAD9">
            <summary>
            Specified VK_NUMPAD9 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_MULTIPLY">
            <summary>
            Specified VK_MULTIPLY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_ADD">
            <summary>
            Specified VK_ADD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SEPARATOR">
            <summary>
            Specified VK_SEPARATOR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_SUBTRACT">
            <summary>
            Specified VK_SUBTRACT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_DECIMAL">
            <summary>
            Specified VK_DECIMAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_DIVIDE">
            <summary>
            Specified VK_DIVIDE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_F10">
            <summary>
            Specified VK_F10 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_ATTN">
            <summary>
            Specified VK_ATTN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_CRSEL">
            <summary>
            Specified VK_CRSEL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_EXSEL">
            <summary>
            Specified VK_EXSEL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_EREOF">
            <summary>
            Specified VK_EREOF enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_PLAY">
            <summary>
            Specified VK_PLAY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_ZOOM">
            <summary>
            Specified VK_ZOOM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_NONAME">
            <summary>
            Specified VK_NONAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_PA1">
            <summary>
            Specified VK_PA1 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_OEM_CLEAR">
            <summary>
            Specified VK_OEM_CLEAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LWIN">
            <summary>
            Specified VK_LWIN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RWIN">
            <summary>
            Specified VK_RWIN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_APPS">
            <summary>
            Specified VK_APPS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LSHIFT">
            <summary>
            Specified VK_LSHIFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RSHIFT">
            <summary>
            Specified VK_RSHIFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LCONTROL">
            <summary>
            Specified VK_LCONTROL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RCONTROL">
            <summary>
            Specified VK_RCONTROL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_LMENU">
            <summary>
            Specified VK_LMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.VirtualKeys.VK_RMENU">
            <summary>
            Specified VK_RMENU enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.Msgs">
            <summary>
            Specifies values from Msgs enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NULL">
            <summary>
            Specified WM_NULL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CREATE">
            <summary>
            Specified WM_CREATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DESTROY">
            <summary>
            Specified WM_DESTROY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOVE">
            <summary>
            Specified WM_MOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SIZE">
            <summary>
            Specified WM_SIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ACTIVATE">
            <summary>
            Specified WM_ACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETFOCUS">
            <summary>
            Specified WM_SETFOCUS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_KILLFOCUS">
            <summary>
            Specified WM_KILLFOCUS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ENABLE">
            <summary>
            Specified WM_ENABLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETREDRAW">
            <summary>
            Specified WM_SETREDRAW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETTEXT">
            <summary>
            Specified WM_SETTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETTEXT">
            <summary>
            Specified WM_GETTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETTEXTLENGTH">
            <summary>
            Specified WM_GETTEXTLENGTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PAINT">
            <summary>
            Specified WM_PAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CLOSE">
            <summary>
            Specified WM_CLOSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUERYENDSESSION">
            <summary>
            Specified WM_QUERYENDSESSION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUIT">
            <summary>
            Specified WM_QUIT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUERYOPEN">
            <summary>
            Specified WM_QUERYOPEN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ERASEBKGND">
            <summary>
            Specified WM_ERASEBKGND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSCOLORCHANGE">
            <summary>
            Specified WM_SYSCOLORCHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ENDSESSION">
            <summary>
            Specified WM_ENDSESSION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SHOWWINDOW">
            <summary>
            Specified WM_SHOWWINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_WININICHANGE">
            <summary>
            Specified WM_WININICHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETTINGCHANGE">
            <summary>
            Specified WM_SETTINGCHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DEVMODECHANGE">
            <summary>
            Specified WM_DEVMODECHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ACTIVATEAPP">
            <summary>
            Specified WM_ACTIVATEAPP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_FONTCHANGE">
            <summary>
            Specified WM_FONTCHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_TIMECHANGE">
            <summary>
            Specified WM_TIMECHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CANCELMODE">
            <summary>
            Specified WM_CANCELMODE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETCURSOR">
            <summary>
            Specified WM_SETCURSOR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOUSEACTIVATE">
            <summary>
            Specified WM_MOUSEACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CHILDACTIVATE">
            <summary>
            Specified WM_CHILDACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUEUESYNC">
            <summary>
            Specified WM_QUEUESYNC enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETMINMAXINFO">
            <summary>
            Specified WM_GETMINMAXINFO enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PAINTICON">
            <summary>
            Specified WM_PAINTICON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ICONERASEBKGND">
            <summary>
            Specified WM_ICONERASEBKGND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NEXTDLGCTL">
            <summary>
            Specified WM_NEXTDLGCTL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SPOOLERSTATUS">
            <summary>
            Specified WM_SPOOLERSTATUS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DRAWITEM">
            <summary>
            Specified WM_DRAWITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MEASUREITEM">
            <summary>
            Specified WM_MEASUREITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DELETEITEM">
            <summary>
            Specified WM_DELETEITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_VKEYTOITEM">
            <summary>
            Specified WM_VKEYTOITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CHARTOITEM">
            <summary>
            Specified WM_CHARTOITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETFONT">
            <summary>
            Specified WM_SETFONT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETFONT">
            <summary>
            Specified WM_GETFONT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETHOTKEY">
            <summary>
            Specified WM_SETHOTKEY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETHOTKEY">
            <summary>
            Specified WM_GETHOTKEY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUERYDRAGICON">
            <summary>
            Specified WM_QUERYDRAGICON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COMPAREITEM">
            <summary>
            Specified WM_COMPAREITEM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETOBJECT">
            <summary>
            Specified WM_GETOBJECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COMPACTING">
            <summary>
            Specified WM_COMPACTING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COMMNOTIFY">
            <summary>
            Specified WM_COMMNOTIFY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_WINDOWPOSCHANGING">
            <summary>
            Specified WM_WINDOWPOSCHANGING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_WINDOWPOSCHANGED">
            <summary>
            Specified WM_WINDOWPOSCHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_POWER">
            <summary>
            Specified WM_POWER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COPYDATA">
            <summary>
            Specified WM_COPYDATA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CANCELJOURNAL">
            <summary>
            Specified WM_CANCELJOURNAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NOTIFY">
            <summary>
            Specified WM_NOTIFY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_INPUTLANGCHANGEREQUEST">
            <summary>
            Specified WM_INPUTLANGCHANGEREQUEST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_INPUTLANGCHANGE">
            <summary>
            Specified WM_INPUTLANGCHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_TCARD">
            <summary>
            Specified WM_TCARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HELP">
            <summary>
            Specified WM_HELP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_USERCHANGED">
            <summary>
            Specified WM_USERCHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NOTIFYFORMAT">
            <summary>
            Specified WM_NOTIFYFORMAT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CONTEXTMENU">
            <summary>
            Specified WM_CONTEXTMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_STYLECHANGING">
            <summary>
            Specified WM_STYLECHANGING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_STYLECHANGED">
            <summary>
            Specified WM_STYLECHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DISPLAYCHANGE">
            <summary>
            Specified WM_DISPLAYCHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETICON">
            <summary>
            Specified WM_GETICON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SETICON">
            <summary>
            Specified WM_SETICON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCCREATE">
            <summary>
            Specified WM_NCCREATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCDESTROY">
            <summary>
            Specified VK_RMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCCALCSIZE">
            <summary>
            Specified WM_NCCALCSIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCHITTEST">
            <summary>
            Specified WM_NCHITTEST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCPAINT">
            <summary>
            Specified WM_NCPAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCACTIVATE">
            <summary>
            Specified WM_NCACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_GETDLGCODE">
            <summary>
            Specified WM_GETDLGCODE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYNCPAINT">
            <summary>
            Specified WM_SYNCPAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCMOUSEMOVE">
            <summary>
            Specified WM_NCMOUSEMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCLBUTTONDOWN">
            <summary>
            Specified WM_NCLBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCLBUTTONUP">
            <summary>
            Specified WM_NCLBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCLBUTTONDBLCLK">
            <summary>
            Specified WM_NCLBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCRBUTTONDOWN">
            <summary>
            Specified WM_NCRBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCRBUTTONUP">
            <summary>
            Specified WM_NCRBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCRBUTTONDBLCLK">
            <summary>
            Specified WM_NCRBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCMBUTTONDOWN">
            <summary>
            Specified WM_NCMBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCMBUTTONUP">
            <summary>
            Specified WM_NCMBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCMBUTTONDBLCLK">
            <summary>
            Specified WM_NCMBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCXBUTTONDOWN">
            <summary>
            Specified WM_NCXBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCXBUTTONUP">
            <summary>
            Specified WM_NCXBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_KEYDOWN">
            <summary>
            Specified WM_KEYDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_KEYUP">
            <summary>
            Specified WM_KEYUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CHAR">
            <summary>
            Specified WM_CHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DEADCHAR">
            <summary>
            Specified WM_DEADCHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSKEYDOWN">
            <summary>
            Specified WM_SYSKEYDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSKEYUP">
            <summary>
            Specified WM_SYSKEYUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSCHAR">
            <summary>
            Specified WM_SYSCHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSDEADCHAR">
            <summary>
            Specified WM_SYSDEADCHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_KEYLAST">
            <summary>
            Specified WM_KEYLAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_STARTCOMPOSITION">
            <summary>
            Specified WM_IME_STARTCOMPOSITION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_ENDCOMPOSITION">
            <summary>
            Specified WM_IME_ENDCOMPOSITION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_COMPOSITION">
            <summary>
            Specified WM_IME_COMPOSITION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_KEYLAST">
            <summary>
            Specified WM_IME_KEYLAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_INITDIALOG">
            <summary>
            Specified WM_INITDIALOG enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COMMAND">
            <summary>
            Specified WM_COMMAND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SYSCOMMAND">
            <summary>
            Specified WM_SYSCOMMAND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_TIMER">
            <summary>
            Specified WM_TIMER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HSCROLL">
            <summary>
            Specified WM_HSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_VSCROLL">
            <summary>
            Specified WM_VSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_INITMENU">
            <summary>
            Specified WM_INITMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_INITMENUPOPUP">
            <summary>
            Specified WM_INITMENUPOPUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENUSELECT">
            <summary>
            Specified WM_MENUSELECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENUCHAR">
            <summary>
            Specified WM_MENUCHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ENTERIDLE">
            <summary>
            Specified WM_ENTERIDLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENURBUTTONUP">
            <summary>
            Specified WM_MENURBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENUDRAG">
            <summary>
            Specified WM_MENUDRAG enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENUGETOBJECT">
            <summary>
            Specified WM_MENUGETOBJECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_UNINITMENUPOPUP">
            <summary>
            Specified WM_UNINITMENUPOPUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MENUCOMMAND">
            <summary>
            Specified WM_MENUCOMMAND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORMSGBOX">
            <summary>
            Specified WM_CTLCOLORMSGBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLOREDIT">
            <summary>
            Specified WM_CTLCOLOREDIT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORLISTBOX">
            <summary>
            Specified WM_CTLCOLORLISTBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORBTN">
            <summary>
            Specified WM_CTLCOLORBTN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORDLG">
            <summary>
            Specified WM_CTLCOLORDLG enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORSCROLLBAR">
            <summary>
            Specified WM_CTLCOLORSCROLLBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CTLCOLORSTATIC">
            <summary>
            Specified WM_CTLCOLORSTATIC enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOUSEMOVE">
            <summary>
            Specified WM_MOUSEMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_LBUTTONDOWN">
            <summary>
            Specified WM_LBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_LBUTTONUP">
            <summary>
            Specified WM_LBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_LBUTTONDBLCLK">
            <summary>
            Specified WM_LBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_RBUTTONDOWN">
            <summary>
            Specified WM_RBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_RBUTTONUP">
            <summary>
            Specified WM_RBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_RBUTTONDBLCLK">
            <summary>
            Specified WM_RBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MBUTTONDOWN">
            <summary>
            Specified WM_MBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MBUTTONUP">
            <summary>
            Specified WM_MBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MBUTTONDBLCLK">
            <summary>
            Specified WM_MBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOUSEWHEEL">
            <summary>
            Specified WM_MOUSEWHEEL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_XBUTTONDOWN">
            <summary>
            Specified WM_XBUTTONDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_XBUTTONUP">
            <summary>
            Specified WM_XBUTTONUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_XBUTTONDBLCLK">
            <summary>
            Specified WM_XBUTTONDBLCLK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PARENTNOTIFY">
            <summary>
            Specified WM_PARENTNOTIFY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ENTERMENULOOP">
            <summary>
            Specified WM_ENTERMENULOOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_EXITMENULOOP">
            <summary>
            Specified WM_EXITMENULOOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NEXTMENU">
            <summary>
            Specified WM_NEXTMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SIZING">
            <summary>
            Specified WM_SIZING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CAPTURECHANGED">
            <summary>
            Specified WM_CAPTURECHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOVING">
            <summary>
            Specified WM_MOVING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DEVICECHANGE">
            <summary>
            Specified WM_DEVICECHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDICREATE">
            <summary>
            Specified WM_MDICREATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIDESTROY">
            <summary>
            Specified WM_MDIDESTROY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIACTIVATE">
            <summary>
            Specified WM_MDIACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIRESTORE">
            <summary>
            Specified WM_MDIRESTORE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDINEXT">
            <summary>
            Specified WM_MDINEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIMAXIMIZE">
            <summary>
            Specified WM_MDIMAXIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDITILE">
            <summary>
            Specified WM_MDITILE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDICASCADE">
            <summary>
            Specified WM_MDICASCADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIICONARRANGE">
            <summary>
            Specified WM_MDIICONARRANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIGETACTIVE">
            <summary>
            Specified WM_MDIGETACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDISETMENU">
            <summary>
            Specified WM_MDISETMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ENTERSIZEMOVE">
            <summary>
            Specified WM_ENTERSIZEMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_EXITSIZEMOVE">
            <summary>
            Specified WM_EXITSIZEMOVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DROPFILES">
            <summary>
            Specified WM_DROPFILES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MDIREFRESHMENU">
            <summary>
            Specified WM_MDIREFRESHMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_SETCONTEXT">
            <summary>
            Specified WM_IME_SETCONTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_NOTIFY">
            <summary>
            Specified WM_IME_NOTIFY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_CONTROL">
            <summary>
            Specified WM_IME_CONTROL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_COMPOSITIONFULL">
            <summary>
            Specified WM_IME_COMPOSITIONFULL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_SELECT">
            <summary>
            Specified WM_IME_SELECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_CHAR">
            <summary>
            Specified WM_IME_CHAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_REQUEST">
            <summary>
            Specified WM_IME_REQUEST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_KEYDOWN">
            <summary>
            Specified WM_IME_KEYDOWN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_IME_KEYUP">
            <summary>
            Specified WM_IME_KEYUP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOUSEHOVER">
            <summary>
            Specified WM_MOUSEHOVER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_NCMOUSELEAVE">
            <summary>
            Specified WM_NCMOUSELEAVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_MOUSELEAVE">
            <summary>
            Specified WM_MOUSELEAVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CUT">
            <summary>
            Specified WM_CUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_COPY">
            <summary>
            Specified WM_COPY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PASTE">
            <summary>
            Specified WM_PASTE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CLEAR">
            <summary>
            Specified WM_CLEAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_UNDO">
            <summary>
            Specified WM_UNDO enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_RENDERFORMAT">
            <summary>
            Specified WM_RENDERFORMAT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_RENDERALLFORMATS">
            <summary>
            Specified WM_RENDERALLFORMATS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DESTROYCLIPBOARD">
            <summary>
            Specified WM_DESTROYCLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_DRAWCLIPBOARD">
            <summary>
            Specified WM_DRAWCLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PAINTCLIPBOARD">
            <summary>
            Specified WM_PAINTCLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_VSCROLLCLIPBOARD">
            <summary>
            Specified WM_VSCROLLCLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_SIZECLIPBOARD">
            <summary>
            Specified WM_SIZECLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_ASKCBFORMATNAME">
            <summary>
            Specified WM_ASKCBFORMATNAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_CHANGECBCHAIN">
            <summary>
            Specified WM_CHANGECBCHAIN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HSCROLLCLIPBOARD">
            <summary>
            Specified WM_HSCROLLCLIPBOARD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_QUERYNEWPALETTE">
            <summary>
            Specified WM_QUERYNEWPALETTE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PALETTEISCHANGING">
            <summary>
            Specified WM_PALETTEISCHANGING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PALETTECHANGED">
            <summary>
            Specified WM_PALETTECHANGED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HOTKEY">
            <summary>
            Specified WM_HOTKEY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PRINT">
            <summary>
            Specified WM_PRINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PRINTCLIENT">
            <summary>
            Specified WM_PRINTCLIENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HANDHELDFIRST">
            <summary>
            Specified WM_HANDHELDFIRST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_HANDHELDLAST">
            <summary>
            Specified WM_HANDHELDLAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_AFXFIRST">
            <summary>
            Specified WM_AFXFIRST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_AFXLAST">
            <summary>
            Specified WM_AFXLAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PENWINFIRST">
            <summary>
            Specified WM_PENWINFIRST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_PENWINLAST">
            <summary>
            Specified WM_PENWINLAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_APP">
            <summary>
            Specified WM_APP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_USER">
            <summary>
            Specified WM_USER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Msgs.WM_THEMECHANGED">
            <summary>
            Specified WM_THEMECHANGED enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.Cursors">
            <summary>
            Specifies values from Cursors enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_ARROW">
            <summary>
            Specified IDC_ARROW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_IBEAM">
            <summary>
            Specified IDC_IBEAM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_WAIT">
            <summary>
            Specified IDC_WAIT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_CROSS">
            <summary>
            Specified IDC_CROSS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_UPARROW">
            <summary>
            Specified IDC_UPARROW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZE">
            <summary>
            Specified IDC_SIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_ICON">
            <summary>
            Specified IDC_ICON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZENWSE">
            <summary>
            Specified IDC_SIZENWSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZENESW">
            <summary>
            Specified IDC_SIZENESW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZEWE">
            <summary>
            Specified IDC_SIZEWE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZENS">
            <summary>
            Specified IDC_SIZENS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_SIZEALL">
            <summary>
            Specified IDC_SIZEALL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_NO">
            <summary>
            Specified IDC_NO enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_HAND">
            <summary>
            Specified IDC_HAND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_APPSTARTING">
            <summary>
            Specified IDC_APPSTARTING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.Cursors.IDC_HELP">
            <summary>
            Specified IDC_HELP enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.TrackerEventFlags">
            <summary>
            Specifies values from TrackerEventFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TrackerEventFlags.TME_HOVER">
            <summary>
            Specified TME_HOVER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TrackerEventFlags.TME_NONCLIENT">
            <summary>
            Specified TME_NONCLIENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TrackerEventFlags.TME_LEAVE">
            <summary>
            Specified TME_LEAVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TrackerEventFlags.TME_QUERY">
            <summary>
            Specified TME_QUERY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TrackerEventFlags.TME_CANCEL">
            <summary>
            Specified TME_CANCEL enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.MouseActivateFlags">
            <summary>
            Specifies values from MouseActivateFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MouseActivateFlags.MA_ACTIVATE">
            <summary>
            Specified MA_ACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MouseActivateFlags.MA_ACTIVATEANDEAT">
            <summary>
            Specified MA_ACTIVATEANDEAT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MouseActivateFlags.MA_NOACTIVATE">
            <summary>
            Specified MA_NOACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MouseActivateFlags.MA_NOACTIVATEANDEAT">
            <summary>
            Specified MA_NOACTIVATEANDEAT enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.DialogCodes">
            <summary>
            Specifies values from DialogCodes enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_WANTARROWS">
            <summary>
            Specified DLGC_WANTARROWS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_WANTTAB">
            <summary>
            Specified DLGC_WANTTAB enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_WANTALLKEYS">
            <summary>
            Specified DLGC_WANTALLKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_WANTMESSAGE">
            <summary>
            Specified DLGC_WANTMESSAGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_HASSETSEL">
            <summary>
            Specified DLGC_HASSETSEL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_DEFPUSHBUTTON">
            <summary>
            Specified DLGC_DEFPUSHBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_UNDEFPUSHBUTTON">
            <summary>
            Specified DLGC_UNDEFPUSHBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_RADIOBUTTON">
            <summary>
            Specified DLGC_RADIOBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_WANTCHARS">
            <summary>
            Specified DLGC_WANTCHARS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_STATIC">
            <summary>
            Specified DLGC_STATIC enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DialogCodes.DLGC_BUTTON">
            <summary>
            Specified DLGC_BUTTON enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.UpdateLayeredWindowsFlags">
            <summary>
            Specifies values from UpdateLayeredWindowsFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.UpdateLayeredWindowsFlags.ULW_COLORKEY">
            <summary>
            Specified ULW_COLORKEY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.UpdateLayeredWindowsFlags.ULW_ALPHA">
            <summary>
            Specified ULW_ALPHA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.UpdateLayeredWindowsFlags.ULW_OPAQUE">
            <summary>
            Specified ULW_OPAQUE enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.AlphaFlags">
            <summary>
            Specifies values from AlphaFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AlphaFlags.AC_SRC_OVER">
            <summary>
            Specified AC_SRC_OVER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AlphaFlags.AC_SRC_ALPHA">
            <summary>
            Specified AC_SRC_ALPHA enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.RasterOperations">
            <summary>
            Specifies values from RasterOperations enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.SRCCOPY">
            <summary>
            Specified SRCCOPY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.SRCPAINT">
            <summary>
            Specified SRCPAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.SRCAND">
            <summary>
            Specified SRCAND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.SRCINVERT">
            <summary>
            Specified SRCINVERT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.SRCERASE">
            <summary>
            Specified SRCERASE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.NOTSRCCOPY">
            <summary>
            Specified NOTSRCCOPY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.NOTSRCERASE">
            <summary>
            Specified NOTSRCERASE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.MERGECOPY">
            <summary>
            Specified MERGECOPY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.MERGEPAINT">
            <summary>
            Specified MERGEPAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.PATCOPY">
            <summary>
            Specified PATCOPY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.PATPAINT">
            <summary>
            Specified PATPAINT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.PATINVERT">
            <summary>
            Specified PATINVERT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.DSTINVERT">
            <summary>
            Specified DSTINVERT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.BLACKNESS">
            <summary>
            Specified BLACKNESS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RasterOperations.WHITENESS">
            <summary>
            Specified WHITENESS enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.BrushStyles">
            <summary>
            Specifies values from BrushStyles enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_SOLID">
            <summary>
            Specified BS_SOLID enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_NULL">
            <summary>
            Specified BS_NULL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_HOLLOW">
            <summary>
            Specified BS_HOLLOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_HATCHED">
            <summary>
            Specified BS_HATCHED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_PATTERN">
            <summary>
            Specified BS_PATTERN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_INDEXED">
            <summary>
            Specified BS_INDEXED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_DIBPATTERN">
            <summary>
            Specified BS_DIBPATTERN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_DIBPATTERNPT">
            <summary>
            Specified BS_DIBPATTERNPT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_PATTERN8X8">
            <summary>
            Specified BS_PATTERN8X8 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_DIBPATTERN8X8">
            <summary>
            Specified BS_DIBPATTERN8X8 enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BrushStyles.BS_MONOPATTERN">
            <summary>
            Specified BS_MONOPATTERN enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.HatchStyles">
            <summary>
            Specifies values from HatchStyles enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_HORIZONTAL">
            <summary>
            Specified HS_HORIZONTAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_VERTICAL">
            <summary>
            Specified HS_VERTICAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_FDIAGONAL">
            <summary>
            Specified HS_FDIAGONAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_BDIAGONAL">
            <summary>
            Specified HS_BDIAGONAL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_CROSS">
            <summary>
            Specified HS_CROSS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HatchStyles.HS_DIAGCROSS">
            <summary>
            Specified HS_DIAGCROSS enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.CombineFlags">
            <summary>
            Specifies values from CombineFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.CombineFlags.RGN_AND">
            <summary>
            Specified RGN_AND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.CombineFlags.RGN_OR">
            <summary>
            Specified RGN_OR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.CombineFlags.RGN_XOR">
            <summary>
            Specified RGN_XOR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.CombineFlags.RGN_DIFF">
            <summary>
            Specified RGN_DIFF enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.CombineFlags.RGN_COPY">
            <summary>
            Specified RGN_COPY enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.HitTest">
            <summary>
            Specifies values from HitTest enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTERROR">
            <summary>
            Specified HTERROR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTTRANSPARENT">
            <summary>
            Specified HTTRANSPARENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTNOWHERE">
            <summary>
            Specified HTNOWHERE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTCLIENT">
            <summary>
            Specified HTCLIENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTCAPTION">
            <summary>
            Specified HTCAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTSYSMENU">
            <summary>
            Specified HTSYSMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTGROWBOX">
            <summary>
            Specified HTGROWBOX enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTSIZE">
            <summary>
            Specified HTSIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTMENU">
            <summary>
            Specified HTMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTHSCROLL">
            <summary>
            Specified HTHSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTVSCROLL">
            <summary>
            Specified HTVSCROLL enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTMINBUTTON">
            <summary>
            Specified HTMINBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTMAXBUTTON">
            <summary>
            Specified HTMAXBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTLEFT">
            <summary>
            Specified HTLEFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTRIGHT">
            <summary>
            Specified HTRIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTTOP">
            <summary>
            Specified HTTOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTTOPLEFT">
            <summary>
            Specified HTTOPLEFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTTOPRIGHT">
            <summary>
            Specified HTTOPRIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTBOTTOM">
            <summary>
            Specified HTBOTTOM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTBOTTOMLEFT">
            <summary>
            Specified HTBOTTOMLEFT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTBOTTOMRIGHT">
            <summary>
            Specified HTBOTTOMRIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTBORDER">
            <summary>
            Specified HTBORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTREDUCE">
            <summary>
            Specified HTREDUCE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTZOOM">
            <summary>
            Specified HTZOOM enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTSIZEFIRST">
            <summary>
            Specified HTSIZEFIRST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTSIZELAST">
            <summary>
            Specified HTSIZELAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTOBJECT">
            <summary>
            Specified HTOBJECT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTCLOSE">
            <summary>
            Specified HTCLOSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.HitTest.HTHELP">
            <summary>
            Specified HTHELP enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.AnimateFlags">
            <summary>
            Specifies values from AnimateFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_HOR_POSITIVE">
            <summary>
            Specified AW_HOR_POSITIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_HOR_NEGATIVE">
            <summary>
            Specified AW_HOR_NEGATIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_VER_POSITIVE">
            <summary>
            Specified AW_VER_POSITIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_VER_NEGATIVE">
            <summary>
            Specified AW_VER_NEGATIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_CENTER">
            <summary>
            Specified AW_CENTER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_HIDE">
            <summary>
            Specified AW_HIDE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_ACTIVATE">
            <summary>
            Specified AW_ACTIVATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_SLIDE">
            <summary>
            Specified AW_SLIDE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.AnimateFlags.AW_BLEND">
            <summary>
            Specified AW_BLEND enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.GetWindowLongFlags">
            <summary>
            Specifies values from GetWindowLongFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_WNDPROC">
            <summary>
            Specified GWL_WNDPROC enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_HINSTANCE">
            <summary>
            Specified GWL_HINSTANCE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_HWNDPARENT">
            <summary>
            Specified GWL_HWNDPARENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_STYLE">
            <summary>
            Specified GWL_STYLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_EXSTYLE">
            <summary>
            Specified GWL_EXSTYLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_USERDATA">
            <summary>
            Specified GWL_USERDATA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.GetWindowLongFlags.GWL_ID">
            <summary>
            Specified GWL_ID enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SPIActions">
            <summary>
            Specifies values from SPIActions enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETBEEP">
            <summary>
            Specified SPI_GETBEEP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETBEEP">
            <summary>
            Specified SPI_SETBEEP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSE">
            <summary>
            Specified SPI_GETMOUSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSE">
            <summary>
            Specified SPI_SETMOUSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETBORDER">
            <summary>
            Specified SPI_GETBORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETBORDER">
            <summary>
            Specified SPI_SETBORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETKEYBOARDSPEED">
            <summary>
            Specified SPI_GETKEYBOARDSPEED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETKEYBOARDSPEED">
            <summary>
            Specified SPI_SETKEYBOARDSPEED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_LANGDRIVER">
            <summary>
            Specified SPI_LANGDRIVER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_ICONHORIZONTALSPACING">
            <summary>
            Specified SPI_ICONHORIZONTALSPACING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSCREENSAVETIMEOUT">
            <summary>
            Specified SPI_GETSCREENSAVETIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSCREENSAVETIMEOUT">
            <summary>
            Specified SPI_SETSCREENSAVETIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSCREENSAVEACTIVE">
            <summary>
            Specified SPI_GETSCREENSAVEACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSCREENSAVEACTIVE">
            <summary>
            Specified SPI_SETSCREENSAVEACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETGRIDGRANULARITY">
            <summary>
            Specified SPI_GETGRIDGRANULARITY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETGRIDGRANULARITY">
            <summary>
            Specified SPI_SETGRIDGRANULARITY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDESKWALLPAPER">
            <summary>
            Specified SPI_SETDESKWALLPAPER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDESKPATTERN">
            <summary>
            Specified SPI_SETDESKPATTERN enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETKEYBOARDDELAY">
            <summary>
            Specified SPI_GETKEYBOARDDELAY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETKEYBOARDDELAY">
            <summary>
            Specified SPI_SETKEYBOARDDELAY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_ICONVERTICALSPACING">
            <summary>
            Specified SPI_ICONVERTICALSPACING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETICONTITLEWRAP">
            <summary>
            Specified SPI_GETICONTITLEWRAP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETICONTITLEWRAP">
            <summary>
            Specified SPI_SETICONTITLEWRAP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMENUDROPALIGNMENT">
            <summary>
            Specified SPI_GETMENUDROPALIGNMENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMENUDROPALIGNMENT">
            <summary>
            Specified SPI_SETMENUDROPALIGNMENT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDOUBLECLKWIDTH">
            <summary>
            Specified SPI_SETDOUBLECLKWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDOUBLECLKHEIGHT">
            <summary>
            Specified SPI_SETDOUBLECLKHEIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETICONTITLELOGFONT">
            <summary>
            Specified SPI_GETICONTITLELOGFONT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDOUBLECLICKTIME">
            <summary>
            Specified SPI_SETDOUBLECLICKTIME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEBUTTONSWAP">
            <summary>
            Specified SPI_SETMOUSEBUTTONSWAP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETICONTITLELOGFONT">
            <summary>
            Specified SPI_SETICONTITLELOGFONT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFASTTASKSWITCH">
            <summary>
            Specified SPI_GETFASTTASKSWITCH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFASTTASKSWITCH">
            <summary>
            Specified SPI_SETFASTTASKSWITCH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDRAGFULLWINDOWS">
            <summary>
            Specified SPI_SETDRAGFULLWINDOWS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETDRAGFULLWINDOWS">
            <summary>
            Specified SPI_GETDRAGFULLWINDOWS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETNONCLIENTMETRICS">
            <summary>
            Specified SPI_GETNONCLIENTMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETNONCLIENTMETRICS">
            <summary>
            Specified SPI_SETNONCLIENTMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMINIMIZEDMETRICS">
            <summary>
            Specified SPI_GETMINIMIZEDMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMINIMIZEDMETRICS">
            <summary>
            Specified SPI_SETMINIMIZEDMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETICONMETRICS">
            <summary>
            Specified SPI_GETICONMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETICONMETRICS">
            <summary>
            Specified SPI_SETICONMETRICS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETWORKAREA">
            <summary>
            Specified SPI_SETWORKAREA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETWORKAREA">
            <summary>
            Specified SPI_GETWORKAREA enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETPENWINDOWS">
            <summary>
            Specified SPI_SETPENWINDOWS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETHIGHCONTRAST">
            <summary>
            Specified SPI_GETHIGHCONTRAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETHIGHCONTRAST">
            <summary>
            Specified SPI_SETHIGHCONTRAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETKEYBOARDPREF">
            <summary>
            Specified SPI_GETKEYBOARDPREF enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETKEYBOARDPREF">
            <summary>
            Specified SPI_SETKEYBOARDPREF enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSCREENREADER">
            <summary>
            Specified SPI_GETSCREENREADER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSCREENREADER">
            <summary>
            Specified SPI_SETSCREENREADER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETANIMATION">
            <summary>
            Specified SPI_GETANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETANIMATION">
            <summary>
            Specified SPI_SETANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFONTSMOOTHING">
            <summary>
            Specified SPI_GETFONTSMOOTHING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFONTSMOOTHING">
            <summary>
            Specified SPI_SETFONTSMOOTHING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDRAGWIDTH">
            <summary>
            Specified SPI_SETDRAGWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDRAGHEIGHT">
            <summary>
            Specified SPI_SETDRAGHEIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETHANDHELD">
            <summary>
            Specified SPI_SETHANDHELD enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETLOWPOWERTIMEOUT">
            <summary>
            Specified SPI_GETLOWPOWERTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETPOWEROFFTIMEOUT">
            <summary>
            Specified SPI_GETPOWEROFFTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETLOWPOWERTIMEOUT">
            <summary>
            Specified SPI_SETLOWPOWERTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETPOWEROFFTIMEOUT">
            <summary>
            Specified SPI_SETPOWEROFFTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETLOWPOWERACTIVE">
            <summary>
            Specified SPI_GETLOWPOWERACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETPOWEROFFACTIVE">
            <summary>
            Specified SPI_GETPOWEROFFACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETLOWPOWERACTIVE">
            <summary>
            Specified SPI_SETLOWPOWERACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETPOWEROFFACTIVE">
            <summary>
            Specified SPI_SETPOWEROFFACTIVE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETCURSORS">
            <summary>
            Specified SPI_SETCURSORS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETICONS">
            <summary>
            Specified SPI_SETICONS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETDEFAULTINPUTLANG">
            <summary>
            Specified SPI_GETDEFAULTINPUTLANG enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDEFAULTINPUTLANG">
            <summary>
            Specified SPI_SETDEFAULTINPUTLANG enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETLANGTOGGLE">
            <summary>
            Specified SPI_SETLANGTOGGLE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETWINDOWSEXTENSION">
            <summary>
            Specified SPI_GETWINDOWSEXTENSION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSETRAILS">
            <summary>
            Specified SPI_SETMOUSETRAILS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSETRAILS">
            <summary>
            Specified SPI_GETMOUSETRAILS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSCREENSAVERRUNNING">
            <summary>
            Specified SPI_SETSCREENSAVERRUNNING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SCREENSAVERRUNNING">
            <summary>
            Specified SPI_SCREENSAVERRUNNING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFILTERKEYS">
            <summary>
            Specified SPI_GETFILTERKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFILTERKEYS">
            <summary>
            Specified SPI_SETFILTERKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETTOGGLEKEYS">
            <summary>
            Specified SPI_GETTOGGLEKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETTOGGLEKEYS">
            <summary>
            Specified SPI_SETTOGGLEKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSEKEYS">
            <summary>
            Specified SPI_GETMOUSEKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEKEYS">
            <summary>
            Specified SPI_SETMOUSEKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSHOWSOUNDS">
            <summary>
            Specified SPI_GETSHOWSOUNDS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSHOWSOUNDS">
            <summary>
            Specified SPI_SETSHOWSOUNDS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSTICKYKEYS">
            <summary>
            Specified SPI_GETSTICKYKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSTICKYKEYS">
            <summary>
            Specified SPI_SETSTICKYKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETACCESSTIMEOUT">
            <summary>
            Specified SPI_GETACCESSTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETACCESSTIMEOUT">
            <summary>
            Specified SPI_SETACCESSTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSERIALKEYS">
            <summary>
            Specified SPI_GETSERIALKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSERIALKEYS">
            <summary>
            Specified SPI_SETSERIALKEYS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSOUNDSENTRY">
            <summary>
            Specified SPI_GETSOUNDSENTRY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSOUNDSENTRY">
            <summary>
            Specified SPI_SETSOUNDSENTRY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSNAPTODEFBUTTON">
            <summary>
            Specified SPI_GETSNAPTODEFBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSNAPTODEFBUTTON">
            <summary>
            Specified SPI_SETSNAPTODEFBUTTON enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSEHOVERWIDTH">
            <summary>
            Specified SPI_GETMOUSEHOVERWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEHOVERWIDTH">
            <summary>
            Specified SPI_SETMOUSEHOVERWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSEHOVERHEIGHT">
            <summary>
            Specified SPI_GETMOUSEHOVERHEIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEHOVERHEIGHT">
            <summary>
            Specified SPI_SETMOUSEHOVERHEIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSEHOVERTIME">
            <summary>
            Specified SPI_GETMOUSEHOVERTIME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEHOVERTIME">
            <summary>
            Specified SPI_SETMOUSEHOVERTIME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETWHEELSCROLLLINES">
            <summary>
            Specified SPI_GETWHEELSCROLLLINES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETWHEELSCROLLLINES">
            <summary>
            Specified SPI_SETWHEELSCROLLLINES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMENUSHOWDELAY">
            <summary>
            Specified SPI_GETMENUSHOWDELAY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMENUSHOWDELAY">
            <summary>
            Specified SPI_SETMENUSHOWDELAY enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSHOWIMEUI">
            <summary>
            Specified SPI_GETSHOWIMEUI enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSHOWIMEUI">
            <summary>
            Specified SPI_SETSHOWIMEUI enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSESPEED">
            <summary>
            Specified SPI_GETMOUSESPEED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSESPEED">
            <summary>
            Specified SPI_SETMOUSESPEED enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSCREENSAVERRUNNING">
            <summary>
            Specified SPI_GETSCREENSAVERRUNNING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETDESKWALLPAPER">
            <summary>
            Specified SPI_GETDESKWALLPAPER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETACTIVEWINDOWTRACKING">
            <summary>
            Specified SPI_GETACTIVEWINDOWTRACKING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETACTIVEWINDOWTRACKING">
            <summary>
            Specified SPI_SETACTIVEWINDOWTRACKING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMENUANIMATION">
            <summary>
            Specified SPI_GETMENUANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMENUANIMATION">
            <summary>
            Specified SPI_SETMENUANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETCOMBOBOXANIMATION">
            <summary>
            Specified SPI_GETCOMBOBOXANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETCOMBOBOXANIMATION">
            <summary>
            Specified SPI_SETCOMBOBOXANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETLISTBOXSMOOTHSCROLLING">
            <summary>
            Specified SPI_GETLISTBOXSMOOTHSCROLLING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETLISTBOXSMOOTHSCROLLING">
            <summary>
            Specified SPI_SETLISTBOXSMOOTHSCROLLING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETGRADIENTCAPTIONS">
            <summary>
            Specified SPI_GETGRADIENTCAPTIONS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETGRADIENTCAPTIONS">
            <summary>
            Specified SPI_SETGRADIENTCAPTIONS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETKEYBOARDCUES">
            <summary>
            Specified SPI_GETKEYBOARDCUES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETKEYBOARDCUES">
            <summary>
            Specified SPI_SETKEYBOARDCUES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMENUUNDERLINES">
            <summary>
            Specified SPI_GETMENUUNDERLINES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMENUUNDERLINES">
            <summary>
            Specified SPI_SETMENUUNDERLINES enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETACTIVEWNDTRKZORDER">
            <summary>
            Specified SPI_GETACTIVEWNDTRKZORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETACTIVEWNDTRKZORDER">
            <summary>
            Specified SPI_SETACTIVEWNDTRKZORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETHOTTRACKING">
            <summary>
            Specified SPI_GETHOTTRACKING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETHOTTRACKING">
            <summary>
            Specified SPI_SETHOTTRACKING enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMENUFADE">
            <summary>
            Specified SPI_GETMENUFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMENUFADE">
            <summary>
            Specified SPI_SETMENUFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETSELECTIONFADE">
            <summary>
            Specified SPI_GETSELECTIONFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETSELECTIONFADE">
            <summary>
            Specified SPI_SETSELECTIONFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETTOOLTIPANIMATION">
            <summary>
            Specified SPI_GETTOOLTIPANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETTOOLTIPANIMATION">
            <summary>
            Specified SPI_SETTOOLTIPANIMATION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETTOOLTIPFADE">
            <summary>
            Specified SPI_GETTOOLTIPFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETTOOLTIPFADE">
            <summary>
            Specified SPI_SETTOOLTIPFADE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETCURSORSHADOW">
            <summary>
            Specified SPI_GETCURSORSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETCURSORSHADOW">
            <summary>
            Specified SPI_SETCURSORSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSESONAR">
            <summary>
            Specified SPI_GETMOUSESONAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSESONAR">
            <summary>
            Specified SPI_SETMOUSESONAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSECLICKLOCK">
            <summary>
            Specified SPI_GETMOUSECLICKLOCK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSECLICKLOCK">
            <summary>
            Specified SPI_SETMOUSECLICKLOCK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSEVANISH">
            <summary>
            Specified SPI_GETMOUSEVANISH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSEVANISH">
            <summary>
            Specified SPI_SETMOUSEVANISH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFLATMENU">
            <summary>
            Specified SPI_GETFLATMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFLATMENU">
            <summary>
            Specified SPI_SETFLATMENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETDROPSHADOW">
            <summary>
            Specified SPI_GETDROPSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETDROPSHADOW">
            <summary>
            Specified SPI_SETDROPSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETUIEFFECTS">
            <summary>
            Specified SPI_GETUIEFFECTS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETUIEFFECTS">
            <summary>
            Specified SPI_SETUIEFFECTS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFOREGROUNDLOCKTIMEOUT">
            <summary>
            Specified SPI_GETFOREGROUNDLOCKTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFOREGROUNDLOCKTIMEOUT">
            <summary>
            Specified SPI_SETFOREGROUNDLOCKTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETACTIVEWNDTRKTIMEOUT">
            <summary>
            Specified SPI_GETACTIVEWNDTRKTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETACTIVEWNDTRKTIMEOUT">
            <summary>
            Specified SPI_SETACTIVEWNDTRKTIMEOUT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFOREGROUNDFLASHCOUNT">
            <summary>
            Specified SPI_GETFOREGROUNDFLASHCOUNT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFOREGROUNDFLASHCOUNT">
            <summary>
            Specified SPI_SETFOREGROUNDFLASHCOUNT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETCARETWIDTH">
            <summary>
            Specified SPI_GETCARETWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETCARETWIDTH">
            <summary>
            Specified SPI_SETCARETWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETMOUSECLICKLOCKTIME">
            <summary>
            Specified SPI_GETMOUSECLICKLOCKTIME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETMOUSECLICKLOCKTIME">
            <summary>
            Specified SPI_SETMOUSECLICKLOCKTIME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFONTSMOOTHINGTYPE">
            <summary>
            Specified SPI_GETFONTSMOOTHINGTYPE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFONTSMOOTHINGTYPE">
            <summary>
            Specified SPI_SETFONTSMOOTHINGTYPE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFONTSMOOTHINGCONTRAST">
            <summary>
            Specified SPI_GETFONTSMOOTHINGCONTRAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFONTSMOOTHINGCONTRAST">
            <summary>
            Specified SPI_SETFONTSMOOTHINGCONTRAST enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFOCUSBORDERWIDTH">
            <summary>
            Specified SPI_GETFOCUSBORDERWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFOCUSBORDERWIDTH">
            <summary>
            Specified SPI_SETFOCUSBORDERWIDTH enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_GETFOCUSBORDERHEIGHT">
            <summary>
            Specified SPI_GETFOCUSBORDERHEIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIActions.SPI_SETFOCUSBORDERHEIGHT">
            <summary>
            Specified SPI_SETFOCUSBORDERHEIGHT enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SPIWinINIFlags">
            <summary>
            Specifies values from SPIWinINIFlags enumeration.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIWinINIFlags.SPIF_UPDATEINIFILE">
            <summary>
            Specified SPIF_UPDATEINIFILE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIWinINIFlags.SPIF_SENDWININICHANGE">
            <summary>
            Specified SPIF_SENDWININICHANGE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SPIWinINIFlags.SPIF_SENDCHANGE">
            <summary>
            Specified SPIF_SENDCHANGE enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.DeviceCapValues">
            <summary>
            Specifies value for GetDeviceCaps Gdi32 function.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.LOGPIXELSX">
            <summary>
            Logical pixels/inch in X
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.LOGPIXELSY">
            <summary>
            Logical pixels/inch in Y
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DeviceCapValues.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.DCX">
            <summary>
            Specifies flags for calls to GetDCEx
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DCX.DCX_WINDOW">
            <summary>
            Specifies DCX_WINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DCX.DCX_CACHE">
            <summary>
            Specifies DCX_CACHE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DCX.DCX_CLIPSIBLINGS">
            <summary>
            Specifies DCX_CLIPSIBLINGS enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.DCX.DCX_INTERSECTRGN">
            <summary>
            Specifies DCX_INTERSECTRGN enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SysColors">
            <summary>
            Specifies the index used to access system colors.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_SCROLLBAR">
            <summary>
            Specifies COLOR_SCROLLBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BACKGROUND">
            <summary>
            Specifies COLOR_BACKGROUND enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_ACTIVECAPTION">
            <summary>
            Specifies COLOR_ACTIVECAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_INACTIVECAPTION">
            <summary>
            Specifies COLOR_INACTIVECAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_MENU">
            <summary>
            Specifies COLOR_MENU enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_WINDOW">
            <summary>
            Specifies COLOR_WINDOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_WINDOWFRAME">
            <summary>
            Specifies COLOR_WINDOWFRAME enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_MENUTEXT">
            <summary>
            Specifies COLOR_MENUTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_WINDOWTEXT">
            <summary>
            Specifies COLOR_WINDOWTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_CAPTIONTEXT">
            <summary>
            Specifies COLOR_CAPTIONTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_ACTIVEBORDER">
            <summary>
            Specifies COLOR_ACTIVEBORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_INACTIVEBORDER">
            <summary>
            Specifies COLOR_INACTIVEBORDER enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_APPWORKSPACE">
            <summary>
            Specifies COLOR_APPWORKSPACE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_HIGHLIGHT">
            <summary>
            Specifies COLOR_HIGHLIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_HIGHLIGHTTEXT">
            <summary>
            Specifies COLOR_HIGHLIGHTTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BTNFACE">
            <summary>
            Specifies COLOR_BTNFACE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BTNSHADOW">
            <summary>
            Specifies COLOR_BTNSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_GRAYTEXT">
            <summary>
            Specifies COLOR_SCROLLBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BTNTEXT">
            <summary>
            Specifies COLOR_BTNTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_INACTIVECAPTIONTEXT">
            <summary>
            Specifies COLOR_INACTIVECAPTIONTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BTNHIGHLIGHT">
            <summary>
            Specifies COLOR_BTNHIGHLIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DDKSHADOW">
            <summary>
            Specifies COLOR_3DDKSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DLIGHT">
            <summary>
            Specifies COLOR_3DLIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_INFOTEXT">
            <summary>
            Specifies COLOR_INFOTEXT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_INFOBK">
            <summary>
            Specifies COLOR_INFOBK enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_HOTLIGHT">
            <summary>
            Specifies COLOR_HOTLIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_GRADIENTACTIVECAPTION">
            <summary>
            Specifies COLOR_GRADIENTACTIVECAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_GRADIENTINACTIVECAPTION">
            <summary>
            Specifies COLOR_GRADIENTINACTIVECAPTION enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_MENUHILIGHT">
            <summary>
            Specifies COLOR_MENUHILIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_MENUBAR">
            <summary>
            Specifies COLOR_MENUBAR enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_DESKTOP">
            <summary>
            Specifies COLOR_DESKTOP enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DFACE">
            <summary>
            Specifies COLOR_3DFACE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DSHADOW">
            <summary>
            Specifies COLOR_3DSHADOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DHIGHLIGHT">
            <summary>
            Specifies COLOR_3DHIGHLIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_3DHILIGHT">
            <summary>
            Specifies COLOR_3DHILIGHT enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysColors.COLOR_BTNHILIGHT">
            <summary>
            Specifies COLOR_BTNHILIGHT enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SysCommand">
            <summary>
            Specifies a system command value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysCommand.SC_MINIMIZE">
            <summary>
            Specifies the SC_MINIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysCommand.SC_MAXIMIZE">
            <summary>
            Specifies the SC_MAXIMIZE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysCommand.SC_CLOSE">
            <summary>
            Specifies the SC_CLOSE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SysCommand.SC_RESTORE">
            <summary>
            Specifies the SC_RESTORE enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.RedrawWindow">
            <summary>
            Specifies flags for the RedrawWindow call.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RedrawWindow.RDW_INVALIDATE">
            <summary>
            Specifies the RDW_INVALIDATE enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RedrawWindow.RDW_UPDATENOW">
            <summary>
            Specifies the RDW_UPDATENOW enumeration value.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RedrawWindow.RDW_FRAME">
            <summary>
            Specifies the RDW_FRAME enumeration value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ManagerContentCollection">
            <summary>
            Provides a collection container for Content instances for use by the DockingManager.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.CollectionWithEvents">
            <summary>
            Extend collection base class by generating change events.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.#ctor">
            <summary>
            Initializes a new instance of the CollectionWithEvents class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.SuspendEvents">
            <summary>
            Do not generate change events until resumed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.ResumeEvents">
            <summary>
            Safe to resume change events.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnClear">
            <summary>
            Raises the Clearing event when not suspended.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnClearComplete">
            <summary>
            Raises the Cleared event when not suspended.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnInsert(System.Int32,System.Object)">
            <summary>
            Raises the Inserting event when not suspended.
            </summary>
            <param name="index">Index of object being inserted.</param>
            <param name="value">The object that is being inserted.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Raises the Inserted event when not suspended.
            </summary>
            <param name="index">Index of inserted object.</param>
            <param name="value">The object that has been inserted.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnRemove(System.Int32,System.Object)">
            <summary>
            Raises the Removing event when not suspended.
            </summary>
            <param name="index">Index of object being removed.</param>
            <param name="value">The object that is being removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Raises the Removed event when not suspended.
            </summary>
            <param name="index">Index of removed object.</param>
            <param name="value">The object that has been removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CollectionWithEvents.IndexOf(System.Object)">
            <summary>
            Returns the index of the first occurrence of a value.
            </summary>
            <param name="value">The object to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Clearing">
            <summary>
            Occurs just before the collection contents are cleared.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Cleared">
            <summary>
            Occurs just after the collection contents are cleared.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Inserting">
            <summary>
            Occurs just before an item is added to the collection.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Inserted">
            <summary>
            Occurs just after an item has been added to the collection.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Removing">
            <summary>
            Occurs just before an item is removed from the collection.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.CollectionWithEvents.Removed">
            <summary>
            Occurs just after an item has been removed from the collection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CollectionWithEvents.IsSuspended">
            <summary>
            Gets a value indicating if events are currently suspended.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initializes a new instance of the ManagerContentCollection class.
            </summary>
            <param name="manager">Reference to owning DockingManager instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Add">
            <summary>
            Adds a new Content instance to the collection.
            </summary>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Add(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Adds the specified Content object to the collection.
            </summary>
            <param name="c">The Content object to add to the collection.</param>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Add(System.Windows.Forms.Control)">
            <summary>
            Adds a new Content instance to the collection using provided parameters.
            </summary>
            <param name="control">The Control instance to when constructing Content instance.</param>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Add(System.Windows.Forms.Control,System.String)">
            <summary>
            Adds a new Content instance to the collection using provided parameters.
            </summary>
            <param name="control">The Control instance to when constructing Content instance.</param>
            <param name="title">The Title to use when constructing Content instance.</param>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Add(System.Windows.Forms.Control,System.String,System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Adds a new Content instance to the collection using provided parameters.
            </summary>
            <param name="control">The Control instance to when constructing Content instance.</param>
            <param name="title">The Title to use when constructing Content instance.</param>
            <param name="imageList">The ImageList to use when constructing Content instance.</param>
            <param name="imageIndex">The ImageIndex to use when constructing Content instance.</param>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Remove(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Removes a Content from the collection.
            </summary>
            <param name="value">A Content to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Contains(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Determines whether a Content is in the collection.
            </summary>
            <param name="value">The Content to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.FindUniqueName(System.String)">
            <summary>
            Gets the Content with the specified unique name.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.SetIndex(System.Int32,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Move Content to new indexed position in collection.
            </summary>
            <param name="newIndex">New indexed position required.</param>
            <param name="value">Content instance to move to new position.</param>
            <returns>The new indexed position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.IndexOf(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Returns the index of the first occurrence of the given Content.
            </summary>
            <param name="value">The Content to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Copy">
            <summary>
            Return a new ContentCollection with same content references.
            </summary>
            <returns>New ContentCollection instance.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Item(System.Int32)">
            <summary>
            Gets the Content at the specified index.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ManagerContentCollection.Item(System.String)">
            <summary>
            Gets the Content with the specified title.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.CollectionClear">
            <summary>
            Represents the method that will handle the event that has no data.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.CollectionChange">
            <summary>
            Represents the method that will handle the event that has item data.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.MediaPlayerRenderer">
            <summary>
            Draw ToolStrip using the Media Player themed appearance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.#ctor(Crownwood.DotNetMagic.Common.MediaPlayerTheme,System.Boolean)">
            <summary>
            Initialize a new instance of the MediaPlayerRenderer class.
            </summary>
            <param name="theme">Initial theme.</param>
            <param name="applyClearType">Should clear type drawing of text be allowed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">An ToolStripItemTextRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.DrawButtonCommandBack(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,Crownwood.DotNetMagic.Common.ButtonStyle,System.Boolean,System.Boolean)">
            <summary>
            Draw a button in the Office2007 style using provided state information.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="direction">Vertical or Horizontal direction.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
            <param name="state">Button state.</param>
            <param name="buttonStyle">Button style.</param>
            <param name="pushed">Is the button checked.</param>
            <param name="enabled">Is the button enabled.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.DrawButtonBackground(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the background for a button in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.DrawButtonBorder(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the border for the button in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerRenderer.DrawStatusBarBackground(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle,System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            Draw the background for the status bar in the provided style.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="style">Drawing style.</param>
            <param name="drawRect">Client rectangle for drawing.</param>
            <param name="c">Reference to status bar control.</param>
            <param name="status">Showing in status are or caption area.</param>
            <param name="block">Display as a solid block.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.User32">
            <summary>
            Access to USER32 functions.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetWindowDC(System.IntPtr)">
            <summary>
            GetWindowDC function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.AdjustWindowRectEx(Crownwood.DotNetMagic.Win32.RECT@,System.Int32,System.Boolean,System.Int32)">
            <summary>
            AdjustWindowRectEx function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.DisableProcessWindowsGhosting">
            <summary>
            DisableProcessWindowsGhosting function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.RedrawWindow(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            RedrawWindow function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.LockWindowUpdate(System.IntPtr)">
            <summary>
            LockWindowUpdate function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetClientRect(System.IntPtr,Crownwood.DotNetMagic.Win32.RECT@)">
            <summary>
            GetClientRect function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            GetWindowLong function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            SetWindowLong function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SystemParametersInfo(System.UInt32,System.UInt32,System.Int32@,System.UInt32)">
            <summary>
            SystemParametersInfo function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.AnimateWindow(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            AnimateWindow function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.InvalidateRect(System.IntPtr,Crownwood.DotNetMagic.Win32.RECT@,System.Boolean)">
            <summary>
            InvalidateRect function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.InvalidateRectInt(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            LoadCursor function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.LoadCursor(System.IntPtr,System.UInt32)">
            <summary>
            LoadCursor function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SetCursor(System.IntPtr)">
            <summary>
            SetCursor function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetFocus">
            <summary>
            GetFocus function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SetFocus(System.IntPtr)">
            <summary>
            SetFocus function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ReleaseCapture">
            <summary>
            ReleaseCapture function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.WaitMessage">
            <summary>
            WaitMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.TranslateMessage(Crownwood.DotNetMagic.Win32.MSG@)">
            <summary>
            TranslateMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.DispatchMessage(Crownwood.DotNetMagic.Win32.MSG@)">
            <summary>
            DispatchMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.PostMessage(System.IntPtr,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            PostMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SendMessage(System.IntPtr,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            SendMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetMessage(Crownwood.DotNetMagic.Win32.MSG@,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            GetMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.PeekMessage(Crownwood.DotNetMagic.Win32.MSG@,System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            PeekMessage function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.BeginPaint(System.IntPtr,Crownwood.DotNetMagic.Win32.PAINTSTRUCT@)">
            <summary>
            BeginPaint function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.EndPaint(System.IntPtr,Crownwood.DotNetMagic.Win32.PAINTSTRUCT@)">
            <summary>
            EndPaint function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetDC(System.IntPtr)">
            <summary>
            GetDC function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetDCEx(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            GetDCEx function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            ReleaseDC function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ShowWindow(System.IntPtr,System.Int16)">
            <summary>
            ShowWindow function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            MoveWindow function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            SetWindowPos function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.UpdateLayeredWindow(System.IntPtr,System.IntPtr,Crownwood.DotNetMagic.Win32.POINT@,Crownwood.DotNetMagic.Win32.SIZE@,System.IntPtr,Crownwood.DotNetMagic.Win32.POINT@,System.Int32,Crownwood.DotNetMagic.Win32.BLENDFUNCTION@,System.Int32)">
            <summary>
            UpdateLayeredWindow function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetWindowRect(System.IntPtr,Crownwood.DotNetMagic.Win32.RECT@)">
            <summary>
            GetWindowRect function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ClientToScreen(System.IntPtr,Crownwood.DotNetMagic.Win32.POINT@)">
            <summary>
            ClientToScreen function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ScreenToClient(System.IntPtr,Crownwood.DotNetMagic.Win32.POINT@)">
            <summary>
            ScreenToClient function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.TrackMouseEvent(Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS@)">
            <summary>
            TrackMouseEvent function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.SetWindowRgn(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            SetWindowRgn function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetKeyState(System.Int32)">
            <summary>
            GetKeyState function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetParent(System.IntPtr)">
            <summary>
            GetParent function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.DrawFocusRect(System.IntPtr,Crownwood.DotNetMagic.Win32.RECT@)">
            <summary>
            DrawFocusRect function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.HideCaret(System.IntPtr)">
            <summary>
            HideCaret function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.ShowCaret(System.IntPtr)">
            <summary>
            ShowCaret function of USER32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.User32.GetSysColor(Crownwood.DotNetMagic.Win32.SysColors)">
            <summary>
            GetSysColor function of USER32
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Window">
            <summary>
            Base class for window that can contain docking units.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initializes a new instance of the Window class.
            </summary>
            <param name="manager">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyFullTitleText(System.String)">
            <summary>
            Process a change in the full title text.
            </summary>
            <param name="title">New full title text.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Process a change in the auto hide image.
            </summary>
            <param name="autoHidden">New auto hidden state.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Process a change in showing of caption bar.
            </summary>
            <param name="show">New caption bar state.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyCloseButton(System.Boolean)">
            <summary>
            Process a change in close button state.
            </summary>
            <param name="show">New close button state.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyHideButton(System.Boolean)">
            <summary>
            Process a change in hide button state.
            </summary>
            <param name="show">New hide button state.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyContentGotFocus">
            <summary>
            Process a change in content focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.NotifyContentLostFocus">
            <summary>
            Process a change in content focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.WindowDetailGotFocus(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Process a change in content detail focus.
            </summary>
            <param name="wd">WindowDetail instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.WindowDetailLostFocus(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Process a change in content detail focus.
            </summary>
            <param name="wd">WindowDetail instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.HideDetails">
            <summary>
            Hide all the details.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.ShowDetails">
            <summary>
            Show all the details.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.OnFullTitleChanged(System.String)">
            <summary>
            Raises the FullTitleChanged event.
            </summary>
            <param name="fullTitle">New string.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.RecordRestore(System.Object)">
            <summary>
            Create a new restore instance for the window.
            </summary>
            <param name="child">Child object instance.</param>
            <returns>New restore instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Window.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate change in a property.
            </summary>
            <param name="name">Property that has changed.</param>
            <param name="value">New value.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.Window.FullTitleChanged">
            <summary>
            Occurs when the full title has changed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.DockingManager">
            <summary>
            Gets a reference to the docking manager.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.State">
            <summary>
            Gets and sets the docking state of the window.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.ParentZone">
            <summary>
            Gets and sets the parent zone that contains this window.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.WindowDetails">
            <summary>
            Gets and sets the collection of details.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.ZoneArea">
            <summary>
            Gets and sets the percentage space this window occupies in parent zone.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.MinimalSize">
            <summary>
            Gets and sets the minimum screen size this window must occupy.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.AutoDispose">
            <summary>
            Gets and sets the need to automatically dispose this window.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.FullTitle">
            <summary>
            Gets the text string to use in window title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Window.RedockAllowed">
            <summary>
            Gets and sets a value indicating if the window can be redocked.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Redocker">
            <summary>
            Base class used for managing redocking activity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.#ctor">
            <summary>
            Initializes a new instance of the Redocker class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.EnterTrackingMode">
            <summary>
            Enter hot tracking mode.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.ExitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Exit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.QuitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Quit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a change in mouse position.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a mouse button up call.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns>true if redocking action occured;false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.CreateRedocker(Crownwood.DotNetMagic.Common.DragFeedbackStyle,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Create appropriate redocker for type of feedback.
            </summary>
            <param name="feedbackStyle">Feedback style requested.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
            <returns>Redocker instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.CreateRedocker(Crownwood.DotNetMagic.Common.DragFeedbackStyle,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContent class.
            </summary>
            <param name="feedbackStyle">Feedback style requested.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Redocker.CreateRedocker(Crownwood.DotNetMagic.Common.DragFeedbackStyle,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContent class.
            </summary>
            <param name="feedbackStyle">Feedback style requested.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Redocker.Tracking">
            <summary>
            Gets a value indicating is tracking is occuring.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotAreaOutside">
            <summary>
            Handle the mouse over the client area of a docking container.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaOutside.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Rectangle,System.Int32,System.Int32,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the HotAreaOutside class.
            </summary>
            <param name="squares">Squares or diamonds.</param>
            <param name="manager">Reference to docking manager.</param>
            <param name="outsideRect">Screen rectangle of outside container area.</param>
            <param name="vectorV">New vertical vector.</param>
            <param name="vectorH">New horizontal vector.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaOutside.FindHotZone(System.Drawing.Point,Crownwood.DotNetMagic.Docking.HotZone,System.Boolean@)">
            <summary>
            Find the new hot zone to use.
            </summary>
            <param name="mousePos">Screen mouse position.</param>
            <param name="hotZone">Incoming hot zone.</param>
            <param name="suppress">Suppress subsequent indicators.</param>
            <returns>New hot zone.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaOutside.Cleanup">
            <summary>
            Cleanup because tracking has finished.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotAreaFloating">
            <summary>
            Shows the floating position indicator if this area if needed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaFloating.#ctor(Crownwood.DotNetMagic.Docking.RedockerContent,Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initialize a new instance of the HotAreaInside class.
            </summary>
            <param name="redocker">Redocking implementation class.</param>
            <param name="manager">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaFloating.FindHotZone(System.Drawing.Point,Crownwood.DotNetMagic.Docking.HotZone,System.Boolean@)">
            <summary>
            Find the new hot zone to use.
            </summary>
            <param name="mousePos">Screen mouse position.</param>
            <param name="hotZone">Incoming hot zone.</param>
            <param name="suppress">Suppress subsequent indicators.</param>
            <returns>New hot zone.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TreeControl">
            <summary>
            Manage a collection of Node instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.#ctor">
            <summary>
            Initializes a new instance of the TreeControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetNodeVC">
            <summary>
            Resets the NodeVC property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCollectionVC">
            <summary>
            Resets the CollectionVC property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetViewControllers">
            <summary>
            Resets the ViewControllers property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.DeselectAll">
            <summary>
            Deselect all the currently selected Nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetContextMenuNode">
            <summary>
            Resets the ContextMenuNode property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetContextMenuSpace">
            <summary>
            Resets the ContextMenuSpace property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetPathSeparator">
            <summary>
            Resets the PathSeparator property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBackColor">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBorderIndent">
            <summary>
            Resets the BorderIndent property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBorderStyle">
            <summary>
            Resets the BorderStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBorderColor">
            <summary>
            Resets the BorderColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetLineWidth">
            <summary>
            Resets the LineWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetLineColor">
            <summary>
            Resets the LineColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetLineDashStyle">
            <summary>
            Resets the LineDashStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxLength">
            <summary>
            Resets the BoxLength property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxDrawStyle">
            <summary>
            Resets the BoxDrawStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxShownAlways">
            <summary>
            Resets the BoxShownAlways property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxSignColor">
            <summary>
            Resets the BoxSignColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxBorderColor">
            <summary>
            Resets the BoxBorderColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxInsideColor">
            <summary>
            Resets the BoxInsideColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetBoxVisibility">
            <summary>
            Resets the BoxVisibility property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetLineVisibility">
            <summary>
            Resets the LineVisibility property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetColumnWidth">
            <summary>
            Resets the ColumnWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckStates">
            <summary>
            Resets the CheckStates property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckLength">
            <summary>
            Resets the CheckLength property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckGapLeft">
            <summary>
            Resets the CheckGapLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckGapRight">
            <summary>
            Resets the CheckGapRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckDrawStyle">
            <summary>
            Resets the CheckDrawStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckBorderWidth">
            <summary>
            Resets the CheckBorderWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckBorderColor">
            <summary>
            Resets the CheckBorderColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckInsideColor">
            <summary>
            Resets the CheckInsideColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckInsideHotColor">
            <summary>
            Resets the CheckInsideHotColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckTickColor">
            <summary>
            Resets the CheckTickColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckTickHotColor">
            <summary>
            Resets the CheckTickHotColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckMixedColor">
            <summary>
            Resets the CheckMixedColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCheckMixedHotColor">
            <summary>
            Resets the CheckMixedHotColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetMouseWheelUnits">
            <summary>
            Resets the MouseWheelUnits property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetMouseUnits">
            <summary>
            Resets the MouseUnits property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetVerticalGranularity">
            <summary>
            Resets the VerticalGranularity property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetIgnoreEnsureDisplayedH">
            <summary>
            Resets the IgnoreEnsureDisplayedH property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetIgnoreEnsureDisplayedV">
            <summary>
            Resets the IgnoreEnsureDisplayedV property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetVerticalScrollbar">
            <summary>
            Resets the VertScrollbar property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetHorizontalScrollbar">
            <summary>
            Resets the HorizontalScrollbar property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetEnableMouseWheel">
            <summary>
            Resets the EnableMouseWheel property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupNodesSelectable">
            <summary>
            Resets the GroupNodesSelectable property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupTextRenderingHint">
            <summary>
            Resets the GroupTextRenderingHint property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupFont">
            <summary>
            Resets the GroupFont property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupAutoEdit">
            <summary>
            Resets the GroupAutoEdit property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupArrows">
            <summary>
            Resets the GroupArrows property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupIndentLeft">
            <summary>
            Resets the GroupIndentLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupIndentTop">
            <summary>
            Resets the GroupIndentTop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupIndentBottom">
            <summary>
            Resets the GroupIndentBottom property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupColoring">
            <summary>
            Resets the GroupColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupBackColor">
            <summary>
            Resets the GroupBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupForeColor">
            <summary>
            Resets the GroupForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupLineColor">
            <summary>
            Resets the GroupLineColor( property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupHotBackColor">
            <summary>
            Resets the GroupHotBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupSelectedBackColor">
            <summary>
            Resets the GroupSelectedBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupSelectedNoFocusBackColor">
            <summary>
            Resets the GroupSelectedNoFocusBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupHotForeColor">
            <summary>
            Resets the GroupForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupSelectedForeColor">
            <summary>
            Resets the GroupSelectedForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupExpandOnDragHover">
            <summary>
            Resets the GroupExpandOnDragHover property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxLineColor">
            <summary>
            Resets the GroupImageBoxLineColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxBackColor">
            <summary>
            Resets the GroupImageBoxBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxSelectedBackColor">
            <summary>
            Resets the GroupImageBoxSelectedBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxColumnColor">
            <summary>
            Resets the GroupImageBoxColumnColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxGradientBack">
            <summary>
            Resets the GroupGradientBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxGradientAngle">
            <summary>
            Resets the GroupImageBoxGradientAngle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxGradientColoring">
            <summary>
            Resets the GroupImageBoxGradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupBorderStyle">
            <summary>
            Resets the GroupBorderStyle( property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupHotFontStyle">
            <summary>
            Resets the GroupHotFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupUseHotFontStyle">
            <summary>
            Resets the GroupUseHotFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupSelectedFontStyle">
            <summary>
            Resets the GroupSelectedFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupUseSelectedFontStyle">
            <summary>
            Resets the GroupUseSelectedFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupGradientAngle">
            <summary>
            Resets the GroupGradientAngle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupGradientColoring">
            <summary>
            Resets the GroupGradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupGradientBack">
            <summary>
            Resets the GroupGradientBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupExtraLeft">
            <summary>
            Resets the GroupExtraLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupExtraHeight">
            <summary>
            Resets the GroupExtraLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupHotTrack">
            <summary>
            Resets the GroupExtraLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupClickExpand">
            <summary>
            Resets the GroupClickExpand property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupDoubleClickExpand">
            <summary>
            Resets the GroupDoubleClickExpand property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupAutoCollapse">
            <summary>
            Resets the GroupAutoCollapse property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupAutoAllocate">
            <summary>
            Resets the GroupAutoAllocate property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBox">
            <summary>
            Resets the GroupBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxColumn">
            <summary>
            Resets the GroupBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxBorder">
            <summary>
            Resets the GroupImageBoxBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxWidth">
            <summary>
            Resets the GroupBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetGroupImageBoxGap">
            <summary>
            Resets the GroupBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetClickExpand">
            <summary>
            Resets the ExpandOnClick property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetDoubleClickExpand">
            <summary>
            Resets the DoubleClickExpand property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetAutoCollapse">
            <summary>
            Resets the AutoCollapse property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetExtendToRight">
            <summary>
            Resets the ExtendToRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetInstantUpdate">
            <summary>
            Resets the InstantUpdate property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetTooltips">
            <summary>
            Resets the Tooltips property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetInfotips">
            <summary>
            Resets the Infotips property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetNodesSelectable">
            <summary>
            Resets the NodesSelectable property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetAutoEdit">
            <summary>
            Resets the AutoEdit property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetLabelEdit">
            <summary>
            Resets the LabelEdit property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetCanUserExpandCollapse">
            <summary>
            Resets the CanUserExpandCollapse property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetExpandOnDragHover">
            <summary>
            Resets the ExpandOnDragHover property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetIndicators">
            <summary>
            Resets the Indicators property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetVerticalNodeGap">
            <summary>
            Resets the VerticalNodeGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetMinimumNodeHeight">
            <summary>
            Resets the MinimumNodeHeight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetMaximumNodeHeight">
            <summary>
            Resets the MaximumNodeHeight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetImageList">
            <summary>
            Resets the ImageList property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetImageIndex">
            <summary>
            Resets the ImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectedImageIndex">
            <summary>
            Resets the SelectedImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetImageGapLeft">
            <summary>
            Resets the ImageGapLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetImageGapRight">
            <summary>
            Resets the ImageGapRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetTextRenderingHint">
            <summary>
            Resets the TextRenderingHint property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetHotBackColor">
            <summary>
            Resets the HotBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetHotForeColor">
            <summary>
            Resets the HotForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectedBackColor">
            <summary>
            Resets the SelectedBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectedNoFocusBackColor">
            <summary>
            Resets the SelectedNoFocusBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectedForeColor">
            <summary>
            Resets the SelectedForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetHotFontStyle">
            <summary>
            Resets the HotFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetUseHotFontStyle">
            <summary>
            Resets the UseHotFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectMode">
            <summary>
            Resets the SelectMode property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.IsNodeSelected(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Discover if the node is currently selected.
            </summary>
            <param name="n">Node to test.</param>
            <returns>Trus if part of the selection; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.SelectNode(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Select the provided node.
            </summary>
            <param name="n">Node to be selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.SelectNode(Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Select the provided node using shift/ctrl key semantics.
            </summary>
            <param name="n">Node to be selected.</param>
            <param name="shift">Should act as if the shift key is pressed.</param>
            <param name="ctrl">Should act as if the control key is pressed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.DeselectNode(Crownwood.DotNetMagic.Controls.Node,System.Boolean)">
            <summary>
            Deselect the provided node and optionally all the child nodes it contains.
            </summary>
            <param name="n">Node to be deselected.</param>
            <param name="recurse">Should deselect all child nodes as well.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ClearSelection">
            <summary>
            Clears the node selection.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectSameLevel">
            <summary>
            Resets the SelectSameLevel property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetSelectedFontStyle">
            <summary>
            Resets the SelectedFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ResetUseSelectedFontStyle">
            <summary>
            Resets the UseSelectedFontStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.Expand">
            <summary>
            Expand all root level nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ExpandAll">
            <summary>
            Expand all nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.Collapse">
            <summary>
            Collapse all root level nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.CollapseAll">
            <summary>
            Collapse all nodes.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.SetTreeControlStyle(Crownwood.DotNetMagic.Controls.TreeControlStyles)">
            <summary>
            Modify control properties to match required style.
            </summary>
            <param name="style">Style to be defined.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.InvalidateNodeDrawing">
            <summary>
            Request that all nodes be redrawn.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.InvalidateNode(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Request that the given Node instance is redrawn if visible.
            </summary>
            <param name="n">Node instance to redraw.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.InvalidateNode(Crownwood.DotNetMagic.Controls.Node,System.Boolean)">
            <summary>
            Request that the given Node instance is redrawn if visible.
            </summary>
            <param name="n">Node instance to redraw.</param>
            <param name="recurse">Should all children be invalidated recursively.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.InvalidateNodeLine(Crownwood.DotNetMagic.Controls.Node,System.Boolean)">
            <summary>
            Request that the entire line that the given Node instance is redrawn if visible.
            </summary>
            <param name="n">Node instance to redraw.</param>
            <param name="recurse">Should all children be invalidated recursively.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.InvalidateNodeCollection(Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Request that the given NodeCollection instance is redrawn if visible.
            </summary>
            <param name="nc">NodeCollection instance to redraw.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ClientPointToNode(System.Drawing.Point)">
            <summary>
            Converts a point from client space coordinates to node space.
            </summary>
            <param name="point">Client point.</param>
            <returns>Point converted to node space.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ClientRectToNode(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle from client space coordinates to node space.
            </summary>
            <param name="rect">Client rectangle.</param>
            <returns>Rectangle converted to node space.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.NodePointToClient(System.Drawing.Point)">
            <summary>
            Converts a point from node space coordinates to client space.
            </summary>
            <param name="point">Node point.</param>
            <returns>Point converted to client space.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.NodeRectToClient(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle from node space to client space.
            </summary>
            <param name="rect">Node rectangle.</param>
            <returns>Rectangle converted to client space.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.EnsureDisplayed(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Ensure this node is displayed and make parent nodes visible and expanded if needed.
            </summary>
            <param name="n">Node to ensure is displayed.</param>
            <returns>true if node is now displayed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.EnsureDisplayed(Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Ensure this node is displayed.
            </summary>
            <param name="n">Node to ensure is displayed.</param>
            <param name="expand">Should nodes be expanded to ensure shown.</param>
            <param name="visible">Should nodes be made visible to ensure shown.</param>
            <returns>true if node is now displayed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.SetTopNode(Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Attempt to show given node at the top of display.
            </summary>
            <param name="n">Node to try and display.</param>
            <param name="expand">Should nodes be expanded to ensure shown.</param>
            <param name="visible">Should nodes be made visible to ensure shown.</param>
            <returns>true if node is now displayed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetNodeAt(System.Int32)">
            <summary>
            Retrieves the node that is at the specified vertical location.
            </summary>
            <param name="y">Y pixel position.</param>
            <returns>The Node at the specified vertical location; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetNodeAt(System.Int32,System.Int32)">
            <summary>
            Retrieves the node that is at the specified location.
            </summary>
            <param name="x">X pixel position.</param>
            <param name="y">Y pixel position.</param>
            <returns>The Node at the specified location; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetNodeAt(System.Drawing.Point)">
            <summary>
            Retrieves the node that is at the specified location.
            </summary>
            <param name="pt">Pixel position.</param>
            <returns>The Node at the specified location; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetFirstNode">
            <summary>
            Gets reference to the first Node in entire hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetFirstDisplayedNode">
            <summary>
            Gets reference to the first displayed Node in entire hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetLastNode">
            <summary>
            Gets reference to the last Node in entire hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetLastDisplayedNode">
            <summary>
            Gets reference to the last Node in entire hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.GetNodeFromKey(System.Object)">
            <summary>
            Gets the node instance with the specified unique key.
            </summary>
            <param name="key">Unique key value.</param>
            <returns>node matching key; otherwise null if no match is found.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.EndEdit(System.Boolean)">
            <summary>
            End the editing of a node lable.
            </summary>
            <param name="quit">Should quit and cancel changes.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnShowContextMenuNode(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the ShowContextMenuNode event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnClientDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ClientDragEnter event.
            </summary>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnClientDragLeave(System.EventArgs)">
            <summary>
            Raises the ClientDragLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnClientDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ClientDragOver event.
            </summary>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnClientDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ClientDragDrop event.
            </summary>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodeDragEnter(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the NodeDragEnter event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodeDragLeave(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the NodeDragLeave event.
            </summary>
            <param name="n">Context Node this event is for.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodeDragOver(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the NodeDragOver event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodeDragDrop(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the NodeDragDrop event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodeDrag(Crownwood.DotNetMagic.Controls.StartDragEventArgs)">
            <summary>
            Raises the NodeDrag event.
            </summary>
            <param name="e">An StartDragEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupDragEnter(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the GroupDragEnter event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupDragLeave(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the GroupDragLeave event.
            </summary>
            <param name="n">Context Node this event is for.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupDragOver(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the GroupDragOver event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupDragDrop(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the GroupDragDrop event.
            </summary>
            <param name="n">Context Node this event is for.</param>
            <param name="e">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeSelect(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the BeforeSelect event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeDeselect(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the BeforeDeselect event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterSelect(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the AfterSelect event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterDeselect(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the AfterDeselect event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeCheck(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the BeforeCheck event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterCheck(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the AfterCheck event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeExpand(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the BeforeExpand event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterExpand(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the AfterExpand event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeCollapse(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the BeforeCollapse event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterCollapse(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Raises the AfterCollapse event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBeforeLabelEdit(Crownwood.DotNetMagic.Controls.Node,System.String@)">
            <summary>
            Raises the BeforeLabelEdit event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterLabelEdit(Crownwood.DotNetMagic.Controls.Node,System.String@)">
            <summary>
            Raises the AfterLabelEdit event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAfterSelectionChanged">
            <summary>
            Raises the AfterSelectionChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnShowContextMenuSpace">
            <summary>
            Raises the ShowContextMenuSpace event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the FontChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event. 
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChangled event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A Message, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>true if the key was processed by the control; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the DragEnter event.
            </summary>
            <param name="drgevent">An DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDragLeave(System.EventArgs)">
            <summary>
            Raises the DragLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises te DragOver event.
            </summary>
            <param name="drgevent">An DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the DragDrop event.
            </summary>
            <param name="drgevent">An DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnViewControllersChanged">
            <summary>
            Raises the ViewControllersChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnContextMenuNodeChanged">
            <summary>
            Raises the ContextMenuNodeChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnContextMenuSpaceChanged">
            <summary>
            Raises the ContextMenuSpaceChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnPathSeparatorChanged">
            <summary>
            Raises the PathSeparatorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBorderIndentChanged">
            <summary>
            Raises the BorderIndentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBorderStyleChanged">
            <summary>
            Raises the BorderStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBorderColorChanged">
            <summary>
            Raises the BorderColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLineWidthChanged">
            <summary>
            Raises the LineWidthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLineColorChanged">
            <summary>
            Raises the LineColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLineDashStyleChanged">
            <summary>
            Raises the LineDashStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxLengthChanged">
            <summary>
            Raises the BoxLengthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxDrawStyleChanged">
            <summary>
            Raises the BoxDrawStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxShownAlwaysChanged">
            <summary>
            Raises the BoxShownAlwaysChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxSignColorChanged">
            <summary>
            Raises the BoxSignColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxBorderColorChanged">
            <summary>
            Raises the BoxBorderColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxInsideColorChanged">
            <summary>
            Raises the BoxInsideColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnBoxVisibilityChanged">
            <summary>
            Raises the BoxVisibilityChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLineVisibilityChanged">
            <summary>
            Raises the LineVisibilityChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnColumnWidthChanged">
            <summary>
            Raises the ColumnWidthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckStatesChanged">
            <summary>
            Raises the CheckStatesChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckLengthChanged">
            <summary>
            Raises the CheckLengthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckGapLeftChanged">
            <summary>
            Raises the CheckGapLeftChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckGapRightChanged">
            <summary>
            Raises the CheckGapRightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckDrawStyleChanged">
            <summary>
            Raises the CheckDrawStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckBorderColorChanged">
            <summary>
            Raises the CheckBorderColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckInsideColorChanged">
            <summary>
            Raises the CheckInsideColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckInsideHotColorChanged">
            <summary>
            Raises the CheckInsideColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckTickColorChanged">
            <summary>
            Raises the CheckTickColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckTickHotColorChanged">
            <summary>
            Raises the CheckTickHotColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckMixedColorChanged">
            <summary>
            Raises the CheckMixedColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckMixedHotColorChanged">
            <summary>
            Raises the CheckMixedHotColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCheckBorderWidthChanged">
            <summary>
            Raises the CheckBorderWidthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnVerticalScrollbarChanged">
            <summary>
            Raises the VerticalScrollbarChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnHorizontalScrollbarChanged">
            <summary>
            Raises the HorizontalScrollbarChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnVerticalGranularityChanged">
            <summary>
            Raises the VerticalGranularityChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnEnableMouseWheelChanged">
            <summary>
            Raises the EnableMouseWheelChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupFontChanged">
            <summary>
            Raises the GroupFontChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupArrowsChanged">
            <summary>
            Raises the GroupArrowshanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupHotFontStyleChanged">
            <summary>
            Raises the GroupHotFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupUseHotFontStyleChanged">
            <summary>
            Raises the GroupUseHotFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupSelectedFontStyleChanged">
            <summary>
            Raises the GroupSelectedFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupUseSelectedFontStyleChanged">
            <summary>
            Raises the GroupUseSelectedFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupBorderStyleChanged">
            <summary>
            Raises the GroupBorderStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupGradientAngleChanged">
            <summary>
            Raises the GroupGradientAngleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupGradientColoringChanged">
            <summary>
            Raises the GroupGradientColoringChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupGradientBackChanged">
            <summary>
            Raises the GroupGradientBackChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupIndentLeftChanged">
            <summary>
            Raises the GroupIndentLeftChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupIndentTopChanged">
            <summary>
            Raises the GroupIndentTopChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupIndentBottomChanged">
            <summary>
            Raises the GroupIndentBottomChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupColoringChanged">
            <summary>
            Raises the GroupColoringChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupBackColorChanged">
            <summary>
            Raises the GroupBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupForeColorChanged">
            <summary>
            Raises the GroupForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupLineColorChanged">
            <summary>
            Raises the GroupLineColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupHotBackColorChanged">
            <summary>
            Raises the GroupHotBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupHotForeColorChanged">
            <summary>
            Raises the GroupHotForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupSelectedBackColorChanged">
            <summary>
            Raises the GroupSelectedBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupSelectedNoFocusBackColorChanged">
            <summary>
            Raises the GroupSelectedNoFocusBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupSelectedForeColorChanged">
            <summary>
            Raises the GroupSelectedForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupExtraLeftChanged">
            <summary>
            Raises the GroupExtraLeftChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupExtraHeightChanged">
            <summary>
            Raises the GroupExtraHeightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupHotTrackChanged">
            <summary>
            Raises the GroupHotTrackChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxChanged">
            <summary>
            Raises the GroupImageBoxChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxColumnChanged">
            <summary>
            Raises the GroupImageBoxChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxWidthChanged">
            <summary>
            Raises the GroupImageBoxWidthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxGapChanged">
            <summary>
            Raises the GroupImageBoxGapChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxBorderChanged">
            <summary>
            Raises the GroupImageBoxBorderChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxLineColorChanged">
            <summary>
            Raises the GroupImageBoxLineColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxBackColorChanged">
            <summary>
            Raises the GroupImageBoxBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxSelectedBackColorChanged">
            <summary>
            Raises the GroupImageBoxSelectedBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxColumnColorChanged">
            <summary>
            Raises the GroupImageBoxColumnColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxGradientBackChanged">
            <summary>
            Raises the GroupImageBoxGradientBackChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxGradientAngleChanged">
            <summary>
            Raises the GroupImageBoxGradientAngleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupImageBoxGradientColoringChanged">
            <summary>
            Raises the GroupImageBoxGradientColoringChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupClickExpandChanged">
            <summary>
            Raises the GroupClickExpandChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupAutoEditChanged">
            <summary>
            Raises the GroupAutoEditChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupNodesSelectableChanged">
            <summary>
            Raises the GroupNodesSelectableChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupDoubleClickExpandChanged">
            <summary>
            Raises the GroupDoubleClickExpandChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupAutoCollapseChanged">
            <summary>
            Raises the GroupAutoCollapseChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupAutoAllocateChanged">
            <summary>
            Raises the GroupAutoAllocateChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupExpandOnDragHoverChanged">
            <summary>
            Raises the GroupExpandOnDragHoverChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnGroupTextRenderingHintChanged">
            <summary>
            Raises the GroupTextRenderingHintChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnClickExpandChanged">
            <summary>
            Raises the ClickExpandChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnDoubleClickExpandChanged">
            <summary>
            Raises the DoubleClickExpandChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAutoCollapseChanged">
            <summary>
            Raises the AutoCollapseChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnExtendToRightChanged">
            <summary>
            Raises the ExtendToRightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnInstantUpdateChanged">
            <summary>
            Raises the InstantUpdateChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnTooltipsChanged">
            <summary>
            Raises the TooltipsChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnInfotipsChanged">
            <summary>
            Raises the InfotipsChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnNodesSelectableChanged">
            <summary>
            Raises the NodesSelectableChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnAutoEditChanged">
            <summary>
            Raises the AutoEditChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLabelEditChanged">
            <summary>
            Raises the LabelEditChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnCanUserExpandCollapseChanged">
            <summary>
            Raises the CanUserExpandCollapseChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnExpandOnDragHoverChanged">
            <summary>
            Raises the ExpandOnDragHoverChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnIndicatorsChanged">
            <summary>
            Raises the IndicatorsChanged( event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnHotNodeChanged">
            <summary>
            Raises the HotNodeChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnVerticalNodeGapChanged">
            <summary>
            Raises the VerticalNodeGapChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMinimumNodeHeightChanged">
            <summary>
            Raises the MinimumNodeHeightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnMaximumNodeHeightChanged">
            <summary>
            Raises the MaximumNodeHeightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnTextRenderingHintChanged">
            <summary>
            Raises the TextRenderingHintChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnHotBackColorChanged">
            <summary>
            Raises the HotBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnHotForeColorChanged">
            <summary>
            Raises the HotForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectedBackColorChanged">
            <summary>
            Raises the SelectedBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectedNoFocusBackColorChanged">
            <summary>
            Raises the SelectedNoFocusBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectedForeColorChanged">
            <summary>
            Raises the SelectedForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectModeChanged">
            <summary>
            Raises the SelectModeChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnHotFontStyleChanged">
            <summary>
            Raises the HotFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnUseHotFontStyleChanged">
            <summary>
            Raises the UseHotFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectedFontStyleChanged">
            <summary>
            Raises the SelectedFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnUseSelectedFontStyleChanged">
            <summary>
            Raises the UseSelectedFontStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnImageListChanged">
            <summary>
            Raises the ImageListChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnImageIndexChanged">
            <summary>
            Raises the ImageIndexChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnSelectedImageIndexChanged">
            <summary>
            Raises the SelectedImageIndexChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnImageGapLeftChanged">
            <summary>
            Raises the ImageGapLeftChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnImageGapRightChanged">
            <summary>
            Raises the ImageGapRightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TreeControl.OnLabelControlCreated(System.Windows.Forms.TextBox)">
            <summary>
            Raises the LabelControlCreated event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BorderIndentChanged">
            <summary>
            Occurs when the value of the BorderIndent property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BorderStyleChanged">
            <summary>
            Occurs when the value of the BorderStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BorderColorChanged">
            <summary>
            Occurs when the value of the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LineWidthChanged">
            <summary>
            Occurs when the value of the LineWidth property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LineColorChanged">
            <summary>
            Occurs when the value of the LineColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LineDashStyleChanged">
            <summary>
            Occurs when the value of the LineDashStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxShownAlwaysChanged">
            <summary>
            Occurs when the value of the BoxShownAlways property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxSignColorChanged">
            <summary>
            Occurs when the value of the BoxSignColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxBorderColorChanged">
            <summary>
            Occurs when the value of the BoxBorderColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxInsideColorChanged">
            <summary>
            Occurs when the value of the BoxInsideColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxLengthChanged">
            <summary>
            Occurs when the value of the BoxLength property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxDrawStyleChanged">
            <summary>
            Occurs when the value of the BoxDrawStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BoxVisibilityChanged">
            <summary>
            Occurs when the value of the BoxVisibility property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LineVisibilityChanged">
            <summary>
            Occurs when the value of the LineVisibility property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ColumnWidthChanged">
            <summary>
            Occurs when the value of the LinesColumnWidth property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckStatesChanged">
            <summary>
            Occurs when the value of the CheckStates property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckDrawStyleChanged">
            <summary>
            Occurs when the value of the CheckDrawStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckLengthChanged">
            <summary>
            Occurs when the value of the CheckLength property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckGapLeftChanged">
            <summary>
            Occurs when the value of the CheckGapLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckGapRightChanged">
            <summary>
            Occurs when the value of the CheckGapRight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckBorderWidthChanged">
            <summary>
            Occurs when the value of the CheckBorderWidth property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckBorderColorChanged">
            <summary>
            Occurs when the value of the CheckBorderColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckInsideColorChanged">
            <summary>
            Occurs when the value of the CheckInsideColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckInsideHotColorChanged">
            <summary>
            Occurs when the value of the CheckInsideHotColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckTickColorChanged">
            <summary>
            Occurs when the value of the CheckTickColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckTickHotColorChanged">
            <summary>
            Occurs when the value of the CheckTickHotColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckMixedColorChanged">
            <summary>
            Occurs when the value of the CheckMixedColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CheckMixedHotColorChanged">
            <summary>
            Occurs when the value of the CheckMixedHotColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoEditChanged">
            <summary>
            Occurs when the value of the GroupAutoEdit property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupFontChanged">
            <summary>
            Occurs when the value of the GroupFont property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupArrowsChanged">
            <summary>
            Occurs when the value of the GroupArrows property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentLeftChanged">
            <summary>
            Occurs when the value of the GroupIndentLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentTopChanged">
            <summary>
            Occurs when the value of the GroupIndentLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentBottomChanged">
            <summary>
            Occurs when the value of the GroupIndentLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupColoringChanged">
            <summary>
            Occurs when the value of the GroupColoring property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupBackColorChanged">
            <summary>
            Occurs when the value of the GroupBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupForeColorChanged">
            <summary>
            Occurs when the value of the GroupForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupLineColorChanged">
            <summary>
            Occurs when the value of the GroupLineColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotBackColorChanged">
            <summary>
            Occurs when the value of the GroupHotBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotForeColorChanged">
            <summary>
            Occurs when the value of the GroupHotForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedBackColorChanged">
            <summary>
            Occurs when the value of the GroupSelectedBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedNoFocusBackColorChanged">
            <summary>
            Occurs when the value of the GroupSelectedNoFocusBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedForeColorChanged">
            <summary>
            Occurs when the value of the GroupSelectedForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupBorderStyleChanged">
            <summary>
            Occurs when the value of the GroupBorderStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotFontStyleChanged">
            <summary>
            Occurs when the value of the GroupHotFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupUseHotFontStyleChanged">
            <summary>
            Occurs when the value of the GroupUseHotFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedFontStyleChanged">
            <summary>
            Occurs when the value of the GroupSelectedFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupUseSelectedFontStyleChanged">
            <summary>
            Occurs when the value of the GroupUseSelectedFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientAngleChanged">
            <summary>
            Occurs when the value of the GroupGradientAngle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientColoringChanged">
            <summary>
            Occurs when the value of the GroupGradientColoring property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientBackChanged">
            <summary>
            Occurs when the value of the GroupGradientBack property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupExtraLeftChanged">
            <summary>
            Occurs when the value of the GroupExtraLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupClickExpandChanged">
            <summary>
            Occurs when the value of the GroupClickExpand property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupDoubleClickExpandChanged">
            <summary>
            Occurs when the value of the GroupDoubleClickExpand property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoCollapseChanged">
            <summary>
            Occurs when the value of the GroupAutoCollapse property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupNodesSelectableChanged">
            <summary>
            Occurs when the value of the GroupNodesSelectable property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoAllocateChanged">
            <summary>
            Occurs when the value of the GroupAutoAllocate property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupExtraHeightChanged">
            <summary>
            Occurs when the value of the GroupExtraHeight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotTrackChanged">
            <summary>
            Occurs when the value of the GroupHotTrack property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxChanged">
            <summary>
            Occurs when the value of the GroupImageBox property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxBorderChanged">
            <summary>
            Occurs when the value of the GroupImageBoxBorder property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxWidthChanged">
            <summary>
            Occurs when the value of the GroupImageBoxWidth property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGapChanged">
            <summary>
            Occurs when the value of the GroupImageBoxGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxLineColorChanged">
            <summary>
            Occurs when the value of the GroupImageBoxLineColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxBackColorChanged">
            <summary>
            Occurs when the value of the GroupImageBoxBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxSelectedBackColorChanged">
            <summary>
            Occurs when the value of the GroupImageBoxSelectedBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxColumnColorChanged">
            <summary>
            Occurs when the value of the GroupImageBoxColumnColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientBackChanged">
            <summary>
            Occurs when the value of the GroupImageBoxGradientBack property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientColoringChanged">
            <summary>
            Occurs when the value of the GroupImageBoxGradientColoring property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientAngleChanged">
            <summary>
            Occurs when the value of the GroupImageBoxGradientAngle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupTextRenderingHintChanged">
            <summary>
            Occurs when the value of the GroupTextRenderingHint property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupExpandOnDragHoverChanged">
            <summary>
            Occurs when the value of the GroupExpandOnDragHover property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.VerticalScrollbarChanged">
            <summary>
            Occurs when the value of the VerticalScrollbar property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.HorizontalScrollbarChanged">
            <summary>
            Occurs when the value of the HorizontalScrollbar property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.VerticalGranularityChanged">
            <summary>
            Occurs when the value of the VerticalGranularity property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.EnableMouseWheelChanged">
            <summary>
            Occurs when the value of the EnableMouseWheel property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ImageListChanged">
            <summary>
            Occurs when the value of the ImageList property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ImageIndexChanged">
            <summary>
            Occurs when the value of the ImageIndex property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ImageGapLeftChanged">
            <summary>
            Occurs when the value of the ImageGapLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ImageGapRightChanged">
            <summary>
            Occurs when the value of the ImageGapRight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectedImageIndexChanged">
            <summary>
            Occurs when the value of the SelectedImageIndex property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ContextMenuNodeChanged">
            <summary>
            Occurs when the value of the ContextMenuNode property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ContextMenuSpaceChanged">
            <summary>
            Occurs when the value of the ContextMenuSpace property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ClickExpandChanged">
            <summary>
            Occurs when the value of the ClickExpand property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.DoubleClickExpandChanged">
            <summary>
            Occurs when the value of the DoubleClickExpand property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AutoCollapseChanged">
            <summary>
            Occurs when the value of the AutoCollapse property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ExtendToRightChanged">
            <summary>
            Occurs when the value of the ExtendToRight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AutoEditChanged">
            <summary>
            Occurs when the value of the AutoEdit property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LabelEditChanged">
            <summary>
            Occurs when the value of the LabelEdit property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodesSelectableChanged">
            <summary>
            Occurs when the value of the NodesSelectable property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.CanUserExpandCollapseChanged">
            <summary>
            Occurs when the value of the CanUserExpandCollapse property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ExpandOnDragHoverChanged">
            <summary>
            Occurs when the value of the ExpandOnDragHover property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.InstantUpdateChanged">
            <summary>
            Occurs when the value of the InstantUpdate property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.TooltipsChanged">
            <summary>
            Occurs when the value of the Tooltips property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.InfotipsChanged">
            <summary>
            Occurs when the value of the Infotips property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.IndicatorsChanged">
            <summary>
            Occurs when the value of the InstantUpdate property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ViewControllersChanged">
            <summary>
            Occurs when the value of the ViewControllers property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.HotNodeChanged">
            <summary>
            Occurs when the value of the HotNode property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.VerticalNodeGapChanged">
            <summary>
            Occurs when the value of the VerticalNodeGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.MinimumNodeHeightChanged">
            <summary>
            Occurs when the value of the MinimumNodeHeight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.MaximumNodeHeightChanged">
            <summary>
            Occurs when the value of the MaximumNodeHeight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.TextRenderingHintChanged">
            <summary>
            Occurs when the value of the TextRenderingHint property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.HotBackColorChanged">
            <summary>
            Occurs when the value of the HotBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.HotForeColorChanged">
            <summary>
            Occurs when the value of the HotForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectedBackColorChanged">
            <summary>
            Occurs when the value of the SelectedBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectedNoFocusBackColorChanged">
            <summary>
            Occurs when the value of the SelectedNoFocusBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectedForeColorChanged">
            <summary>
            Occurs when the value of the SelectedForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.HotFontStyleChanged">
            <summary>
            Occurs when the value of the HotFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.UseHotFontStyleChanged">
            <summary>
            Occurs when the value of the UseHotFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectedFontStyleChanged">
            <summary>
            Occurs when the value of the SelectedFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.UseSelectedFontStyleChanged">
            <summary>
            Occurs when the value of the UseSelectedFontStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.SelectModeChanged">
            <summary>
            Occurs when the value of the SelectMode property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.PathSeparatorChanged">
            <summary>
            Occurs when the value of the PathSeparator property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ClientDragEnter">
            <summary>
            Occurs when user drags into space outside of any nodes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ClientDragLeave">
            <summary>
            Occurs when user drags away from space outside of any nodes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ClientDragOver">
            <summary>
            Occurs when user drags over space outside of any nodes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ClientDragDrop">
            <summary>
            Occurs when users drops onto space outside of any nodes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodeDragEnter">
            <summary>
            Occurs when user drags into a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodeDragLeave">
            <summary>
            Occurs when user drags away from a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodeDragOver">
            <summary>
            Occurs when user drags over a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodeDragDrop">
            <summary>
            Occurs when users drops onto a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.NodeDrag">
            <summary>
            Occurs when user attempts to drag from a node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeSelect">
            <summary>
            Occurs just before a Node is to become selected.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeDeselect">
            <summary>
            Occurs just before a Node is to become deselected.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterSelect">
            <summary>
            Occurs just after a Node has become selected.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterDeselect">
            <summary>
            Occurs just after a Node has become deselected.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeCheck">
            <summary>
            Occurs just before a Node is to change its checked state.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterCheck">
            <summary>
            Occurs just after a Node has changed its checked state.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeExpand">
            <summary>
            Occurs just before a Node is to be expanded.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterExpand">
            <summary>
            Occurs just after a Node has been expanded.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeCollapse">
            <summary>
            Occurs just before a Node is to be collapsed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterCollapse">
            <summary>
            Occurs just after a Node has been collapsed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.BeforeLabelEdit">
            <summary>
            Occurs just before a Node label is edited.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterLabelEdit">
            <summary>
            Occurs just after a Node label has been edited.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.AfterSelectionChanged">
            <summary>
            Occurs when after a change in selection has occured.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.LabelControlCreated">
            <summary>
            Occurs when a label control is created.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ShowContextMenuNode">
            <summary>
            Occurs when user right clicks on a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.ShowContextMenuSpace">
            <summary>
            Occurs when user right clicks outside of any Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupDragEnter">
            <summary>
            Occurs when user drags into a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupDragLeave">
            <summary>
            Occurs when user drags away from a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupDragOver">
            <summary>
            Occurs when user drags over a Node.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TreeControl.GroupDragDrop">
            <summary>
            Occurs when users drops onto a Node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.NodeVC">
            <summary>
            Gets and sets the view controller to use for drawing individual nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CollectionVC">
            <summary>
            Gets and sets the view controller to use for drawing a collection of nodes..
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ViewControllers">
            <summary>
            Gets and sets the view controllers that should be used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedNodes">
            <summary>
            Gets the collection of currently selected Nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedNode">
            <summary>
            Gets the collection of currently selected Nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.FocusNode">
            <summary>
            Gets and sets the node that has foucs when the control has focus.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.Nodes">
            <summary>
            Gets the collection of root nodes in the tree.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ContextMenuStrip">
            <summary>
            Gets the context menu strip to use on right clicking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ContextMenuNode">
            <summary>
            Gets the context menu strip to use on right clicking a Node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ContextMenuSpace">
            <summary>
            Gets the context menu strip to use on right clicking outside of any Node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.PathSeparator">
            <summary>
            Gets or sets the delimiter string that the node path uses.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BackColor">
            <summary>
            Gets and sets the background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BorderIndent">
            <summary>
            Gets and sets the drawing style for the control border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BorderStyle">
            <summary>
            Gets and sets the drawing style for the control border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BorderColor">
            <summary>
            Gets and sets the drawing color for the control border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.Corner">
            <summary>
            Gets access to the Panel control display in corner when both scroll bars are shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.LineWidth">
            <summary>
            Gets and sets the width of lines.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.LineColor">
            <summary>
            Gets and sets the color of lines.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.LineDashStyle">
            <summary>
            Gets and sets the style used for lines
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxLength">
            <summary>
            Gets and sets the length used for drawing box.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxDrawStyle">
            <summary>
            Gets and sets how Boxes are drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxShownAlways">
            <summary>
            Gets and sets a value to indicate if box is drawn when node has no children.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxSignColor">
            <summary>
            Gets and sets the color of box signs.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxBorderColor">
            <summary>
            Gets and sets the color of box borders.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxInsideColor">
            <summary>
            Gets and sets the color of box borders.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.BoxVisibility">
            <summary>
            Gets and sets when Boxes are displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.LineVisibility">
            <summary>
            Gets and sets when Lines are displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ColumnWidth">
            <summary>
            Gets and sets the width of the lines column.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckStates">
            <summary>
            Gets and sets the style of checkboxes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckLength">
            <summary>
            Gets and sets the size for drawing a checkbox..
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckGapLeft">
            <summary>
            Gets and sets the pixel gap between start of node and start of check.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckGapRight">
            <summary>
            Gets and sets the pixel gap between end of check and start of image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckDrawStyle">
            <summary>
            Gets and sets how checkboxes are drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckBorderWidth">
            <summary>
            Gets and sets the width of the check border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckBorderColor">
            <summary>
            Gets and sets the color of check borders.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckInsideColor">
            <summary>
            Gets and sets the color inside the check box.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckInsideHotColor">
            <summary>
            Gets and sets the color inside the check box when hot tracked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckTickColor">
            <summary>
            Gets and sets the ticked color inside the check box.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckTickHotColor">
            <summary>
            Gets and sets the ticked color inside the check box when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckMixedColor">
            <summary>
            Gets and sets the mixed color inside the check box.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CheckMixedHotColor">
            <summary>
            Gets and sets the mixed color inside the check box when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.MouseWheelUnits">
            <summary>
            Gets and sets the number of pixels to scroll when the mouse wheel is used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.MouseUnits">
            <summary>
            Gets and sets the number of pixels to scroll when the scrollbar button is used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.VerticalGranularity">
            <summary>
            Gets and sets the vertical scrolling granularity.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.IgnoreEnsureDisplayedH">
            <summary>
            Gets and sets if the horizontal scrolling be left unchanged when ensuring a node is displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.IgnoreEnsureDisplayedV">
            <summary>
            Gets and sets if the vertical scrolling be left unchanged when ensuring a node is displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.VerticalScrollbar">
            <summary>
            Gets and sets the vertical scrollbar is visibility.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.HorizontalScrollbar">
            <summary>
            Gets and sets the horizontal scrollbar is visibility.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.EnableMouseWheel">
            <summary>
            Gets and sets a value indicating if mouse wheel should scroll.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupNodesSelectable">
            <summary>
            Gets and sets a value indicating if group level nodes can be selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupTextRenderingHint">
            <summary>
            Gets and sets how group text is rendered.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupFont">
            <summary>
            Gets and sets the font for drawing group text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoEdit">
            <summary>
            Gets and sets a value indicating if group nodes enter editing after a delayed second click.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupArrows">
            <summary>
            Gets and sets a value indicating if arrows should be be shown on the group nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentLeft">
            <summary>
            Gets and sets the extra space on left of group children.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentTop">
            <summary>
            Gets and sets the extra space at top of group children.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupIndentBottom">
            <summary>
            Gets and sets the extra space at bottom of group children.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupColoring">
            <summary>
            Gets and sets how the groups are colored.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupBackColor">
            <summary>
            Gets and sets the group background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupForeColor">
            <summary>
            Gets and sets the group foreground color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupLineColor">
            <summary>
            Gets and sets the group line color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotBackColor">
            <summary>
            Gets and sets the group background color when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedBackColor">
            <summary>
            Gets and sets the group background color when selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedNoFocusBackColor">
            <summary>
            Gets and sets the group background color when selected but without focus.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotForeColor">
            <summary>
            Gets and sets the group foreground color when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedForeColor">
            <summary>
            Gets and sets the group foreground color when selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupExpandOnDragHover">
            <summary>
            Gets and sets a value indicating if group nodes should expand when dragging hovers over them.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxLineColor">
            <summary>
            Gets and sets the image box line color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxBackColor">
            <summary>
            Gets and sets the image box background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxSelectedBackColor">
            <summary>
            Gets and sets the image box background color when selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxColumnColor">
            <summary>
            Gets and sets the image box column background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientBack">
            <summary>
            Gets and sets if the group image box background be drawn with gradient.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientAngle">
            <summary>
            Gets and sets the direction of image box gradient when drawing group in gradient effect.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGradientColoring">
            <summary>
            Gets and sets how the image box gradient colour is calculated.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupBorderStyle">
            <summary>
            Gets and sets how the group borders are drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotFontStyle">
            <summary>
            Gets and sets the group font style to apply when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupUseHotFontStyle">
            <summary>
            Gets and sets a value indicating if the GroupHotFontStyle should be used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupSelectedFontStyle">
            <summary>
            Gets and sets the group font style to apply when selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupUseSelectedFontStyle">
            <summary>
            Gets and sets a value indicating if the GroupSelectedFontStyle should be used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientAngle">
            <summary>
            Gets and sets the direction of gradient when drawing group in gradient effect.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientColoring">
            <summary>
            Gets and sets how the gradient colour is calculated.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupGradientBack">
            <summary>
            Gets and sets if the group background be drawn with gradient.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupExtraLeft">
            <summary>
            Gets and sets extra padding on left of group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupExtraHeight">
            <summary>
            Gets and sets extra padding added to height of group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupHotTrack">
            <summary>
            Gets and sets a value indicating if group should be hot tracked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupClickExpand">
            <summary>
            Gets and sets the expand action to perform when clicking a group node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupDoubleClickExpand">
            <summary>
            Gets and sets the expand action to perform when double clicking a group node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoCollapse">
            <summary>
            Gets and sets a a value indicating if nodes at same level should collapse when group node is expanded.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupAutoAllocate">
            <summary>
            Gets and sets a a value indicating if any spare space between last node and end of control should be allocated to expanded group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBox">
            <summary>
            Gets and sets a value indicating if an image box should be shown at start of group nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxColumn">
            <summary>
            Gets and sets a value indicating if the image box column be drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxBorder">
            <summary>
            Gets and sets a value indicating if the image box border should be drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxWidth">
            <summary>
            Gets and sets the width of the image box area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.GroupImageBoxGap">
            <summary>
            Gets and sets the spacing gap between the image box and group text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ClickExpand">
            <summary>
            Gets and sets then expand action to take when node is clicked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.DoubleClickExpand">
            <summary>
            Gets and sets then expand action to take when node is double clicked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.AutoCollapse">
            <summary>
            Gets and sets a a value indicating if nodes at same level should collapse when node is expanded.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ExtendToRight">
            <summary>
            Gets and sets a a value indicating if nodes should be selectable and drawn to right extent.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.InstantUpdate">
            <summary>
            Gets and sets a value indicating if each change be shown immediately.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.Tooltips">
            <summary>
            Gets and sets a value indicating if tooltips should be shown when node cannot be fully seen.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.Infotips">
            <summary>
            Gets and sets a value indicating if node specific tooltips be used if defined for the individual node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.NodesSelectable">
            <summary>
            Gets and sets a value indicating if nodes can be selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.AutoEdit">
            <summary>
            Gets and sets a value indicating if nodes enter editing after a delayed second click.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.LabelEdit">
            <summary>
            Gets and sets a value indicating if nodes labels can be edited.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.CanUserExpandCollapse">
            <summary>
            Gets and sets a value indicating if user can expand or collapse nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ExpandOnDragHover">
            <summary>
            Gets and sets a value indicating if nodes should expand when dragging hovers over them.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.Indicators">
            <summary>
            Gets and sets how indicators should be shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.VerticalNodeGap">
            <summary>
            Gets and sets the vertical pixel gap between nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.MinimumNodeHeight">
            <summary>
            Gets and sets the minimum height for a node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.MaximumNodeHeight">
            <summary>
            Gets and sets the maximum height for a node.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ImageList">
            <summary>
            Gets and sets the image list from which node images are taken.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ImageIndex">
            <summary>
            Gets and sets the default image index for nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedImageIndex">
            <summary>
            Gets and sets the default selected image index for nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ImageGapLeft">
            <summary>
            Gets and sets the pixel gap between start of node and start of image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.ImageGapRight">
            <summary>
            Gets and sets the pixel gap between end of image and start of text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.TextRenderingHint">
            <summary>
            Gets and sets how text is rendered.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.HotBackColor">
            <summary>
            Gets and sets the node background color for hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.HotForeColor">
            <summary>
            Gets and sets the node foreground color for hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedBackColor">
            <summary>
            Gets and sets the node background color for selected nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedNoFocusBackColor">
            <summary>
            Gets and sets the node background color for selected nodes without focus.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedForeColor">
            <summary>
            Gets and sets the node foreground color for selected nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.HotFontStyle">
            <summary>
            Gets and sets the node font style to apply when hot tracking.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.UseHotFontStyle">
            <summary>
            Gets and sets a value indicating if the HotFontStyle should be used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectMode">
            <summary>
            Gets and sets how selection operates.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedCount">
            <summary>
            Gets the number of selected nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectSameLevel">
            <summary>
            Gets and sets a value indicating if only nodes at the saem level should be selectable.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.SelectedFontStyle">
            <summary>
            Gets and sets the node font style to apply for selected nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TreeControl.UseSelectedFontStyle">
            <summary>
            Gets and sets a value indicating if the SelectedFontStyle should be used.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.SelectedNodeCollection">
            <summary>
            Manage a collection of selected Node instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SelectedNodeCollection.#ctor(System.Collections.Hashtable)">
            <summary>
            Initialize a new instance of the SelectedNodeCollection class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SelectedNodeCollection.Contains(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Determines whether a Node is in the collection.
            </summary>
            <param name="value">The Node to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SelectedNodeCollection.IndexOf(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Returns the index of the first occurrence of the given Node.
            </summary>
            <param name="value">The Node to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SelectedNodeCollection.Item(System.Int32)">
            <summary>
            Gets the Node at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TitleBar">
            <summary>
            Configurable title bar for presenting user with header information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.#ctor">
            <summary>
            Initializes a new instance of the TitleBar class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetBackColor">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetForeColor">
            <summary>
            Resets the ForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetDock">
            <summary>
            Resets the Dock property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetActAsButton">
            <summary>
            Resets the ActAsButton property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetDirection">
            <summary>
            Resets the Direction property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetArrowButton">
            <summary>
            Resets the ArrowButton property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetInactiveBackColor">
            <summary>
            Resets the InactiveBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetApply2007ClearType">
            <summary>
            Resets the Apply2007ClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetApplyMediaPlayerClearType">
            <summary>
            Resets the ApplyMediaPlayerClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetGradientDirection">
            <summary>
            Resets the GradientDirection property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetGradientColoring">
            <summary>
            Resets the GradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetMouseOverColor">
            <summary>
            Resets the GradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetInactiveForeColor">
            <summary>
            Resets the InactiveForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetGradientActiveColor">
            <summary>
            Resets the GradientActiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetGradientInactiveColor">
            <summary>
            Resets the GradientInactiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetTextAlignment">
            <summary>
            Resets the TextAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetLineAlignment">
            <summary>
            Resets the LineAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPreText">
            <summary>
            Resets the PreText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPostText">
            <summary>
            Resets the PostText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPreSeparator">
            <summary>
            Resets the PostSeparator property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPostSeparator">
            <summary>
            Resets the PostSeparator property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetTextRenderingHint">
            <summary>
            Resets the TextRenderingHint property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPadLeft">
            <summary>
            Resets the PadLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPadRight">
            <summary>
            Resets the PadRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPadTop">
            <summary>
            Resets the PadTop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetPadBottom">
            <summary>
            Resets the PadBottom property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetImageToTextGap">
            <summary>
            Resets the ImageToTextGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetEdgeToImageGap">
            <summary>
            Resets the EdgeToImageGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetEdgeToArrowGap">
            <summary>
            Resets the EdgeToArrowGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetIcon">
            <summary>
            Resets the Icon property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetImageList">
            <summary>
            Resets the ImageList property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetImageAlignment">
            <summary>
            Resets the ImageAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetArrowAlignment">
            <summary>
            Resets the ArrowAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetImageIndex">
            <summary>
            Resets the ImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.ResetActive">
            <summary>
            Resets the Active property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.PerformButtonClick">
            <summary>
            Raise the Click event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnButtonClick">
            <summary>
            Raises the ButtonClick event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnVisualStyleChanged">
            <summary>
            Raises the VisualStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnActAsButtonChanged">
            <summary>
            Raises the ActAsButtonChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnArrowButtonChanged">
            <summary>
            Raises the ArrowButtonChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnTextAlignmentChanged">
            <summary>
            Raises the TextAlignmentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnLineAlignmentChanged">
            <summary>
            Raises the LineAlignmentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPreTextChanged">
            <summary>
            Raises the PreTextChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPostTextChanged">
            <summary>
            Raises the PostTextChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPreSeparatorChanged">
            <summary>
            Raises the PreSeparatorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPostSeparatorChanged">
            <summary>
            Raises the PostSeparator event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPadLeftChanged">
            <summary>
            Raises the PadLeftChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPadRightChanged">
            <summary>
            Raises the PadRightChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPadTopChanged">
            <summary>
            Raises the PadTopChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPadBottomChanged">
            <summary>
            Raises the PadBottomChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnImageToTextGapChanged">
            <summary>
            Raises the ImageToTextGapChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnEdgeToImageGapChanged">
            <summary>
            Raises the EdgeToImageGapChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnEdgeToArrowGapChanged">
            <summary>
            Raises the EdgeToArrowGapChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnActiveChanged">
            <summary>
            Raises the ActiveChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnInactiveBackColorChanged">
            <summary>
            Raises the InactiveBackColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnInactiveForeColorChanged">
            <summary>
            Raises the InactiveForeColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnGradientActiveColorChanged">
            <summary>
            Raises the GradientActiveColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnGradientInactiveColorChanged">
            <summary>
            Raises the GradientInactiveColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnGradientDirectionChanged">
            <summary>
            Raises the GradientDirectionChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnGradientColoringChanged">
            <summary>
            Raises the GradientColoringChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseOverColorChanged">
            <summary>
            Raises the MouseOverColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnImageChanged">
            <summary>
            Raises the ImageChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnImageAlignmentChanged">
            <summary>
            Raises the ImageAlignmentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnArrowAlignmentChanged">
            <summary>
            Raises the ArrowAlignmentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnIconChanged">
            <summary>
            Raises the IconChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnImageListChanged">
            <summary>
            Raises the ImageListChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnImageIndexChanged">
            <summary>
            Raises the ImageIndexChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnDirectionChanged">
            <summary>
            Raises the DirectionChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnTextRenderingHintChanged">
            <summary>
            Raises the TextRenderingHint event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ButtonClick">
            <summary>
            Occurs when the control or arrow has been clicked.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ActiveChanged">
            <summary>
            Occurs when the Active property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.VisualStyleChanged">
            <summary>
            Occurs when the Style property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ActAsButtonChanged">
            <summary>
            Occurs when the ActAsButton property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.InactiveBackColorChanged">
            <summary>
            Occurs when the InactiveBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.InactiveForeColorChanged">
            <summary>
            Occurs when the InactiveForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.GradientActiveColorChanged">
            <summary>
            Occurs when the GradientActiveColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.GradientInactiveColorChanged">
            <summary>
            Occurs when the GradientInactiveColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.GradientDirectionChanged">
            <summary>
            Occurs when the GradientDirection property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.GradientColoringChanged">
            <summary>
            Occurs when the GradientColoring property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.TextAlignmentChanged">
            <summary>
            Occurs when the TextAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.LineAlignmentChanged">
            <summary>
            Occurs when the TextAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PreTextChanged">
            <summary>
            Occurs when the PreText property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PostTextChanged">
            <summary>
            Occurs when the PostText property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PreSeparatorChanged">
            <summary>
            Occurs when the PreSeparator property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PostSeparatorChanged">
            <summary>
            Occurs when the PostSeparator property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PadLeftChanged">
            <summary>
            Occurs when the PadLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PadRightChanged">
            <summary>
            Occurs when the PadRight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PadTopChanged">
            <summary>
            Occurs when the PadTop property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.PadBottomChanged">
            <summary>
            Occurs when the PadBottom property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ImageToTextGapChanged">
            <summary>
            Occurs when the PadBottom property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.EdgeToImageGapChanged">
            <summary>
            Occurs when the EdgeToImageGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.EdgeToArrowGapChanged">
            <summary>
            Occurs when the EdgeToArrowGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ImageChanged">
            <summary>
            Occurs when the Image property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.IconChanged">
            <summary>
            Occurs when the Icon property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ImageIndexChanged">
            <summary>
            Occurs when the ImageIndex property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ImageListChanged">
            <summary>
            Occurs when the ImageList property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ImageAlignmentChanged">
            <summary>
            Occurs when the ImageAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ArrowAlignmentChanged">
            <summary>
            Occurs when the ArrowAlignmen property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.DirectionChanged">
            <summary>
            Occurs when the Direction property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.ArrowButtonChanged">
            <summary>
            Occurs when the Direction property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.TextRenderingHintChanged">
            <summary>
            Occurs when the TextRenderingHint property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TitleBar.MouseOverColorChanged">
            <summary>
            Occurs when the MouseOverColor property changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.BackColor">
            <summary>
            Gets and sets the background color used when drawing the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ForeColor">
            <summary>
            Gets and sets the foreground color is used when drawing text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Dock">
            <summary>
            Gets or sets which edge of the parent container a control is docked to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.TitleButtons">
            <summary>
            Gets the collection of title buttons.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Style">
            <summary>
            Gets or sets the visual style of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ActAsButton">
            <summary>
            Gets and sets a value indicating if control should act like a button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Direction">
            <summary>
            Gets and sets the direction that text and images are positioned.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ArrowButton">
            <summary>
            Gets and sets which (if any) arrow button should be displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.InactiveBackColor">
            <summary>
            Gets and sets the background color used when drawing the control inactive.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.GradientDirection">
            <summary>
            Gets and sets the policy used for drawing background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.GradientColoring">
            <summary>
            Gets and sets colors used when drawing a gradient background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.MouseOverColor">
            <summary>
            Gets and sets colors used when drawing a gradient background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.InactiveForeColor">
            <summary>
            The text color used when drawing the control inactive.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.GradientActiveColor">
            <summary>
            Gets and sets the second color available for active gradients.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.GradientInactiveColor">
            <summary>
            Gets and sets the second color available for inactive gradients.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.TextAlignment">
            <summary>
            Gets and sets where the text is postitioned across the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.LineAlignment">
            <summary>
            Gets and sets where items are drawn down the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PreText">
            <summary>
            Gets and sets the text to prefix the title with.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PostText">
            <summary>
            Gets and sets the text to postfix the title with.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PreSeparator">
            <summary>
            Gets and sets the separator between PreText and Text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PostSeparator">
            <summary>
            Gets and sets the separator between Text and PostText.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.TextRenderingHint">
            <summary>
            Gets and sets the rendering hint to use when drawing text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PadLeft">
            <summary>
            Gets and sets the gap between left edge and start of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PadRight">
            <summary>
            Gets and sets the gap between right edge and end of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PadTop">
            <summary>
            Gets and sets the gap between top edge and start of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.PadBottom">
            <summary>
            Gets and sets the gap between bottom edge and end of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ImageToTextGap">
            <summary>
            Gets and sets the gap between image and start of text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.EdgeToImageGap">
            <summary>
            Gets and sets the gap between edge and start of image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.EdgeToArrowGap">
            <summary>
            Gets and sets the gap between edge and start of arrow.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Icon">
            <summary>
            Gets and sets the icon to draw in the title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Image">
            <summary>
            Gets and sets the image to draw in title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ImageList">
            <summary>
            Gets and sets the source of images associated with ImageIndex.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ImageAlignment">
            <summary>
            Gets and sets the position of image/icon.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ArrowAlignment">
            <summary>
            Gets and sets the position of arrow.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.ImageIndex">
            <summary>
            Gets and sets the index into associated ImageList.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleBar.Active">
            <summary>
            Gets and sets a value indicating if control should be drawn active.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ActAsButton">
            <summary>
            Specifies how control should act as a button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ActAsButton.No">
            <summary>
            Specifies that control is not to act like a button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ActAsButton.WholeControl">
            <summary>
            Specifies whole control is to be treated as a button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ActAsButton.JustArrow">
            <summary>
            Specifies that only the arrow area should be treated as button.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ImageAlignment">
            <summary>
            Specifies position to draw image/icon relative to control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ImageAlignment.Near">
            <summary>
            Specifies the image/icon be drawn near side.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ImageAlignment.Far">
            <summary>
            Specifies the image/icon be drawn far side.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GradientDirection">
            <summary>
            Specifies how the background color gradient is drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.None">
            <summary>
            Specifies no gradient but solid color instead.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.LeftToRight">
            <summary>
            Specifies gradient left to right of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.TopLeftToBottomRight">
            <summary>
            Specifies gradient top left to bottom right of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.TopToBottom">
            <summary>
            Specifies gradient from top to bottom of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.TopRightToBottomLeft">
            <summary>
            Specifies gradient top right to bottom left of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.RightToLeft">
            <summary>
            Specifies gradient right to left of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.BottomRightToTopLeft">
            <summary>
            Specifies gradient bottom right to top left of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.BottomToTop">
            <summary>
            Specifies gradient from bottom to top of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientDirection.BottomLeftToTopRight">
            <summary>
            Specifies gradient bottom left to top right of control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GradientColoring">
            <summary>
            Specifies source and destination colors when drawing gradient background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientColoring.LightBackToBack">
            <summary>
            Specifies light version of BackColor to BackColor.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientColoring.LightBackToDarkBack">
            <summary>
            Specifies light version of BackColor to dark version of BackColor.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientColoring.BackToDarkBack">
            <summary>
            Specifies BackColor to dark version of BackColor.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientColoring.BackToGradientColor">
            <summary>
            Specifies BackColor to GradientColor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GradientColoring.LightBackToGradientColor">
            <summary>
            Specifies light version of BackColor to GradientColor.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ArrowButton">
            <summary>
            Specifies any arrow button that should be displayed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.None">
            <summary>
            Specifies that no arrow button is needed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.UpArrow">
            <summary>
            Specifies that an up arrow is needed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.DownArrow">
            <summary>
            Specifies that an down arrow is needed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.LeftArrow">
            <summary>
            Specifies that an left arrow is needed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.RightArrow">
            <summary>
            Specifies that an right arrow is needed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.Pinned">
            <summary>
            Specifies that a pinned picture appear.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ArrowButton.Unpinned">
            <summary>
            Specifies that a unpined picture appear.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PopupShadow">
            <summary>
            Provide a popup window that gives a shadow effect.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupShadow.#ctor">
            <summary>
            Initialize a new instance of the PopupShadow class. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupShadow.Dispose">
            <summary>
            Make sure the resources are disposed of gracefully.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupShadow.ShowWithoutFocus">
            <summary>
            Show the window without taking the focus
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupShadow.ShadowLength">
            <summary>
            Gets the length of any showing shadow.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupShadow.ShowRect">
            <summary>
            Gets and sets the displayed screen rectangle
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotAreaCollection">
            <summary>
            Provides a collection container for HotArea instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.Add(Crownwood.DotNetMagic.Docking.HotArea)">
            <summary>
            Adds the specified HotArea object to the collection.
            </summary>
            <param name="value">The HotArea object to add to the collection.</param>
            <returns>The HotArea object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.AddRange(Crownwood.DotNetMagic.Docking.HotArea[])">
            <summary>
            Adds an array of HotArea objects to the collection.
            </summary>
            <param name="values">An array of HotArea objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.Remove(Crownwood.DotNetMagic.Docking.HotArea)">
            <summary>
            Removes a HotArea from the collection.
            </summary>
            <param name="value">A HotArea to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.HotArea)">
            <summary>
            Inserts a HotArea instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the HotArea.</param>
            <param name="value">The HotArea object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.Contains(Crownwood.DotNetMagic.Docking.HotArea)">
            <summary>
            Determines whether a HotArea is in the collection.
            </summary>
            <param name="value">The HotArea to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotAreaCollection.IndexOf(Crownwood.DotNetMagic.Docking.HotArea)">
            <summary>
            Returns the index of the first occurrence of the given HotArea.
            </summary>
            <param name="value">The HotArea to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotAreaCollection.Item(System.Int32)">
            <summary>
            Gets the HotArea at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetManagerZones">
            <summary>
            Manage all targets used during a drag and drop operation for zone style redocking.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetManager">
            <summary>
            Manage all targets used during a drag and drop operation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.#cctor">
            <summary>
            Initializes a static fields of the TargetManager class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initializes a new instance of the TargetManager class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="host">Control that is requesting target management.</param>
            <param name="leaf">Source leaf causing drag operation.</param>
            <param name="source">Source TabControl of drag operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.MouseMove(System.Drawing.Point)">
            <summary>
            Update display indication for new mouse position.
            </summary>
            <param name="mousePos">New mouse position.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.Exit">
            <summary>
            Finish drag operation and perform required action.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.Quit">
            <summary>
            Remove any visual indications.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.Initialize">
            <summary>
            Class specific initialization.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.FindTarget(System.Drawing.Point)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos">Mouse position.</param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManager.UpdateFeedbackForTarget(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Update feedback for the new target.
            </summary>
            <param name="t">Target instance.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetManager.Squares">
            <summary>
            Gets the squares value.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetManager.Host">
            <summary>
            Gets the associated hosting control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetManager.Leaf">
            <summary>
            Gets the associated leaf instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetManager.Source">
            <summary>
            Gets the associated source.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerZones.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initializes a new instance of the TargetManagerZones class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="host">Control that is requesting target management.</param>
            <param name="leaf">Source leaf causing drag operation.</param>
            <param name="source">Source TabControl of drag operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerZones.Initialize">
            <summary>
            Class specific initialization.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerZones.FindTarget(System.Drawing.Point)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos"></param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetManagerSolid">
            <summary>
            Manage all targets used during a drag and drop operation for outline style redocking.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerSolid.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initializes a new instance of the TargetManagerSolid class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="host">Control that is requesting target management.</param>
            <param name="leaf">Source leaf causing drag operation.</param>
            <param name="source">Source TabControl of drag operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerSolid.Quit">
            <summary>
            Remove any visual indications.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerSolid.Initialize">
            <summary>
            Class specific initialization.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerSolid.UpdateFeedbackForTarget(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Update feedback for the new target.
            </summary>
            <param name="t">Target instance.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetManagerOutline">
            <summary>
            Manage all targets used during a drag and drop operation for outline style redocking.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerOutline.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initializes a new instance of the TargetManagerOutline class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="host">Control that is requesting target management.</param>
            <param name="leaf">Source leaf causing drag operation.</param>
            <param name="source">Source TabControl of drag operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerOutline.Quit">
            <summary>
            Remove any visual indications.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerOutline.Initialize">
            <summary>
            Class specific initialization.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerOutline.UpdateFeedbackForTarget(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Update feedback for the new target.
            </summary>
            <param name="t">Target instance.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.SlidingTitleBar">
            <summary>
            Configurable title bar for presenting user with header information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.#ctor">
            <summary>
            Initializes a new instance of the SlidingTitleBar class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetOpen">
            <summary>
            Resets the Open property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.CloseUp">
            <summary>
            If the control is slide out and displayed it is closed up.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetSlideOnHover">
            <summary>
            Resets the SlideOnHover property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetSlideSteps">
            <summary>
            Resets the SlideSteps property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetSlideDuration">
            <summary>
            Resets the SlideSteps property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetHoverDelay">
            <summary>
            Resets the HoverDelay property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetBorderStyle">
            <summary>
            Resets the BorderStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetBorderColor">
            <summary>
            Resets the BorderColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetTitleFont">
            <summary>
            Resets the TitleFont property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetLength">
            <summary>
            Resets the Length property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetEdge">
            <summary>
            Resets the Edge property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetArrows">
            <summary>
            Resets the Arrows property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetTitleBackColor">
            <summary>
            Resets the TitleBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetTitleForeColor">
            <summary>
            Resets the TitleForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetTextAlignment">
            <summary>
            Resets the TextAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPreText">
            <summary>
            Resets the PreText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPostText">
            <summary>
            Resets the PostText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPreSeparator">
            <summary>
            Resets the PostSeparator property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPostSeparator">
            <summary>
            Resets the PostSeparator property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPadLeft">
            <summary>
            Resets the PadLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPadRight">
            <summary>
            Resets the PadRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPadTop">
            <summary>
            Resets the PadTop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetPadBottom">
            <summary>
            Resets the PadBottom property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetMouseOverColor">
            <summary>
            Resets the GradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetTextRenderingHint">
            <summary>
            Resets the TextRenderingHint property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetLineAlignment">
            <summary>
            Resets the LineAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetInactiveBackColor">
            <summary>
            Resets the InactiveBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetInactiveForeColor">
            <summary>
            Resets the InactiveForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetIcon">
            <summary>
            Resets the Icon property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetImageList">
            <summary>
            Resets the ImageList property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetImageIndex">
            <summary>
            Resets the ImageIndex property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetImageAlignment">
            <summary>
            Resets the ImageAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetImageToTextGap">
            <summary>
            Resets the ImageToTextGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetGradientDirection">
            <summary>
            Resets the GradientDirection property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetGradientColoring">
            <summary>
            Resets the GradientColoring property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetGradientActiveColor">
            <summary>
            Resets the GradientActiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetGradientInactiveColor">
            <summary>
            Resets the GradientInactiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetEdgeToImageGap">
            <summary>
            Resets the EdgeToImageGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetEdgeToArrowGap">
            <summary>
            Resets the EdgeToArrowGap property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ResetArrowAlignment">
            <summary>
            Resets the ArrowAlignment property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="msg">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter out; false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the SliderTitleBar.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="levent">An EventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnOpenChanged">
            <summary>
            Raises the OpenChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnEdgeChanged">
            <summary>
            Raises the EdgeChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnArrowsChanged">
            <summary>
            Raises the ArrowsChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnLengthChanged">
            <summary>
            Raises the LengthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnBorderStyleChanged">
            <summary>
            Raises the BorderStyleChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnBorderColorChanged">
            <summary>
            Raises the BorderColorChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnSlideStepsChanged">
            <summary>
            Raises the SlideStepsChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnSlideDurationChanged">
            <summary>
            Raises the SlideDurationChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnHoverDelayChanged">
            <summary>
            Raises the HoverDelayChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnSlideOnHoverChanged">
            <summary>
            Raises the SlideOnHoverChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarTextChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarTextAlignmentChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the TextAlignmentChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarLineAlignmentChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the LineAlignmentChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarForeColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the TitleForeColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarBackColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the TitleBackColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarStyleChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the StyleChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarSizeChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the LineAlignmentChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPreTextChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PreTextChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPostTextChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PostTextChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPreSeparatorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PreSeparatorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPostSeparatorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PostSeparatorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPadLeftChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PadLeftChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPadRightChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PadRightChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPadTopChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PadTopChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarPadBottomChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the PadBottomChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarMouseOverColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the MouseOverColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarTextRenderingHintChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the TextRenderingHintChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarInactiveBackColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the InactiveBackColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarInactiveForeColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the InactiveForeColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarIconChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the IconChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarImageChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ImageChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarImageListChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ImageListChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarImageIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ImageIndexChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarImageAlignmentChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ImageAlignmentChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarImageToTextGapChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ImageToTextGapChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarGradientDirectionChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the GradientDirectionChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarGradientColoringChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the GradientColoringChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarGradientActiveColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the GradientActiveColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarGradientInactiveColorChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the GradientInactiveColorChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarEdgeToArrowGapChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the EdgeToArrowGapChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarEdgeToImageGapChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the EdgeToImageGapChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OnTitleBarArrowAlignmentChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ArrowAlignmentChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EdgeChanged">
            <summary>
            Occurs when the Edge property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ArrowsChanged">
            <summary>
            Occurs when the Arrows property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.LengthChanged">
            <summary>
            Occurs when the Length property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.OpenChanged">
            <summary>
            Occurs when the Open property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideOnHoverChanged">
            <summary>
            Occurs when the SlideSteps property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideStepsChanged">
            <summary>
            Occurs when the SlideSteps property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideDurationChanged">
            <summary>
            Occurs when the SlideDuration property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.HoverDelayChanged">
            <summary>
            Occurs when the HoverDelay property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.BorderStyleChanged">
            <summary>
            Occurs when the BorderStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleTextChanged">
            <summary>
            Occurs when the TitleText property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.VisualStyleChanged">
            <summary>
            Occurs when the Style property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleForeColorChanged">
            <summary>
            Occurs when the TitleForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleBackColorChanged">
            <summary>
            Occurs when the TitleBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.InactiveBackColorChanged">
            <summary>
            Occurs when the InactiveBackColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.InactiveForeColorChanged">
            <summary>
            Occurs when the InactiveForeColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientActiveColorChanged">
            <summary>
            Occurs when the GradientActiveColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientInactiveColorChanged">
            <summary>
            Occurs when the GradientInactiveColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientDirectionChanged">
            <summary>
            Occurs when the GradientDirection property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientColoringChanged">
            <summary>
            Occurs when the GradientColoring property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TextAlignmentChanged">
            <summary>
            Occurs when the TextAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.LineAlignmentChanged">
            <summary>
            Occurs when the TextAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PreTextChanged">
            <summary>
            Occurs when the PreText property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PostTextChanged">
            <summary>
            Occurs when the PostText property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PreSeparatorChanged">
            <summary>
            Occurs when the PreSeparator property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PostSeparatorChanged">
            <summary>
            Occurs when the PostSeparator property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadLeftChanged">
            <summary>
            Occurs when the PadLeft property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadRightChanged">
            <summary>
            Occurs when the PadRight property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadTopChanged">
            <summary>
            Occurs when the PadTop property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadBottomChanged">
            <summary>
            Occurs when the PadBottom property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageToTextGapChanged">
            <summary>
            Occurs when the PadBottom property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EdgeToImageGapChanged">
            <summary>
            Occurs when the EdgeToImageGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EdgeToArrowGapChanged">
            <summary>
            Occurs when the EdgeToArrowGap property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageChanged">
            <summary>
            Occurs when the Image property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.IconChanged">
            <summary>
            Occurs when the Icon property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageIndexChanged">
            <summary>
            Occurs when the ImageIndex property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageListChanged">
            <summary>
            Occurs when the ImageList property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageAlignmentChanged">
            <summary>
            Occurs when the ImageAlignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ArrowAlignmentChanged">
            <summary>
            Occurs when the ArrowAlignmen property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.MouseOverColorChanged">
            <summary>
            Occurs when the MouseOverColor property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TextRenderingHintChanged">
            <summary>
            Occurs when the TextRenderingHint property changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Controls">
            <summary>
            DesignerSerializationVisibility
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Panel">
            <summary>
            Gets and sets the child control to display.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Open">
            <summary>
            Gets and sets a value indicating if child control is opened.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideOnHover">
            <summary>
            Gets and sets a value indicating if mouse hover causes slide out.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideSteps">
            <summary>
            Gets and sets the number of steps when sliding child.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.SlideDuration">
            <summary>
            Gets and sets the number of milliseconds for toal slide duration.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.HoverDelay">
            <summary>
            Gets and sets the number of milliseconds before hovering takes effect.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.BorderStyle">
            <summary>
            Gets and sets the presence of a border around the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.BorderColor">
            <summary>
            Gets and sets the color used to draw the border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleFont">
            <summary>
            Gets and sets the font used in the TitleBar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Length">
            <summary>
            Gets and sets the length used to size the TitleBar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Edge">
            <summary>
            Gets and sets the edge to place the TitleBar against.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Arrows">
            <summary>
            Gets and sets a value indicating if arrows or a pin should be shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Text">
            <summary>
            Gets and sets the text display in the TitleBar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleBackColor">
            <summary>
            Gets and sets the background color is used when drawing text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleForeColor">
            <summary>
            Gets and sets the foreground color is used when drawing text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TextAlignment">
            <summary>
            Gets and sets where the text is postitioned across the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Style">
            <summary>
            Gets or sets the visual style of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PreText">
            <summary>
            Gets and sets the text to prefix the title with.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PostText">
            <summary>
            Gets and sets the text to postfix the title with.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PreSeparator">
            <summary>
            Gets and sets the separator between PreText and Text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PostSeparator">
            <summary>
            Gets and sets the separator between Text and PostText.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadLeft">
            <summary>
            Gets and sets the gap between left edge and start of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadRight">
            <summary>
            Gets and sets the gap between right edge and end of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadTop">
            <summary>
            Gets and sets the gap between top edge and start of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.PadBottom">
            <summary>
            Gets and sets the gap between bottom edge and end of drawn items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.MouseOverColor">
            <summary>
            Gets and sets colors used when drawing a gradient background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TextRenderingHint">
            <summary>
            Gets and sets the rendering hint to use when drawing text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.LineAlignment">
            <summary>
            Gets and sets where items are drawn down the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.InactiveBackColor">
            <summary>
            Gets and sets the background color used when drawing the control inactive.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.InactiveForeColor">
            <summary>
            The text color used when drawing the control inactive.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Icon">
            <summary>
            Gets and sets the icon to draw in the title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.Image">
            <summary>
            Gets and sets the image to draw in title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageList">
            <summary>
            Gets and sets the source of images associated with ImageIndex.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageIndex">
            <summary>
            Gets and sets the index into associated ImageList.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageAlignment">
            <summary>
            Gets and sets the position of image/icon.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ImageToTextGap">
            <summary>
            Gets and sets the gap between image and start of text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientDirection">
            <summary>
            Gets and sets the policy used for drawing background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientColoring">
            <summary>
            Gets and sets colors used when drawing a gradient background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientActiveColor">
            <summary>
            Gets and sets the second color available for active gradients.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.GradientInactiveColor">
            <summary>
            Gets and sets the second color available for inactive gradients.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EdgeToImageGap">
            <summary>
            Gets and sets the gap between edge and start of image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.EdgeToArrowGap">
            <summary>
            Gets and sets the gap between edge and start of arrow.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.ArrowAlignment">
            <summary>
            Gets and sets the position of arrow.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.SlidingTitleBar.TitleBar">
            <summary>
            Gets direct access to the embedded TitleBar instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TitleEdge">
            <summary>
            Specifies an edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TitleEdge.Top">
            <summary>
            Upper vertical edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TitleEdge.Left">
            <summary>
            Near horizontal edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TitleEdge.Bottom">
            <summary>
            Lower vertical edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TitleEdge.Right">
            <summary>
            Far horizontal edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ZoneSequence">
            <summary>
            Present a collection of windows as a sequence.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Zone">
            <summary>
            Base class for implementation of zones.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initializes a new instance of the Zone class.
            </summary>
            <param name="manager">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Initializes a new instance of the Zone class.
            </summary>
            <param name="manager">Reference to docking manager.</param>
            <param name="state">Initial state of the zone.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.RelayoutContents">
            <summary>
            Force the repositioning of the contents in this zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.RecordRestore(Crownwood.DotNetMagic.Docking.Window,System.Object,Crownwood.DotNetMagic.Docking.Restore)">
            <summary>
            Create a restore object for this zone.
            </summary>
            <param name="w">Window of interest.</param>
            <param name="child">Child object to attach to restore instance.</param>
            <param name="childRestore">Child restore instance to attach.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate a change in a framework property.
            </summary>
            <param name="name">Name of property changed.</param>
            <param name="value">New value of property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.OnWindowsClearing">
            <summary>
            Process the removal of all child windows.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.OnWindowInserted(System.Int32,System.Object)">
            <summary>
            Process the addition of a new window instance.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.OnWindowRemoving(System.Int32,System.Object)">
            <summary>
            Process just before window instance is removed.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Zone.OnWindowRemoved(System.Int32,System.Object)">
            <summary>
            Process just after window instance is removed.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.State">
            <summary>
            Gets and sets the zone state.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.AutoDispose">
            <summary>
            Gets and sets a value indicating the zone will auto dispose of itself.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.DockingManager">
            <summary>
            Gets a reference to the docking manager.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.Windows">
            <summary>
            Gets and sets the collection of windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.MinimumWidth">
            <summary>
            Gets the minimum width needed for the zone.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Zone.MinimumHeight">
            <summary>
            Gets the minimum height needed for the zone.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.IHotZoneSource">
            <summary>
            Interface exposed by a hot zone source.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IHotZoneSource.AddHotZones(Crownwood.DotNetMagic.Docking.Redocker,Crownwood.DotNetMagic.Docking.HotZoneCollection)">
            <summary>
            Add the collection of hot zones.
            </summary>
            <param name="redock">Reference to a redocker instance.</param>
            <param name="collection">Collection of hot zones.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow">
            <summary>
            Interface exposed by zone allowing maximizing of windows.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.IsMaximizeAvailable">
            <summary>
            Is a window allowed to become maximized.
            </summary>
            <returns>Window allows to become maximized.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.IsWindowMaximized(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Is the provided window the currently maximized one.
            </summary>
            <param name="w">Window to be checked.</param>
            <returns>true is maximized; false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.MaximizeWindow(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Make the provided window the maximized one.
            </summary>
            <param name="w">Window to become maximized.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.RestoreWindow">
            <summary>
            Remove any maximized window.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.Direction">
            <summary>
            Gets the direction of the zone.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.IZoneMaximizeWindow.RefreshMaximize">
            <summary>
            Occurs when a change in maximized state occurs.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Boolean)">
            <summary>
            Initializes a new instance of the ZoneSequence class.
            </summary>
            <param name="manager">Reference to a docking manager.</param>
            <param name="state">Initial state of the zone.</param>
            <param name="style">Visual style for drawing.</param>
            <param name="direction">Direction to arrange child windows.</param>
            <param name="zoneMinMax">Allowed to minimize and maximize windows.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.RelayoutContents">
            <summary>
            Force the repositioning of the contents in this zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.SuppressReposition">
            <summary>
            Suspend the repositioning of child windows.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.IsMaximizeAvailable">
            <summary>
            Is a window allowed to become maximized.
            </summary>
            <returns>Window allows to become maximized.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.IsWindowMaximized(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Is the provided window the currently maximized one.
            </summary>
            <param name="w">Window to be checked.</param>
            <returns>true is maximized; false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.MaximizeWindow(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Make the provided window the maximized one.
            </summary>
            <param name="w">Window to become maximized.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.RestoreWindow">
            <summary>
            Remove any maximized window.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.CanResize(Crownwood.DotNetMagic.Controls.ResizeBar)">
            <summary>
            Determines if the ResizeBar instance is allowed to resize.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.StartResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Drawing.Rectangle@)">
            <summary>
            Determine the screen rectangle the bar can size into.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="screenBoundary">Screen bounding rectangle.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.EndResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Int32)">
            <summary>
            Resize operation completed with delta change.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="delta">Delta change to size.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.RecordRestore(Crownwood.DotNetMagic.Docking.Window,System.Object,Crownwood.DotNetMagic.Docking.Restore)">
            <summary>
            Create a restore object for this zone.
            </summary>
            <param name="w">Window of interest.</param>
            <param name="child">Child object to attach to restore instance.</param>
            <param name="childRestore">Child restore instance to attach.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate a change in a framework property.
            </summary>
            <param name="name">Name of property changed.</param>
            <param name="value">New value of property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.AddHotZones(Crownwood.DotNetMagic.Docking.Redocker,Crownwood.DotNetMagic.Docking.HotZoneCollection)">
            <summary>
            Add the collection of hot zones.
            </summary>
            <param name="redock">Reference to a redocker instance.</param>
            <param name="collection">Collection of hot zones.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.ModifyWindowSpace(Crownwood.DotNetMagic.Docking.Window,System.Decimal)">
            <summary>
            Request the space allocated to a window be modified.
            </summary>
            <param name="w">Target window to update.</param>
            <param name="newSpace">New percentage space.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnDockChanged(System.EventArgs)">
            <summary>
            Raises the DockChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnWindowsClearing">
            <summary>
            Process the removal of all child windows.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnWindowInserted(System.Int32,System.Object)">
            <summary>
            Process the addition of a new window instance.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnWindowRemoving(System.Int32,System.Object)">
            <summary>
            Process just before window instance is removed.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnWindowRemoved(System.Int32,System.Object)">
            <summary>
            Process just after window instance is removed.
            </summary>
            <param name="index">Position where inserted.</param>
            <param name="value">Reference to new instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneSequence.OnRefreshMaximize(System.EventArgs)">
            <summary>
            Raises the RefreshMaximize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.ZoneSequence.RefreshMaximize">
            <summary>
            Occurs when the maximized window changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.MinimumWidth">
            <summary>
            Gets the minimum width needed for the zone.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.MinimumHeight">
            <summary>
            Gets the minimum height needed for the zone.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.Dock">
            <summary>
            Gets or sets which edge of the parent container a control is docked to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.Direction">
            <summary>
            Gets and sets the direction to arrange child windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.State">
            <summary>
            Sets the zone state.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.ResizeBarColor">
            <summary>
            Gets and sets the color of resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.ResizeBarVector">
            <summary>
            Gets and sets the size of resize bar separators.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.Style">
            <summary>
            Gets the visual style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneSequence.BackgroundColor">
            <summary>
            Gets and sets the background color.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ZoneSequence.Position">
            <summary>
            Length associated with position.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.ZoneSequence.Position.length">
            <summary>
            Associated length.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContentAreas">
            <summary>
            Manager for redocking of content instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContent">
            <summary>
            Manager for redocking of content instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContent.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContent class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContent.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContent class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContent.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContent class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContent.InternalConstruct(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.RedockerContent.Source,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,Crownwood.DotNetMagic.Docking.FloatingForm,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Point)">
            <summary>
            Perform initialization.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="source">Type of source.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="ff">Floating form source.</param>
            <param name="dm">DockingManager instance.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContent.SizeDependsOnSource">
            <summary>
            Gets the new floating size.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.Squares">
            <summary>
            Gets the cached squares requirement.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.VectorV">
            <summary>
            Gets new vertical vector.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.VectorH">
            <summary>
            Gets new vertical vector.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.SourceType">
            <summary>
            Gets the cached source type.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.Container">
            <summary>
            Gets the cached container control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.Content">
            <summary>
            Gets the cached source content.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.CallingControl">
            <summary>
            Gets the cached calling control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.DockingSource">
            <summary>
            Gets the cached source type.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.WindowContent">
            <summary>
            Gets the cached window content.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.DockingManager">
            <summary>
            Gets the cached docking manager.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.FloatingForm">
            <summary>
            Gets the cached floating form.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContent.Offset">
            <summary>
            Gets the cached offset point.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContent.Source">
            <summary>
            Specifies source of the content.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.RedockerContent.Source.ContentInsideWindow">
            <summary>
            Specifies the content is currently inside a window.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.RedockerContent.Source.WindowContent">
            <summary>
            Specifies a window content.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.RedockerContent.Source.FloatingForm">
            <summary>
            Specifies the content is currently inside a floating form.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentAreas class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentAreas class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentAreas class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.InternalConstruct(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.RedockerContent.Source,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,Crownwood.DotNetMagic.Docking.FloatingForm,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Point)">
            <summary>
            Perform initialization.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="source">Type of source.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="ff">Floating form source.</param>
            <param name="dm">DockingManager instance.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.EnterTrackingMode">
            <summary>
            Enter hot tracking mode.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.ExitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Exit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.QuitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Quit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a change in mouse position.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentAreas.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a mouse button up call.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns>true if redocking action occured;false otherwise.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContentAreas.DragFeedback">
            <summary>
            Gets and sets the feedback class.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.StringCollection">
            <summary>
            Provides a collection container for string instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.Add(System.String)">
            <summary>
            Adds the specified string object to the collection.
            </summary>
            <param name="value">The string object to add to the collection.</param>
            <returns>The string object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.AddRange(System.String[])">
            <summary>
            Adds an array of string objects to the collection.
            </summary>
            <param name="values">An array of string objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.Remove(System.String)">
            <summary>
            Removes a string from the collection.
            </summary>
            <param name="value">A string to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the string.</param>
            <param name="value">The string object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.Contains(System.String)">
            <summary>
            Determines whether a string is in the collection.
            </summary>
            <param name="value">The string to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.Contains(Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Determines whether any of a group of strings is in the collection.
            </summary>
            <param name="values">The group of strings to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the first occurrence of the given string.
            </summary>
            <param name="value">The string to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.SaveToXml(System.String,System.Xml.XmlTextWriter)">
            <summary>
            Save contents of collection into XML stream.
            </summary>
            <param name="name">Name of XML element to use when saving.</param>
            <param name="xmlOut">XML stream to use when saving.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.StringCollection.LoadFromXml(System.String,System.Xml.XmlTextReader)">
            <summary>
            Load contents of collection from XML stream.
            </summary>
            <param name="name">Name of XML element to use when loading.</param>
            <param name="xmlIn">XML stream to use when loading.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.StringCollection.Item(System.Int32)">
            <summary>
            Gets the string at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.WizardPageCollection">
            <summary>
            Provides a collection container for WizardPage instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.Add(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Adds new WizardPage constructed from TabPage details.
            </summary>
            <param name="value">TabPage used as source of new details.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.Add(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Adds the specified WizardPage object to the collection.
            </summary>
            <param name="value">The WizardPage object to add to the collection.</param>
            <returns>The WizardPage object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.AddRange(Crownwood.DotNetMagic.Controls.WizardPage[])">
            <summary>
            Adds an array of WizardPage objects to the collection.
            </summary>
            <param name="values">An array of WizardPage objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.Remove(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Removes a WizardPage from the collection.
            </summary>
            <param name="value">A WizardPage to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Inserts a WizardPage instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the WizardPage.</param>
            <param name="value">The WizardPage object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.Contains(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Determines whether a WizardPage is in the collection.
            </summary>
            <param name="value">The WizardPage to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPageCollection.IndexOf(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Returns the index of the first occurrence of the given WizardPage.
            </summary>
            <param name="value">The WizardPage to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPageCollection.Item(System.Int32)">
            <summary>
            Gets the WizardPage at the specified index.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPageCollection.Item(System.String)">
            <summary>
            Gets the WizardPage with the specified title.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Forms.WizardDialog">
            <summary>
            Summary description for WizardDialog.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Forms.DotNetMagicForm">
            <summary>
            Draw the window chrome and toolstrips using the specified VisualStyle
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Forms.WindowChrome">
            <summary>
            Base class that allows a form to have custom chrome applied. You should derive 
            a class from this that performs the specific chrome drawing that is required.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.#ctor">
            <summary>
            Initialize a new instance of the WindowChrome class. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.ForceNonClientRecalc">
            <summary>
            Request that the non client border be recalculated.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.SendSysCommand(Crownwood.DotNetMagic.Win32.SysCommand)">
            <summary>
            Send the provided system command to the window for processing.
            </summary>
            <param name="sysCommand">System command.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.ScreenToWindow(System.Drawing.Point)">
            <summary>
            Convert a screen location to a 
            </summary>
            <param name="screenPt">Screen point.</param>
            <returns>Point in window coordinates.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.InvalidateNonClient">
            <summary>
            Request the non-client area be repainted.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.RealWindowRectangle">
            <summary>
            Gets rectangle that is the real window rectangle based on Win32 API call.
            </summary>
            <returns>Window rectangle.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.RealWindowBorders">
            <summary>
            Gets the size of the borders requested by the real window.
            </summary>
            <returns>Border sizing.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnActivated(System.EventArgs)">
            <summary>
            Raises the Activated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnDeactivate(System.EventArgs)">
            <summary>
            Raises the Deactivate event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCCALCSIZE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCCALCSIZE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCPAINT(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCPAINT message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCHITTEST(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCHITTEST message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCACTIVATE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCACTIVATE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnPaintNonClient(System.Windows.Forms.Message@)">
            <summary>
            Process a windows message that requires the non client area be repainted.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCMOUSEMOVE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSEMOVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_MOUSEMOVE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_MOUSEMOVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCLBUTTONDOWN(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONDOWN message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_LBUTTONUP(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_LBUTTONUP message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnWM_NCMOUSELEAVE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSELEAVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.OnNonClientPaint(System.IntPtr)">
            <summary>
            Perform chrome window painting in the non-client areas.
            </summary>
            <param name="hWnd">Window handle of window being painted.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeStart">
            <summary>
            Perform setup for custom chrome.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeEnd">
            <summary>
            Perform cleanup when custom chrome ending.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeHitTest(System.Drawing.Point)">
            <summary>
            Perform hit testing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromePaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform painting of the window chrome.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="bounds">Bounds enclosing the window chrome.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeNonClientMouseMove(System.Drawing.Point)">
            <summary>
            Perform non-client mouse movement processing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeClientMouseMove(System.Drawing.Point)">
            <summary>
            Perform client mouse movement processing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <returns>True if the message is handled; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeLeftMouseDown(System.Drawing.Point)">
            <summary>
            Process the left mouse down event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeLeftMouseUp(System.Drawing.Point)">
            <summary>
            Process the left mouse up event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WindowChrome.WindowChromeMouseLeave">
            <summary>
            Perform mouse leave processing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WindowChrome.ApplyCustomChrome">
            <summary>
            Gets and sets a value indicating if custom chrome should be applied.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WindowChrome.WindowActive">
            <summary>
            Gets a value indicating if the window is currently active.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.#ctor">
            <summary>
            Initialize a new instance of the Office2007Form class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeStart">
            <summary>
            Perform setup for custom chrome.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeEnd">
            <summary>
            Perform cleanup when custom chrome ending.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeHitTest(System.Drawing.Point)">
            <summary>
            Perform hit testing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromePaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform painting of the window chrome.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="bounds">Bounds enclosing the window chrome.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeNonClientMouseMove(System.Drawing.Point)">
            <summary>
            Perform non-client mouse movement processing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeClientMouseMove(System.Drawing.Point)">
            <summary>
            Perform non-client mouse movement processing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <returns>True if the message is handled; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeLeftMouseDown(System.Drawing.Point)">
            <summary>
            Process the left mouse down event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeLeftMouseUp(System.Drawing.Point)">
            <summary>
            Process the left mouse up event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.WindowChromeMouseLeave">
            <summary>
            Perform mouse leave processing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 renderer draw text using ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player renderer draw text using ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ApplyStyleToChrome">
            <summary>
            Gets and sets a value indicating if the Style should be used to determine window chrome.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ApplyStyleToToolStrips">
            <summary>
            Gets and sets a value indicating if the Style should be used to render ToolStrips.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.Style">
            <summary>
            Gets and sets the visual style to use for the Form.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.#ctor(System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[])">
            <summary>
            Initialize a new instance of the ChromeButton class.
            </summary>
            <param name="buttonA">Theme specific active images.</param>
            <param name="buttonAH">Theme specific active and hot tracking images.</param>
            <param name="buttonAP">Theme specific active and pressed images.</param>
            <param name="buttonI">Theme specific button content inactive images.</param>
            <param name="buttonTracking">Theme specific hot tracking background images.</param>
            <param name="buttonPressed">Theme specific pressed background images.</param>
            <param name="buttonTrackingS">Theme specific small hot tracking background images.</param>
            <param name="buttonPressedS">Theme specific small pressed background images.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.CalculateVisibleState(System.Windows.Forms.Form)">
            <summary>
            Update the visible state of the button based on the new mouse position.
            </summary>
            <param name="parent">Parent form instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.CalculateMouseMove(System.Drawing.Point)">
            <summary>
            Update the mouse state of the button based on the parent form state.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <remarks>True if a change of state needs a repaint; otherwise false.</remarks>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.CalculateMouseLeave">
            <summary>
            Update the mouse state of the button based on the mouse leaving the form.
            </summary>
            <remarks>True if a change of state needs a repaint; otherwise false.</remarks>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.Draw(System.Drawing.Graphics,System.Windows.Forms.FormWindowState,System.Boolean,System.Int32)">
            <summary>
            Draw the button in its current state.
            </summary>
            <param name="g">Graphics reference.</param>
            <param name="state">State of the owning form.</param>
            <param name="active">Is the owning form active.</param>
            <param name="themeIndex">Theme index.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.SysCommand(System.Windows.Forms.Form)">
            <summary>
            Gets the system command to execute when button is pressed.
            </summary>
            <param name="parent">Parent form instance.</param>
            <returns>SystemCommand value.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.ButtonContent(System.Windows.Forms.FormWindowState,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Gets the content image based on the current state.
            </summary>
            <param name="state">State of the owning form.</param>
            <param name="active">Active state of the button.</param>
            <param name="tracking">Is button being hot tracked.</param>
            <param name="pressed">Is button being pressed.</param>
            <param name="themeIndex">Theme index.</param>
            <returns>Image to use when drawing.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.Bounds">
            <summary>
            Gets and sets the button drawing rectangle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.Visible">
            <summary>
            Gets and sets the button drawing rectangle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.Pressed">
            <summary>
            Gets and sets the pressed state of the button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButton.HitTest">
            <summary>
            Returns the hit test result for this button.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonClose.#ctor(System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[])">
            <summary>
            Initialize a new instance of the ChromeButtonClose class.
            </summary>
            <param name="buttonA">Theme specific active images.</param>
            <param name="buttonAH">Theme specific active and hot tracking images.</param>
            <param name="buttonAP">Theme specific active and pressed images.</param>
            <param name="buttonI">Theme specific button content inactive images.</param>
            <param name="buttonTracking">Theme specific hot tracking background images.</param>
            <param name="buttonPressed">Theme specific pressed background images.</param>
            <param name="buttonTrackingS">Theme specific small hot tracking background images.</param>
            <param name="buttonPressedS">Theme specific small pressed background images.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonClose.CalculateVisibleState(System.Windows.Forms.Form)">
            <summary>
            Update the visible state of the button based on the parent form state.
            </summary>
            <param name="parent">Parent form instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonClose.SysCommand(System.Windows.Forms.Form)">
            <summary>
            Gets the system command to execute when button is pressed.
            </summary>
            <param name="parent">Parent form instance.</param>
            <returns>SystemCommand value.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonClose.HitTest">
            <summary>
            Returns the hit test result for this button.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMin.#ctor(System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[])">
            <summary>
            Initialize a new instance of the ChromeButtonMin class.
            </summary>
            <param name="buttonMinA">Theme specific minimize active images.</param>
            <param name="buttonRestoreA">Theme specific restore active images.</param>
            <param name="buttonMinAH">Theme specific minimize active and hot tracking images.</param>
            <param name="buttonRestoreAH">Theme specific restore active and hot tracking images.</param>
            <param name="buttonMinAP">Theme specific minimize active and pressed images.</param>
            <param name="buttonRestoreAP">Theme specific restore active and pressed images.</param>
            <param name="buttonMinI">Theme specific minimize button content inactive images.</param>
            <param name="buttonRestoreI">Theme specific restore button content inactive images.</param>
            <param name="buttonTracking">Theme specific hot tracking background images.</param>
            <param name="buttonPressed">Theme specific pressed background images.</param>
            <param name="buttonTrackingS">Theme specific small hot tracking background images.</param>
            <param name="buttonPressedS">Theme specific small pressed background images.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMin.CalculateVisibleState(System.Windows.Forms.Form)">
            <summary>
            Update the visible state of the button based on the parent form state.
            </summary>
            <param name="parent">Parent form instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMin.SysCommand(System.Windows.Forms.Form)">
            <summary>
            Gets the system command to execute when button is pressed.
            </summary>
            <param name="parent">Parent form instance.</param>
            <returns>SystemCommand value.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMin.ButtonContent(System.Windows.Forms.FormWindowState,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Gets the content image based on the current state.
            </summary>
            <param name="state">State of the owning form.</param>
            <param name="active">Active state of the button.</param>
            <param name="tracking">Is button being hot tracked.</param>
            <param name="pressed">Is button being pressed.</param>
            <param name="themeIndex">Theme index.</param>
            <returns>Image to use when drawing.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMin.HitTest">
            <summary>
            Returns the hit test result for this button.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMax.#ctor(System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[],System.Drawing.Image[])">
            <summary>
            Initialize a new instance of the ChromeButtonMax class.
            </summary>
            <param name="buttonMaxA">Theme specific maximize active images.</param>
            <param name="buttonRestoreA">Theme specific restore active images.</param>
            <param name="buttonMaxAH">Theme specific maximize active and hot tracking images.</param>
            <param name="buttonRestoreAH">Theme specific restore active and hot tracking images.</param>
            <param name="buttonMaxAP">Theme specific maximize active and pressed images.</param>
            <param name="buttonRestoreAP">Theme specific restore active and pressed images.</param>
            <param name="buttonMaxI">Theme specific maximize button content inactive images.</param>
            <param name="buttonRestoreI">Theme specific restore button content inactive images.</param>
            <param name="buttonTracking">Theme specific hot tracking background images.</param>
            <param name="buttonPressed">Theme specific pressed background images.</param>
            <param name="buttonTrackingS">Theme specific small hot tracking background images.</param>
            <param name="buttonPressedS">Theme specific small pressed background images.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMax.CalculateVisibleState(System.Windows.Forms.Form)">
            <summary>
            Update the visible state of the button based on the parent form state.
            </summary>
            <param name="parent">Parent form instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMax.SysCommand(System.Windows.Forms.Form)">
            <summary>
            Gets the system command to execute when button is pressed.
            </summary>
            <param name="parent">Parent form instance.</param>
            <returns>SystemCommand value.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMax.ButtonContent(System.Windows.Forms.FormWindowState,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Gets the content image based on the current state.
            </summary>
            <param name="state">State of the owning form.</param>
            <param name="active">Active state of the button.</param>
            <param name="tracking">Is button being hot tracked.</param>
            <param name="pressed">Is button being pressed.</param>
            <param name="themeIndex">Theme index.</param>
            <returns>Image to use when drawing.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.DotNetMagicForm.ChromeButtonMax.HitTest">
            <summary>
            Returns the hit test result for this button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.WizardControlField">
            <summary>
            Exposed control for direct access in designer
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.#ctor">
            <summary>
            Initializes a new instance of the WizardDialog class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.ResetTitleMode">
            <summary>
            Resets the TitleMode property to its default value. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.ApplyTitleMode">
            <summary>
            Generate the title text.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnPagesCleared">
            <summary>
            Occurs when wizard pages are cleared.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnPagesChanged(System.Int32,System.Object)">
            <summary>
            Occurs when a wizard page is added or removed.
            </summary>
            <param name="index">Index into wizard page collection.</param>
            <param name="value">WizardPage instance reference.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnCloseClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the close button is clicked.
            </summary>
            <param name="sender">CloseButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnFinishClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the finish button is clicked.
            </summary>
            <param name="sender">FinishButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnCancelClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the cancel button is clicked.
            </summary>
            <param name="sender">CancelButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnNextClick(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the next button is clicked.
            </summary>
            <param name="sender">NextButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnBackClick(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the back button is clicked.
            </summary>
            <param name="sender">BackButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnUpdateClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the update button is clicked.
            </summary>
            <param name="sender">UpdateButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnHelpClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the help button is clicked.
            </summary>
            <param name="sender">HelpButton reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnSelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when a change in selected wizard page happens.
            </summary>
            <param name="sender">WizardPageCollection reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnWizardPageEnter(Crownwood.DotNetMagic.Controls.WizardPage,Crownwood.DotNetMagic.Controls.WizardControl)">
            <summary>
            Occurs when a wizard page is entered.
            </summary>
            <param name="wp">WizardPage reference.</param>
            <param name="wc">WizardControl reference.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnWizardPageLeave(Crownwood.DotNetMagic.Controls.WizardPage,Crownwood.DotNetMagic.Controls.WizardControl)">
            <summary>
            Occurs when leaving a wizard page.
            </summary>
            <param name="wp">WizardPage reference.</param>
            <param name="wc">WizardControl reference.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Forms.WizardDialog.OnWizardCaptionTitleChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when a wizard page caption title has changed.
            </summary>
            <param name="sender">WizardPage reference.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WizardDialog.WizardControlProperty">
            <summary>
            Gets direct access the wizard control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WizardDialog.Style">
            <summary>
            Gets and sets the visual style to use for the Form.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WizardDialog.Text">
            <summary>
            Gets and sets the text using in the dialog title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Forms.WizardDialog.TitleMode">
            <summary>
            Gets and set how hte title is automatically generated.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes">
            <summary>
            Specifies how the title is generated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes.None">
            <summary>
            Specifies the Form.Text be used as the title.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes.WizardPageTitle">
            <summary>
            Specifies the wizard page title is appended.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes.WizardPageSubTitle">
            <summary>
            Specifies the wizard page sub-title is appended.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes.WizardPageCaptionTitle">
            <summary>
            Specifies the wizard page caption title is appended.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Forms.WizardDialog.TitleModes.Steps">
            <summary>
            Specifies a step text be generated and appended
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TitleButtonCollection">
            <summary>
            Provides a collection container for TitleButton instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.Add(Crownwood.DotNetMagic.Controls.TitleButton)">
            <summary>
            Adds the specified TitleButton object to the collection.
            </summary>
            <param name="value">The TitleButton object to add to the collection.</param>
            <returns>The TitleButton object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.AddRange(Crownwood.DotNetMagic.Controls.TitleButton[])">
            <summary>
            Adds an array of TitleButton objects to the collection.
            </summary>
            <param name="values">An array of TitleButton objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.Remove(Crownwood.DotNetMagic.Controls.TitleButton)">
            <summary>
            Removes a TitleButton from the collection.
            </summary>
            <param name="value">A TitleButton to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.TitleButton)">
            <summary>
            Inserts a TitleButton instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the TitleButton.</param>
            <param name="value">The TitleButton object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.Contains(Crownwood.DotNetMagic.Controls.TitleButton)">
            <summary>
            Determines whether a TitleButton is in the collection.
            </summary>
            <param name="value">The TitleButton to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TitleButtonCollection.IndexOf(Crownwood.DotNetMagic.Controls.TitleButton)">
            <summary>
            Returns the index of the first occurrence of the given TitleButton.
            </summary>
            <param name="value">The TitleButton to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TitleButtonCollection.Item(System.Int32)">
            <summary>
            Gets the TitleButton at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabControlDesigner">
            <summary>
            Designer used in conjunction with TabControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControlDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="msg">The Windows Message to process.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControlDesigner.AssociatedComponents">
            <summary>
            Return collection of TabPages which are child components.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControlDesigner.SelectionService">
            <summary>
            Return a selection service reference.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControlDesigner.DrawGrid">
            <summary>
            Gets a value indicating if the grid should be drawn.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Target">
            <summary>
            Represents a target for dragging and dropping.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.Target.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.Target.TargetActions)">
            <summary>
            Initializes a new instance of the Target class.
            </summary>
            <param name="hotRect">Rectangle that represents active area of target.</param>
            <param name="drawRect">Rectangle that should be drawn when active.</param>
            <param name="leaf">Source leaf associated with target.</param>
            <param name="action">Action to be performed if target selected.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Target.HotRect">
            <summary>
            Gets the HotRect property.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Target.DrawRect">
            <summary>
            Gets the DrawRect property.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Target.Leaf">
            <summary>
            Gets the Leaf property.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.Target.Action">
            <summary>
            Gets the Action property.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Target.TargetActions">
            <summary>
            Specifies the action required.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.Transfer">
            <summary>
            Specifies page should be moved between leafs.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.GroupLeft">
            <summary>
            Specifies new group be create on left side.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.GroupRight">
            <summary>
            Specifies new group be create on right side of a group.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.GroupTop">
            <summary>
            Specifies new group be create on top side of a group.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.GroupBottom">
            <summary>
            Specifies new group be create on bottom side of a group.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.ControlLeft">
            <summary>
            Specifies new group be create on left side of control of a group.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.ControlRight">
            <summary>
            Specifies new group be create on right side of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.ControlTop">
            <summary>
            Specifies new group be create on top side of control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Target.TargetActions.ControlBottom">
            <summary>
            Specifies new group be create on bottom side of control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetCollection">
            <summary>
            Provides a collection container for Target instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.Add(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Adds the specified Target object to the collection.
            </summary>
            <param name="value">The Target object to add to the collection.</param>
            <returns>The Target object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.AddRange(Crownwood.DotNetMagic.Controls.Target[])">
            <summary>
            Adds an array of Target objects to the collection.
            </summary>
            <param name="values">An array of Target objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.Remove(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Removes a Target from the collection.
            </summary>
            <param name="value">A Target to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Inserts a Target instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the Target.</param>
            <param name="value">The Target object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.Contains(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Determines whether a Target is in the collection.
            </summary>
            <param name="value">The Target to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.Contains(System.Drawing.Point)">
            <summary>
            Determines the first Target instance that matches the given Point.
            </summary>
            <param name="pt">Point to test against each Target instance.</param>
            <returns>Matching Target if found; otherwise null</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetCollection.IndexOf(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Returns the index of the first occurrence of the given Target.
            </summary>
            <param name="value">The Target to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetCollection.Item(System.Int32)">
            <summary>
            Gets the Target at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StatusPanelCollection">
            <summary>
            Provides a collection container for StatusPanel instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.#ctor(Crownwood.DotNetMagic.Controls.StatusBarControl)">
            <summary>
            Initialize a new instance of the StatusPanelCollection class.
            </summary>
            <param name="parent">Reference to parent control.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.Add(Crownwood.DotNetMagic.Controls.StatusPanel)">
            <summary>
            Adds the specified StatusPanel object to the collection.
            </summary>
            <param name="value">The StatusPanel object to add to the collection.</param>
            <returns>The StatusPanel object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.AddRange(Crownwood.DotNetMagic.Controls.StatusPanel[])">
            <summary>
            Adds an array of StatusPanel objects to the collection.
            </summary>
            <param name="values">An array of StatusPanel objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.Remove(Crownwood.DotNetMagic.Controls.StatusPanel)">
            <summary>
            Removes a StatusPanel from the collection.
            </summary>
            <param name="value">A StatusPanel to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.StatusPanel)">
            <summary>
            Inserts a StatusPanel instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the StatusPanel.</param>
            <param name="value">The StatusPanel object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.Contains(Crownwood.DotNetMagic.Controls.StatusPanel)">
            <summary>
            Determines whether a StatusPanel is in the collection.
            </summary>
            <param name="value">The StatusPanel to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelCollection.IndexOf(Crownwood.DotNetMagic.Controls.StatusPanel)">
            <summary>
            Returns the index of the first occurrence of the given StatusPanel.
            </summary>
            <param name="value">The StatusPanel to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanelCollection.Item(System.Int32)">
            <summary>
            Gets the TabPage at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ThemeHelper">
            <summary>
            Helper class for applying theme to a control instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initialize a new instance of the ThemeHelper class.
            </summary>
            <param name="control">Control instance associated with theme.</param>
            <param name="classList">Class names of the theme to use.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.Dispose">
            <summary>
            Releases all resources used by class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.DrawThemeBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draw a themed background element.
            </summary>
            <param name="g">Graphics object reference.</param>
            <param name="draw">Rectangle for drawing.</param>
            <param name="part">Theme part.</param>
            <param name="state">Theme state of part.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.DrawThemeBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draw a themed background element.
            </summary>
            <param name="g">Graphics object reference.</param>
            <param name="draw">Rectangle for drawing.</param>
            <param name="exclude">Rectangle to exclude from drawing.</param>
            <param name="part">Theme part.</param>
            <param name="state">Theme state of part.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.GetThemePartSize(System.Drawing.Graphics,System.Int32,System.Int32,Crownwood.DotNetMagic.Win32.THEMESIZE)">
            <summary>
            Get the size of a themed part in a givenstate.
            </summary>
            <param name="g">Graphics object reference.</param>
            <param name="part">Theme part.</param>
            <param name="state">Theme state of part.</param>
            <param name="themeSize">How to calculate the size.</param>
            <returns>new Size if themed; otherwise Size.Empty</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.GetCurrentThemeName(System.String@,System.String@,System.String@)">
            <summary>
            Get the theme names.
            </summary>
            <param name="theme">Name of the theme.</param>
            <param name="color">Name of the colors.</param>
            <param name="size">Name of the size.</param>
            <returns>true if theme information was recovered; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.OnThemeOpened">
            <summary>
            Raises the ThemeOpened event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeHelper.OnThemeClosed">
            <summary>
            Raises the ThemeClosed event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.ThemeHelper.ThemeOpened">
            <summary>
            Occurs when theme has been opened.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Common.ThemeHelper.ThemeClosed">
            <summary>
            Occurs when theme has been closed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ThemeHelper.IsControlThemed">
            <summary>
            Gets a value indicating if the control is currently themed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ThemeHelper.IsAppThemed">
            <summary>
            Gets a value indicating if the application is themed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ThemeHelper.IsThemeActive">
            <summary>
            Gets a value indicating if the theme is active.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingFactory">
            <summary>
            Creates the appropriate control or form for the docking system.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateFloatingForm(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.Zone,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the FloatingForm class.
            </summary>
            <param name="dockingManager">Parent docking manager instance.</param>
            <param name="zone">Zone to be hosted.</param>
            <param name="contextHandler">Delegate for handling context menus.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateZoneSequence(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Boolean)">
            <summary>
            Initializes a new instance of the ZoneSequence class.
            </summary>
            <param name="manager">Reference to a docking manager.</param>
            <param name="state">Initial state of the zone.</param>
            <param name="style">Visual style for drawing.</param>
            <param name="direction">Direction to arrange child windows.</param>
            <param name="zoneMinMax">Allowed to minimize and maximize windows.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowContentTabbed(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initializes a new instance of the WindowContent class.
            </summary>
            <param name="manager">Parent docking manager instance.</param>
            <param name="vs">Visual style for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowDetailCaptionPlain(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionPlain class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content instance.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowDetailCaptionIDE2005(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionIDE2005 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content instance.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowDetailCaptionOffice2003(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionOffice2003 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content instance.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowDetailCaptionOffice2007(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionOffice2007 class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content instance.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateWindowDetailCaptionMediaPlayer(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.WindowContent,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the WindowDetailCaptionMediaPlayer class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="wc">Owning window content instance.</param>
            <param name="closeHandler">Delegate for notifying close events.</param>
            <param name="restoreHandler">Delegate for notifying restore events.</param>
            <param name="invertAutoHideHandler">Delegate for auto hide invert events.</param>
            <param name="contextHandler">Delegate for notifying context menu events.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateOffice2007CaptionButton(Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2007)">
            <summary>
            Initialize a new instance of the Office2007Button class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateMediaPlayerCaptionButton(Crownwood.DotNetMagic.Docking.WindowDetailCaptionMediaPlayer)">
            <summary>
            Initialize a new instance of the MediaPlayerButton class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateOffice2003CaptionButton(Crownwood.DotNetMagic.Docking.WindowDetailCaptionOffice2003)">
            <summary>
            Initialize a new instance of the Office2003Button class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateIDE2005CaptionButton(Crownwood.DotNetMagic.Docking.WindowDetailCaptionIDE2005)">
            <summary>
            Initialize a new instance of the IDE2005Button class.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateAutoHidePanel(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.DockStyle)">
            <summary>
            Initializes a new instance of the AutoHidePanel class.
            </summary>
            <param name="manager">Parent docking manager.</param>
            <param name="dockEdge">Edge we are docked against.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateAutoHostPanel(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.AutoHidePanel,Crownwood.DotNetMagic.Common.Edge)">
            <summary>
            Initializes a new instance of the AutoHostPanel class.
            </summary>
            <param name="manager">Parent docking manager.</param>
            <param name="autoHidePanel">Parent auto hide panel.</param>
            <param name="borderEdge">Edge we are docked against.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingFactory.CreateTabStub(Crownwood.DotNetMagic.Common.VisualStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the TabStub class.
            </summary>
            <param name="style">Visual style for drawing.</param>
            <param name="stubsShowAll">Initial stubs value.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabControl">
            <summary>
            Manage a collection of tab pages.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.#ctor">
            <summary>
            Initializes a new instance of the TabControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.SuspendLayout">
            <summary>
            Temporarily suspends the layout logic for the control.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResumeLayout">
            <summary>
            Resumes normal layout logic.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResumeLayout(System.Boolean)">
            <summary>
            Resumes normal layout logic.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeFont">
            <summary>
            Decide if the font needs to be persisted.
            </summary>
            <returns>Should font be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetAllowDrop">
            <summary>
            Resets the AllowDrop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetHotkeyPrefix">
            <summary>
            Resets the HotkeyPrefix property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetImageSize">
            <summary>
            Resets the ImageSize property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetAllowDragReorder">
            <summary>
            Resets the AllowDragReorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeForeColor">
            <summary>
            Decide if the forecolor needs to be persisted.
            </summary>
            <returns>Should forecolor be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeBackColor">
            <summary>
            Decide if the backcolor needs to be persisted.
            </summary>
            <returns>Should backcolor be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeButtonActiveColor">
            <summary>
            Decide if the button active color needs to be persisted.
            </summary>
            <returns>Should button active color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetButtonActiveColor">
            <summary>
            Resets the ButtonActiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeButtonInactiveColor">
            <summary>
            Decide if the button inactive color needs to be persisted.
            </summary>
            <returns>Should button inactive color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetButtonInactiveColor">
            <summary>
            Resets the ButtonInactiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetAppearance">
            <summary>
            Resets the Appearance property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetOfficeStyle">
            <summary>
            Resets the OfficeStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMediaPlayerStyle">
            <summary>
            Resets the MediaPlayerStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDE2005Style">
            <summary>
            Resets the IDE2005Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetApply2007ClearType">
            <summary>
            Resets the Apply2007ClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetApplyMediaPlayerClearType">
            <summary>
            Resets the ApplyMediaPlayerClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetDragOverSelect">
            <summary>
            Resets the DragOverSelect property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetDragOutside">
            <summary>
            Resets the DragOutside property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetToolTips">
            <summary>
            Resets the ToolTips property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetTextTips">
            <summary>
            Resets the TextTips property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetAllowCtrlTab">
            <summary>
            Resets the AllowCtrlTab property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetHotTrack">
            <summary>
            Resets the HotTrack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeHotTextColor">
            <summary>
            Decide if the hot text color needs to be persisted.
            </summary>
            <returns>Should hot text color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetHotTextColor">
            <summary>
            Resets the HotTextColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeTextColor">
            <summary>
            Decide if the text color needs to be persisted.
            </summary>
            <returns>Should text color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetTextColor">
            <summary>
            Resets the TextColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeTextInactiveColor">
            <summary>
            Decide if the text inactive color needs to be persisted.
            </summary>
            <returns>Should text inactive color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetTextInactiveColor">
            <summary>
            Resets the TextInactiveColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeTabsAreaRect">
            <summary>
            Decide if the bounding rectangle of the tab headers needs to be persisted.
            </summary>
            <returns>Should bounding rectangle be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializePageAreaRect">
            <summary>
            Decide if the bounding rectangle of the page area needs to be persisted.
            </summary>
            <returns>Should bounding rectangle be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeImageList">
            <summary>
            Decide if the image list needs to be persisted.
            </summary>
            <returns>Should the image list be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetImageList">
            <summary>
            Resets the ImageList property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializePositionTop">
            <summary>
            Decide if the tab headers position needs to be persisted.
            </summary>
            <returns>Should the tab headers position be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetPositionTop">
            <summary>
            Resets the PositionTop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeShowClose">
            <summary>
            Decide if displaying the close button needs to be persisted.
            </summary>
            <returns>Should displaying the close button be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetShowClose">
            <summary>
            Resets the ShowClose property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeShowArrows">
            <summary>
            Decide if displaying the arrow buttons needs to be persisted.
            </summary>
            <returns>Should displaying the arrow buttons be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetShowArrows">
            <summary>
            Resets the ShowArrows property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetShowDropSelect">
            <summary>
            Resets the ShowDropSelect property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeShrinkPagesToFit">
            <summary>
            Decide if shrinking tab headers needs to be persisted.
            </summary>
            <returns>Should shrinking tab headers be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetShrinkPagesToFit">
            <summary>
            Resets the ShrinkPagesToFit property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetOfficeDockSides">
            <summary>
            Resets the OfficeDockSides property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMediaPlayerDockSides">
            <summary>
            Resets the MediaPlayerDockSides property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeBoldSelectedPage">
            <summary>
            Decide if drawing the selected page as bold needs to be persisted.
            </summary>
            <returns>Should rawing the selected page as bold be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetBoldSelectedPage">
            <summary>
            Resets the BoldSelectedPage property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMultilineFullWidth">
            <summary>
            Resets the MultilineFullWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMultiline">
            <summary>
            Resets the Multiline property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetControlLeftOffset">
            <summary>
            Resets the ControlLeftOffset property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetControlTopOffset">
            <summary>
            Resets the ControlTopOffset property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetControlRightOffset">
            <summary>
            Resets the ControlRightOffset property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetControlBottomOffset">
            <summary>
            Resets the ControlBottomOffset property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetOfficeExtraTabInset">
            <summary>
            Resets the OfficeExtraTabInset property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetInsetPlain">
            <summary>
            Resets the InsetPlain property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetInsetBorderPagesOnly">
            <summary>
            Resets the InsetBorderPagesOnly property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetOfficePixelBorder">
            <summary>
            Resets the OfficePixelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMediaPlayerPixelBorder">
            <summary>
            Resets the MediaPlayerPixelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetOfficeHeaderBorder">
            <summary>
            Resets the OfficeHeaderBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMediaPlayerHeaderBorder">
            <summary>
            Resets the MediaPlayerHeaderBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDEPixelBorder">
            <summary>
            Resets the IDEPixelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDEPixelArea">
            <summary>
            Resets the IDEPixelArea property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDE2005PixelBorder">
            <summary>
            Resets the IDE2005PixelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDE2005HeaderBorder">
            <summary>
            Resets the IDE2005HeaderBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetIDE2005TabJoined">
            <summary>
            Resets the IDE2005TabJoined property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetSelectedTextOnly">
            <summary>
            Resets the SelectedTextOnly property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMouseLeaveTimeout">
            <summary>
            Resets the MouseLeaveTimeout property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ShouldSerializeHideTabsMode">
            <summary>
            Determine if the hide tabs mode needs to be persisted.
            </summary>
            <returns>Should HideTabsMode be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetHideTabsMode">
            <summary>
            Resets the HideTabsMode property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetWithoutMouseVector">
            <summary>
            Resets the WithoutMouseVector property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetHoverSelect">
            <summary>
            Resets the HoverSelect property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetMaximumHeaderWidth">
            <summary>
            Resets the MaximumHeaderWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ResetRecordFocus">
            <summary>
            Resets the RecordFocus property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.TabPageFromControl(System.Windows.Forms.Control)">
            <summary>
            Get the TabPage that uses the given control for display.
            </summary>
            <param name="c">Control to search for.</param>
            <returns>TabPage that uses this control for display.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.TabPageFromPoint(System.Drawing.Point)">
            <summary>
            Find the TabPage that is under the client mouse position in the tab header area.
            </summary>
            <param name="mousePos">Client point to test.</param>
            <returns>TabPage reference if match found; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.TabPageFromDraggingPoint(System.Drawing.Point)">
            <summary>
            Find the TabPage that is under the client mouse position in the tab header area.
            </summary>
            <param name="mousePos">Client point to test.</param>
            <returns>TabPage reference if match found; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.MakePageVisible(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Bring the TabPage into view in the tab headers.
            </summary>
            <param name="page">TabPage reference to make visible.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.MakePageVisible(System.Int32)">
            <summary>
            Bring the indexed TabPage into view in the tab headers.
            </summary>
            <param name="index">Index into TabPages collection of page to make visible.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.WantDoubleClick(System.IntPtr,System.Drawing.Point)">
            <summary>
            Used by the TabControlDesigner only.
            </summary>
            <param name="hWnd">Source window handle.</param>
            <param name="mousePos">Client based mouse position.</param>
            <returns>true if double click wanted; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ExternalMouseTest(System.IntPtr,System.Drawing.Point)">
            <summary>
            Used by the TabControlDesigner only.
            </summary>
            <param name="hWnd">Source window handle.</param>
            <param name="mousePos">Client based mouse position.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>true if the key was processed by the control; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="key">The character to process. </param>
            <returns>true if processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnCloseButton(System.Object,System.EventArgs)">
            <summary>
            Raises the ClosePressed event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnLeftArrow(System.Object,System.EventArgs)">
            <summary>
            Move the tab headers to show the previous one not showing.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnActiveArrow(System.Object,System.EventArgs)">
            <summary>
            Show context menu so use can select a page to become active
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnRightArrow(System.Object,System.EventArgs)">
            <summary>
            Move the tab headers to show the next one not showing.
            </summary>
            <param name="sender">Left button that caused the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DefineBackColor(System.Drawing.Color)">
            <summary>
            Calculate background colors from a base color.
            </summary>
            <param name="newColor">Base color for calculations.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.Recalculate">
            <summary>
            Recalculate the size and position of tab headers and tab page controls.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RecalculateMultilineTabs(System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Recalculate tab headers when using multiline display.
            </summary>
            <param name="xStartPos">Left starting position.</param>
            <param name="xEndPos">Right maximum position.</param>
            <param name="tabPosition">Rectangle for tab position.</param>
            <param name="tabButtonHeight">Height of tab buttons.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RecalculateSinglelineTabs(System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Recalculate tab headers when using single line display.
            </summary>
            <param name="xWidth">Available width of tab header area.</param>
            <param name="xStartPos">Left starting postion.</param>
            <param name="tabPosition">Rectangle for tab position.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RecalculateButtons">
            <summary>
            Recalculate the position of tab header buttons.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.GetMaximumDrawPos">
            <summary>
            Calculate the maximum position allowed for drawing tab headers.
            </summary>
            <returns>Maximum drawing offset for tab headers.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.GetTabPageSpace(System.Drawing.Graphics,Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Calculate the width of a tab header for given tab page instance.
            </summary>
            <param name="g">Graphics object needed for measuring strings.</param>
            <param name="page">TabPage to calculate width of header.</param>
            <returns>Pixel width of tab header.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawOuterBorders(System.Drawing.Graphics)">
            <summary>
            Draw the borders around the whole control.
            </summary>
            <param name="g">Reference to drawing graphics instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawInnerBorders(System.Drawing.Graphics)">
            <summary>
            Draw the borders needed around the inner elements.
            </summary>
            <param name="g">Reference to drawing graphics instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ClippingRectangle">
            <summary>
            Find the clipping rectangle needed for tab header area.
            </summary>
            <returns>Clipping rectangle.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.ClipDrawingTabs(System.Drawing.Graphics)">
            <summary>
            Set clipping region to matching clipping rectangle of tab headers area.
            </summary>
            <param name="g">Graphics object target for clipping.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawTab(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draw an individual tab header.
            </summary>
            <param name="page">TabPage to draw header for.</param>
            <param name="g">Graphics target for draw operations.</param>
            <param name="highlightText">Should text be highlighted.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawTabImage(System.Drawing.Rectangle,Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Int32,System.Int32@)">
            <summary>
            Draw the image on an individual tab header.
            </summary>
            <param name="rectTab">Bounding rectangle of tab header.</param>
            <param name="page">TabPage to draw header for.</param>
            <param name="g">Graphics target for draw operations.</param>
            <param name="xMax">Maximum width allowed for drawing.</param>
            <param name="xDraw">Actual width used in drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawTabText(System.Drawing.Rectangle,Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Draw the text on an individual tab header.
            </summary>
            <param name="rectTab">Bounding rectangle of tab header.</param>
            <param name="page">TabPage to draw header for.</param>
            <param name="g">Graphics target for draw operations.</param>
            <param name="highlightText">Should text be drawn highlighted.</param>
            <param name="xMax">Maximum width allowed for drawing.</param>
            <param name="xDraw">Actual width used in drawing image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawTabBorder(System.Drawing.Rectangle@,Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics)">
            <summary>
            Draw the border around a tab header in correct style.
            </summary>
            <param name="rectTab">Inner rectangle left after drawing border.</param>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawMultiBoxBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in multibox style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawPlainTabBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in plain style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawIDETabBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in IDE style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawIDE2005TabBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in IDE2005 style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawOfficeTabBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in Office2003/Office2007 style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DrawMediaPlayerTabBorder(Crownwood.DotNetMagic.Controls.TabPage,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around a tab header in MediaPlayer style.
            </summary>
            <param name="page">TabPage to draw border for.</param>
            <param name="g">Graphics object to use in drawing operations.</param>
            <param name="rectPage">Inner rectangle left after drawing border.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnTabsAreaRectChanged">
            <summary>
            Raises the TabsAreaRectChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnClearingPages">
            <summary>
            Processes when all TabPages are about to be removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnClearedPages">
            <summary>
            Processes when all TabPages have been removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnInsertingPage(System.Int32,System.Object)">
            <summary>
            Processes when a new TabPage is being inserted.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnInsertedPage(System.Int32,System.Object)">
            <summary>
            Processes when a new TabPage has been inserted.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnRemovingPage(System.Int32,System.Object)">
            <summary>
            Processes when an existing TabPage is being removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnRemovedPage(System.Int32,System.Object)">
            <summary>
            Processes when an existing TabPage has been removed.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.AddTabPage(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Add a new tab page as a child of the control.
            </summary>
            <param name="page">TabPage to be added.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RemoveTabPage(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Remove a tab page as a child of the control.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RemoveTabPageControl(System.Windows.Forms.Control)">
            <summary>
            Remove a tab page that contains a control.
            </summary>
            <param name="c">Control to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.RemoveTabPagePanel(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Remove a tab page that is just a panel.
            </summary>
            <param name="page">TabPage that is a panel.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageEnter(System.Object,System.EventArgs)">
            <summary>
            Raise the PageGotFocus event.
            </summary>
            <param name="sender">Originator of event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageLeave(System.Object,System.EventArgs)">
            <summary>
            Raise the PageLostFocus event.
            </summary>
            <param name="sender">Originator of event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.DeselectPage(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Process a change that is no longer selected.
            </summary>
            <param name="page">TabPage losing selection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.SelectPage(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Process a change that is becoming selected.
            </summary>
            <param name="page">TabPage that is becoming selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.HandleShowingTabPage(Crownwood.DotNetMagic.Controls.TabPage,System.Windows.Forms.Control)">
            <summary>
            Handle the selection of tab page that has a child control.
            </summary>
            <param name="page">TabPage becoming selected.</param>
            <param name="c">Child control to be processed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.MovePageSelection(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Handle the selection of tab page that has no child control.
            </summary>
            <param name="page">TabPage becoming selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">An EventArgs structure that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs structure that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs structure that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.InternalMouseDown(System.Drawing.Point)">
            <summary>
            Handle mouse down processing.
            </summary>
            <param name="mousePos">Client mouse position.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the DragEnter event.
            </summary>
            <param name="e">A DragEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the DragOver event.
            </summary>
            <param name="e">A DragEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnDragLeave(System.EventArgs)">
            <summary>
            Raises the DragLeave event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Process a change in user preferences.
            </summary>
            <param name="sender">Object generating event.</param>
            <param name="e">A UserPreferenceChangedEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Process a change in system colors.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnTooltipDisplay(Crownwood.DotNetMagic.Controls.TooltipDisplayEventArgs)">
            <summary>
            Raise the TooltipDisplay event.
            </summary>
            <param name="e">An TooltipDisplayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnContextMenuStripDisplay(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the ContextMenuStripDisplay event.
            </summary>
            <param name="e">A CancelEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnSelectionChanging(Crownwood.DotNetMagic.Controls.TabPage,Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Raises the SelectionChanging event.
            </summary>
            <param name="oldPage">Reference to currently selected page.</param>
            <param name="newPage">Reference to page that will become selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnSelectionChanged(Crownwood.DotNetMagic.Controls.TabPage,Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="oldPage">Reference to page that used to be selected.</param>
            <param name="newPage">Reference to currently selected page.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnClosePressed(System.EventArgs)">
            <summary>
            Raises the ClosePressed event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageGotFocus(System.EventArgs)">
            <summary>
            Raises the PageGotFocus event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageLostFocus(System.EventArgs)">
            <summary>
            Raises the PageLostFocus event.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageMoved(Crownwood.DotNetMagic.Controls.TabPage,System.Int32)">
            <summary>
            Raises the PageMoved event.
            </summary>
            <param name="page">Page that has been repositioned.</param>
            <param name="newIndex">New index in collection of pages.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageDragStart(Crownwood.DotNetMagic.Controls.TabPage,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the PageDragStart event.
            </summary>
            <param name="movePage">Page that is being dragged outside.</param>
            <param name="mea">A MouseEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageDragMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the PageDragMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageDragEnd(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the PageDragEnd event.
            </summary>
            <param name="e">A MouseEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnPageDragQuit(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the PageDragQuit event.
            </summary>
            <param name="e">A MouseEventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabControl.OnDoubleClickTab(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Raises the DoubleClickTab event.
            </summary>
            <param name="page">TabPage generating event.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.ClosePressed">
            <summary>
            Occurs when the close button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.SelectionChanging">
            <summary>
            Occurs just before a change in selected page is processed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.SelectionChanged">
            <summary>
            Occurs just after a change in selected page is processed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageGotFocus">
            <summary>
            Occurs when a tab page gets the focus.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageLostFocus">
            <summary>
            Occurs when a tab page loses the focus.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.TooltipDisplay">
            <summary>
            Occurs just before a tooltip is to be displayed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.ContextMenuStripDisplay">
            <summary>
            Occurs just before a context menu strip is shown.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageDragStart">
            <summary>
            Occurs when the user starts dragging a tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageDragMove">
            <summary>
            Occurs when the dragging page moves.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageDragEnd">
            <summary>
            Occurs when the user ends dragging a tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageDragQuit">
            <summary>
            Occurs when the user quits dragging a tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.PageMoved">
            <summary>
            Occurs after a page has been dragged into a different position.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.DoubleClickTab">
            <summary>
            Occurs when a mouse double click happens on a tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabControl.TabsAreaRectChanged">
            <summary>
            Occurs when the TabsAreaRect value changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Controls">
            <summary>
            DesignerSerializationVisibility
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.TabPages">
            <summary>
            Gets the collection of tab pages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.HotkeyPrefix">
            <summary>
            Gets or sets the setting used to determine how hoykeys are drawn in tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ImageSize">
            <summary>
            Gets and sets the size of images in the tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.AllowDragReorder">
            <summary>
            Gets or sets a value indicating whether the user can drag to reorder pages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ButtonActiveColor">
            <summary>
            Gets or sets the color used for buttons that are active.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ButtonInactiveColor">
            <summary>
            Gets or sets the color used for buttons that are inactive.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Appearance">
            <summary>
            Gets or sets the visual appearance of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Style">
            <summary>
            Gets or sets the visual style of the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficeStyle">
            <summary>
            Gets or sets the variation to use when drawing in Office2003/Office2007 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerStyle">
            <summary>
            Gets or sets the variation to use when drawing in Media Player style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005Style">
            <summary>
            Gets or sets the variation to use when drawing in IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the MediaPlayer style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.DragOverSelect">
            <summary>
            Gets and sets the ability to select pages as user drags over them.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.DragOutside">
            <summary>
            Gets and sets a value indicating if dragging outside the tab area is allowed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ToolTips">
            <summary>
            Gets and sets the ability show the TabPage.ToolTip when hovering.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.TextTips">
            <summary>
            Gets and sets the ability to show the full TabPage.Title as tooltip when abbreviated.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.AllowCtrlTab">
            <summary>
            Gets and sets the use of Ctrl+Tab for changing the selected page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.HotTrack">
            <summary>
            Gets and sets the ability to highlight tab header when mouse is over them.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.HotTextColor">
            <summary>
            Gets and sets the text color to use when hot tracking tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.TextColor">
            <summary>
            Gets and sets the text color to use when drawing tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.TextInactiveColor">
            <summary>
            Gets and sets the text color to use when drawing inactive tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.TabsAreaRect">
            <summary>
            Gets the bounding rectangle of the tab headers area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.PageAreaRect">
            <summary>
            Gets the bounding rectangle of the page area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ImageList">
            <summary>
            Gets and sets the image list used to draw tab header pictures.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.PositionTop">
            <summary>
            Gets and sets the position of tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ShowClose">
            <summary>
            Gets and sets the value indicating if the close button is displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ShowArrows">
            <summary>
            Gets and sets the value indicating if the arrow buttons are displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ShowDropSelect">
            <summary>
            Gets and sets the value indicating if the drop select arrow should be displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ShrinkPagesToFit">
            <summary>
            Gets and sets the value indicating if tab headers are resized to fit control width.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficeDockSides">
            <summary>
            Gets and sets the value indicating Office2003/Office2007 style should added extra dock specific fade lines.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerDockSides">
            <summary>
            Gets and sets the value indicating MediaPlayer style should added extra dock specific fade lines.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.BoldSelectedPage">
            <summary>
            Gets and sets the value indicating if the selected page is drawn bold.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MultilineFullWidth">
            <summary>
            Gets and sets a value indicating if tab header lines should stretch full width when in multiline mode.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Multiline">
            <summary>
            Gets and set a value indicating if tab headers should cross multiple lines.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ControlLeftOffset">
            <summary>
            Gets and sets the left offset used for positioning tab page controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ControlTopOffset">
            <summary>
            Gets and sets the top offset used for positioning tab page controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ControlRightOffset">
            <summary>
            Gets and sets the right offset used for positioning tab page controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.ControlBottomOffset">
            <summary>
            Gets and sets the bottom offset used for positioning tab page controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficeExtraTabInset">
            <summary>
            Gets and sets the extra space to inset the first tab from left.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerExtraTabInset">
            <summary>
            Gets and sets the extra space to inset the first tab from left.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005ExtraTabInset">
            <summary>
            Gets and sets the extra space to inset the first tab from left.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.InsetPlain">
            <summary>
            Gets and sets a value indicating that in plain style if the control area is flat or bumped.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.InsetBorderPagesOnly">
            <summary>
            Gets and sets a value indicating that in plain style it will only show the inset border nearest the tabs and not all four borders.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficePixelBorder">
            <summary>
            Gets and sets a value indicating that in Office2003/Office2007 style a single pixel border is drawn around the entire control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerPixelBorder">
            <summary>
            Gets and sets a value indicating that in Media Player style a single pixel border is drawn around the entire control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficeHeaderBorder">
            <summary>
            Gets and sets a value indicating that in Office2003/Office2007 style a single pixel border is drawn around the header control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerHeaderBorder">
            <summary>
            Gets and sets a value indicating that in Media Player style a single pixel border is drawn around the header control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDEPixelBorder">
            <summary>
            Gets and sets a value indicating that in IDE style a single pixel border is drawn around the entire control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDEPixelArea">
            <summary>
            Gets and sets a value indicating that in IDE style a single pixel border is drawn on the outside edge of tabs area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005PixelBorder">
            <summary>
            Gets and sets a value indicating that in IDE2005 style a single pixel border is drawn around the entire control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005HeaderBorder">
            <summary>
            Gets and sets a value indicating that in IDE2005 style a single pixel border is drawn around the header control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005TabJoined">
            <summary>
            Gets and sets a value indicating that in IDE2005 styles should draw the tab joined to the main area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.SelectedTextOnly">
            <summary>
            Gets and sets a value indicating if only the selected tab has its text drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MouseLeaveTimeout">
            <summary>
            Gets and sets a delay time used to decide when tab headers are hidden when mouse leaves tab headers and HideTabsMode is defined as HideWithoutMouse.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.HideTabsMode">
            <summary>
            Gets and sets the current tab header display mode.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.WithoutMouseVector">
            <summary>
            Gets and sets the vector used to test if mouse over should show tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.HoverSelect">
            <summary>
            Gets and sets a value indicating if hovering over a tab header causes its selection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MaximumHeaderWidth">
            <summary>
            Gets and sets teh maximum width allowed for the tab header.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.RecordFocus">
            <summary>
            Gets and sets a value indicating if focus is remembered when moving between pages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.SelectedIndex">
            <summary>
            Gets and sets the index of the selected tab page in the TabPages collection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.SelectedTab">
            <summary>
            Gets and sets a reference to the selected tab page in the TabPages collection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.Office2003ActiveColor">
            <summary>
            Gets the active color for Office2003 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerActiveColor">
            <summary>
            Gets the active color for MediaPlayer style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005ActiveColor">
            <summary>
            Gets the active color for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005BackLeftColor">
            <summary>
            Gets the active color for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005BackRightColor">
            <summary>
            Gets the active color for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficePageColor">
            <summary>
            Gets the active color for Office2003/Office2007 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerPageColor">
            <summary>
            Gets the active color for Media Player style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.OfficeBackColor">
            <summary>
            Gets the back color for Office2003/Office2007 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.MediaPlayerBackColor">
            <summary>
            Gets the back color for Media Player style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabControl.IDE2005BackColor">
            <summary>
            Gets the back color for IDE2005 style.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabButtonWithStyle">
            <summary>
            Derived class to draw the background to match the caption.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabButtonWithStyle.#ctor(Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initialize a new instance of the TabButtonWithStyle class.
            </summary>
            <param name="tabControl">Creating instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabButtonWithStyle.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TooltipDisplayEventArgs">
            <summary>
            Event arguments used when requesting a tool tip string.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TooltipDisplayEventArgs.#ctor(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Initialize a new instance of the TooltipDisplayEventArgs class.
            </summary>
            <param name="page">The tab page associated with the event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TooltipDisplayEventArgs.TabPage">
            <summary>
            Gets the TabPage for which the tooltip is being shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TooltipDisplayEventArgs.Tooltip">
            <summary>
            Gets and sets the text to show inside the tooltip.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.VisualAppearance">
            <summary>
            Specifies visual appearance of tab headers.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.VisualAppearance.MultiDocument">
            <summary>
            Specifies that tab headers are at the top with scrolling buttons.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.VisualAppearance.MultiForm">
            <summary>
            Specifies that tab headers are at the bottom.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.VisualAppearance.MultiBox">
            <summary>
            Specifies that tab headers as boxes.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.HideTabsModes">
            <summary>
            Specifies how tab headers are displayed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.HideTabsModes.ShowAlways">
            <summary>
            Specifies that tab headers are always shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.HideTabsModes.HideAlways">
            <summary>
            Specifies that tab headers are never shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.HideTabsModes.HideUsingLogic">
            <summary>
            Specifies that tab headers are shown only when more than one page exists.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.HideTabsModes.HideWithoutMouse">
            <summary>
            Specifies that tab headers are shown only when mouse is over area.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.OfficeStyle">
            <summary>
            Specifies how to draw the Office2003/Office2007 styles
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.SoftWhite">
            <summary>
            Specifies the tab headers are white with a soft background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.LightWhite">
            <summary>
            Specifies the tab headers are white with a light background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.DarkWhite">
            <summary>
            Specifies the tab headers are white with a darker background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.SoftEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a soft background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.LightEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a light background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.DarkEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a darker background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.Light">
            <summary>
            Specifies the tab headers are a light color with a dark background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeStyle.Dark">
            <summary>
            Specifies the tab headers are a dark color with a light background.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.MediaPlayerStyle">
            <summary>
            Specifies how to draw the MediaPlayer styles
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.SoftWhite">
            <summary>
            Specifies the tab headers are white with a soft background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.LightWhite">
            <summary>
            Specifies the tab headers are white with a light background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.DarkWhite">
            <summary>
            Specifies the tab headers are white with a darker background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.SoftEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a soft background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.LightEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a light background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.DarkEnhanced">
            <summary>
            Specifies the tab headers are in selected color with a darker background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.Light">
            <summary>
            Specifies the tab headers are a light color with a dark background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerStyle.Dark">
            <summary>
            Specifies the tab headers are a dark color with a light background.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.IDE2005Style">
            <summary>
            Specifies how to draw the IDE2005 style
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.IDE2005Style.Standard">
            <summary>
            Specifies the standard appearance for the active tab.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.IDE2005Style.StandardDark">
            <summary>
            Specifies the standard appearance with darker background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.IDE2005Style.Enhanced">
            <summary>
            Specifies the enhanced appearance for the active tab.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.IDE2005Style.EnhancedDark">
            <summary>
            Specifies the enhanced appearance with darker background.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.DoubleClickTabHandler">
            <summary>
            Represents the method that will handle the DoubleClickTab event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.SelectTabHandler">
            <summary>
            Represents the method that will handle the SelectionChanging and SelectionChanged events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PageDragStartHandler">
            <summary>
            Represents the method that will handle the PageDragStart event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PageDragHandler">
            <summary>
            Represents the method that will handle the PageDragQuit event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PageMovedHandler">
            <summary>
            Represents the method that will handle the PageMoved event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TooltipDisplayHandler">
            <summary>
            Represents the method that will handle the SelectionChanging and SelectionChanged events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ResizeBar">
            <summary>
            Control used to resize relative spacing of areas.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.#ctor(Crownwood.DotNetMagic.Common.LayoutDirection,Crownwood.DotNetMagic.Controls.IResizeSource)">
            <summary>
            Initializes a new instance of the ResizeBar class.
            </summary>
            <param name="direction">Direction for resizing.</param>
            <param name="resizeSource">Source of additional information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Process change in environment values.
            </summary>
            <param name="name">Name of environment variable that has changed.</param>
            <param name="value">New value for environment variable.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Process a change in system colors.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeBar.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ResizeBar.Style">
            <summary>
            Gets and sets the visual style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ResizeBar.Direction">
            <summary>
            Gets and sets the direction for resizing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.ResizeBar.Length">
            <summary>
            Gets and sets the vector of the control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ResizeAutoBar">
            <summary>
            ResizeBar control specialized to work with AutoHidePanel
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeAutoBar.#ctor(Crownwood.DotNetMagic.Common.LayoutDirection,Crownwood.DotNetMagic.Controls.IResizeSource)">
            <summary>
            Initializes a new instance of the ResizeAutoBar class.
            </summary>
            <param name="direction">Direction for resizing.</param>
            <param name="resizeSource">Source of additional information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.ResizeAutoBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PopupBase">
            <summary>
            Base class for handling popup windows.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PopupBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupBase.#ctor">
            <summary>
            Initialize a new instance of the PopupBase class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupBase.#ctor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the PopupBase class. 
            </summary>
            <param name="style">Required visual style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupBase.ShowWithoutFocus">
            <summary>
            Make the popup visible but without taking the focus
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupBase.Style">
            <summary>
            Gets the visual style to use when drawing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupBase.PopupShadow">
            <summary>
            Gets the shadow implementation class.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupBase.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DropSolid">
            <summary>
            Display a region with a semi-transparent colour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DropSolid.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.#ctor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the DropSolid class.
            </summary>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.ShowWithoutActivate">
            <summary>
            Show the window without taking activation.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs with event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropSolid.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.DropSolid.SolidRect">
            <summary>
            Sets the new solid rectangle area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.DropSolid.SolidRects">
            <summary>
            Sets the new solid region area.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.VisualStyle">
            <summary>
            Specifies the required visual style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.Plain">
            <summary>
            Adopt a plain vanilla style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.Office2003">
            <summary>
            Adopt the Office 2003 style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.IDE2005">
            <summary>
            Adopt the Visual Studio .NET 2005 style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.Office2007Blue">
            <summary>
            Adopt the Office 2007 style using the Blue scheme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.Office2007Silver">
            <summary>
            Adopt the Office 2007 style using the Silver scheme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.Office2007Black">
            <summary>
            Adopt the Office 2007 style using the Black scheme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.MediaPlayerBlue">
            <summary>
            Adopt the Windows Media Player style using the Blue scheme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.MediaPlayerOrange">
            <summary>
            Adopt the Windows Media Player style using the Blue scheme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.VisualStyle.MediaPlayerPurple">
            <summary>
            Adopt the Windows Media Player style using the Blue scheme.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DragFeedbackStyle">
            <summary>
            Specifies the required feedback style when dragging.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DragFeedbackStyle.Outline">
            <summary>
            Specifies an outline be shown around the drag area.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DragFeedbackStyle.Solid">
            <summary>
            Specifies a solid semi-transparent block be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DragFeedbackStyle.Diamonds">
            <summary>
            Specifies the use of diamond helper markers.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DragFeedbackStyle.Squares">
            <summary>
            Specifies the use of square helper markers.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.LayoutDirection">
            <summary>
            Specifies a direction.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.LayoutDirection.Vertical">
            <summary>
            Up and down direction.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.LayoutDirection.Horizontal">
            <summary>
            Left and right direction.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.Edge">
            <summary>
            Specifies an edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edge.Top">
            <summary>
            Upper vertical edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edge.Left">
            <summary>
            Near horizontal edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edge.Bottom">
            <summary>
            Lower vertical edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edge.Right">
            <summary>
            Far horizontal edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edge.None">
            <summary>
            No edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.PropogateName">
            <summary>
            Specifies the value being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.Style">
            <summary>
            Specifies the visual style has been changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.BackColor">
            <summary>
            Specifies the back color is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ActiveColor">
            <summary>
            Specifies the active color is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ActiveTextColor">
            <summary>
            Specifies the active text color is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.InactiveTextColor">
            <summary>
            Specifies the inactive text color is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ResizeBarColor">
            <summary>
            Specifies the resize bar color is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ResizeBarVector">
            <summary>
            Specifies the resize bar vector is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.CaptionFont">
            <summary>
            Specifies the caption font is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.TabControlFont">
            <summary>
            Specifies the tab control font is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ZoneMinMax">
            <summary>
            Specifies the zone min and max is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.PlainTabBorder">
            <summary>
            Specifies the plain tab border is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.FloatingInTaskBar">
            <summary>
            Specifies the floating in taskbar setting is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.FloatingTaskBarIcon">
            <summary>
            Specifies the icon for floating windows in the taskbar is being propogated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.AllowSideCaptions">
            <summary>
            Specifies that the caption can appear on the side of docking windows.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.StubsShowAll">
            <summary>
            Specifies that the tab stubs show all text entries and not just the selected one.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.AllowResize">
            <summary>
            Specifies the ability to resize the floating and docking windows.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.Apply2007ClearType">
            <summary>
            Specifies that text is drawn using clear type when using Office 2007 styles.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.PropogateName.ApplyMediaPlayerClearType">
            <summary>
            Specifies that text is drawn using clear type when using Office 2007 styles.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ItemState">
            <summary>
            Specifies the state a command is in.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ItemState.Normal">
            <summary>
            Specifies the command is in default state.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ItemState.HotTrack">
            <summary>
            Specifies command is being hot tracked.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ItemState.Pressed">
            <summary>
            Specifies command is user pressing it down.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ItemState.Open">
            <summary>
            Specifies command is has been opened.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.TextEdge">
            <summary>
            Specified which edge to draw text against.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.TextEdge.Top">
            <summary>
            Draw text above any image.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.TextEdge.Left">
            <summary>
            Draw text before any image.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.TextEdge.Bottom">
            <summary>
            Draw text below any image.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.TextEdge.Right">
            <summary>
            Draw text after any image.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.OmitEdge">
            <summary>
            Specified which edge to omit from drawing.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.OmitEdge.Top">
            <summary>
            Do not draw the top edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.OmitEdge.Left">
            <summary>
            Do not draw the left edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.OmitEdge.Bottom">
            <summary>
            Do not draw the bottom edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.OmitEdge.Right">
            <summary>
            Do not draw the right edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.OmitEdge.None">
            <summary>
            Do not omit any edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ButtonStyle">
            <summary>
            Specifies the different styles of button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ButtonStyle.PushButton">
            <summary>
            Specifies a regular button that can be clicked.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.ButtonStyle.ToggleButton">
            <summary>
            Specifies a button that stays down until pressed again.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ControlHelper">
            <summary>
            Collection of static methods used to remove child controls and forms.
            </summary>
            <remarks>
            At the time of writing this class there exists a bug that is exposed when
            you remove a window that has the focus. In this case window is removed but
            the main application window will no longer close. To get around this a
            temporary window is created and takes the focus whilst the required window
            is actually removed.
            </remarks>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ControlHelper.RemoveAll(System.Windows.Forms.Control)">
            <summary>
            Remove all child controls from provided control.
            </summary>
            <param name="control">Parent control from which to remove all children.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ControlHelper.Remove(System.Windows.Forms.Control.ControlCollection,System.Windows.Forms.Control)">
            <summary>
            Remove specified child item from the provided control collection.
            </summary>
            <param name="coll">Control collection that child item needs to be removed from.</param>
            <param name="item">Child control to remove from collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ControlHelper.RemoveAt(System.Windows.Forms.Control.ControlCollection,System.Int32)">
            <summary>
            Remove indexed child item from the provided control collection.
            </summary>
            <param name="coll">Control collection that child item needs to be removed from.</param>
            <param name="index">Index into collection that needs removing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ControlHelper.RemoveForm(System.Windows.Forms.Control,System.Windows.Forms.Form)">
            <summary>
            Remove specified form as a child.
            </summary>
            <param name="source">Source control from same application as form.</param>
            <param name="form">Form to be removed as child.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ControlHelper.ScreenLocation(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Gets the new location that is allowed given the requested location and size.
            </summary>
            <param name="pt">Point that might be form a different display setup.</param>
            <param name="size">Size of target window.</param>
            <returns>Resolved window location.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PopupTooltipSingle">
            <summary>
            Display a single line of tooltip text.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.#ctor">
            <summary>
            Initialize a new instance of the PopupTooltipSingle class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.#ctor(System.Drawing.Font)">
            <summary>
            Initialize a new instance of the PopupTooltip class.
            </summary>
            <param name="font">Font for drawing text.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.#ctor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the PopupTooltip class.
            </summary>
            <param name="style">Required visual style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.#ctor(Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Font)">
            <summary>
            Initialize a new instance of the PopupTooltip class.
            </summary>
            <param name="style">Required visual style.</param>
            <param name="font">Font for drawing text.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.ShowWithoutFocus(System.Drawing.Point)">
            <summary>
            Make the popup visible but without taking the focus
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.BorderColor">
            <summary>
            Gets and sets the border color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.BackColor2">
            <summary>
            Gets and sets the second background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.ToolText">
            <summary>
            Gets and sets the tool text to be shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.PopupTooltipSingle.TextHeight">
            <summary>
            Gets and sets the text height.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabPage">
            <summary>
            Represents a single tab page.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String,System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
            <param name="control">Child control for display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String,System.Windows.Forms.Control,System.Int32)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
            <param name="control">Child control for display.</param>
            <param name="imageIndex">Index to use for drawing image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String,System.Windows.Forms.Control,System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
            <param name="control">Child control for display.</param>
            <param name="imageList">Images the index relates to.</param>
            <param name="imageIndex">Index to use for drawing image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String,System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
            <param name="control">Child control for display.</param>
            <param name="image">Image to display with page.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.#ctor(System.String,System.Windows.Forms.Control,System.Drawing.Icon)">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
            <param name="title">Title for the page.</param>
            <param name="control">Child control for display.</param>
            <param name="icon">Icon to display with page.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.ResetVisible">
            <summary>
            Resets the value of the Visible property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.ToString">
            <summary>
            Return a string representation of page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPage.OnPropertyChanged(Crownwood.DotNetMagic.Controls.TabPage.Property,System.Object)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="prop">Property that has changed.</param>
            <param name="oldValue">Property value before it changed.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabPage.PropertyChanged">
            <summary>
            Occurs just after a property has been changed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Visible">
            <summary>
            Gets or sets a value indicating whether the control is displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Title">
            <summary>
            Gets and sets the title used for the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Control">
            <summary>
            Gets and sets the child control for the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.UniqueName">
            <summary>
            Gets and sets the unique name of the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.ImageIndex">
            <summary>
            Gets and sets the image index of the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.ImageList">
            <summary>
            Gets and sets the image list of the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Image">
            <summary>
            Gets and sets the image of the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Icon">
            <summary>
            Gets and sets the icon of the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.Selected">
            <summary>
            Gets and sets a value indicating if the page is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.ToolTip">
            <summary>
            Gets and sets the tooltip used for the page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.SelectBackColor">
            <summary>
            Gets and sets the page background color for selected page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.SelectTextBackColor">
            <summary>
            Gets and sets the text background color for selected page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.SelectTextColor">
            <summary>
            Gets and sets the text color for selected page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.InactiveBackColor">
            <summary>
            Gets and sets the page background color for inactive page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.InactiveTextBackColor">
            <summary>
            Gets and sets the text background color for inactive page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.InactiveTextColor">
            <summary>
            Gets and sets the text color for inactive page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPage.StartFocus">
            <summary>
            Gets and sets the control that should receive focus when page becomes selected.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabPage.Property">
            <summary>
            Specifies which property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.Title">
            <summary>
            Specifies that title property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.Control">
            <summary>
            Specifies that control property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.ImageIndex">
            <summary>
            Specifies that imsge index property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.ImageList">
            <summary>
            Specifies that image list property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.Image">
            <summary>
            Specified that the image property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.Icon">
            <summary>
            Specifies that icon property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.Selected">
            <summary>
            Specifies that selected property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.ToolTip">
            <summary>
            Specifies that tooltip property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.SelectBackColor">
            <summary>
            Specifies that selected background tab colour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.SelectTextColor">
            <summary>
            Specifies that selected text drawing color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.SelectTextBackColor">
            <summary>
            Specifies that selected text background drawing color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.InactiveBackColor">
            <summary>
            Specifies that inactive background tab colour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.InactiveTextColor">
            <summary>
            Specifies that inactive text drawing color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.InactiveTextBackColor">
            <summary>
            Specifies that inactive text background drawing color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TabPage.Property.UniqueName">
            <summary>
            Specifies a unique name assigned by the developer
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabPage.PropChangeHandler">
            <summary>
            Represents the method that will handle the PropertyChanged events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection">
            <summary>
            Provides a collection container for TabGroupBase instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Add(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Adds the specified TabGroupBase object to the collection.
            </summary>
            <param name="value">The TabGroupBase object to add to the collection.</param>
            <returns>The TabGroupBase object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.AddRange(Crownwood.DotNetMagic.Controls.TabGroupBase[])">
            <summary>
            Adds an array of TabGroupBase objects to the collection.
            </summary>
            <param name="values">An array of TabGroupBase objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Remove(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Removes a TabGroupBase from the collection.
            </summary>
            <param name="value">A TabGroupBase to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Inserts a TabGroupBase instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the TabGroupBase.</param>
            <param name="value">The TabGroupBase object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Contains(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Determines whether a TabGroupBase is in the collection.
            </summary>
            <param name="value">The TabGroupBase to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Contains(Crownwood.DotNetMagic.Controls.TabGroupBaseCollection)">
            <summary>
            Determines whether any of a group of TabGroupBase is in the collection.
            </summary>
            <param name="values">The group of TabGroupBase to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.IndexOf(Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Returns the index of the first occurrence of the given TabGroupBase.
            </summary>
            <param name="value">The TabGroupBase to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupBaseCollection.Item(System.Int32)">
            <summary>
            Gets the TabGroupBase at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.InertButton">
            <summary>
            Simple button class that does not take the focus.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.#ctor">
            <summary>
            Initializes a new instance of the InertButton class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.#ctor(System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initializes a new instance of the InertButton class.
            </summary>
            <param name="imageList">ImageList to use as source of images.</param>
            <param name="imageIndexEnabled">Index into list for enabled image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.#ctor(System.Windows.Forms.ImageList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the InertButton class.
            </summary>
            <param name="imageList">ImageList to use as source of images.</param>
            <param name="imageIndexEnabled">Index into list for enabled image.</param>
            <param name="imageIndexDisabled">Index into list for disabled image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.#ctor(System.Windows.Forms.ImageList,System.Int32,System.Int32,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Initializes a new instance of the InertButton class.
            </summary>
            <param name="imageList">ImageList to use as source of images.</param>
            <param name="imageIndexEnabled">Index into list for enabled image.</param>
            <param name="imageIndexDisabled">Index into list for disabled image.</param>
            <param name="imageAttr">Extra attributes to apply when drawing images.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.InertButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.ImageList">
            <summary>
            Gets or sets the image list used for sourcing images.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.ImageIndexEnabled">
            <summary>
            Gets or sets the index used for the enabled image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.ImageIndexDisabled">
            <summary>
            Gets or sets the index used for the disabled image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.ImageAttributes">
            <summary>
            Gets or sets the extra attributes applied to drawing images.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.BorderWidth">
            <summary>
            Gets or sets the border width around image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.InertButton.PopupStyle">
            <summary>
            Gets or sets the style used for drawing the button.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.Office2007ColorTable">
            <summary>
            Provide Office 2007 Theme colors
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.#ctor(Crownwood.DotNetMagic.Common.Office2007Theme)">
            <summary>
            Initialize a new instance of the Office2007ColorTable class.
            </summary>
            <param name="theme">Initial theme.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.SoftBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Soft background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.LightBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Light background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.DarkBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Dark background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.EnhancedBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the enhanced background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Enhanced background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.BorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the enhanced background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Border color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.SepLightColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the light separator color.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Light separator color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.SepDarkColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the dark separator color.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Dark separator color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TabInactiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the text color for an inactive tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Inactive text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TabActiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the text color for an active tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Active text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TabHighlightTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the text color for tab that is highlighted.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Active text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TabButtonColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.OfficeStyle)">
            <summary>
            Gets the text color for an inactive tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Inactive text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light active title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark active title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleInactiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light inactive title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleInactiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark inactive title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleActiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the active title text color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleInactiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the inactive title text color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleBorderColorDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the border color around a sliding title or title control.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TitleBorderColorLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the border color around a sliding title or title control.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.StatusBarGripDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark color used to draw a status bar grip.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.StatusBarGripLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light color used to draw a status bar grip.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.StatusBarText(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of text on the status bar.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.IndicatorsActive(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the active color of dragging indicators.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.IndicatorsInactive(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the inactive color of dragging indicators.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.SelectedActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active light color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.SelectedActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active dark color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.CheckedActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active light color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.CheckedActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active dark color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TooltipTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of the tooltip text.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TooltipBorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of the tooltip border.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TooltipLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light tooltip color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Office2007ColorTable.TooltipDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark tooltip color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Office2007ColorTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DragFeedback">
            <summary>
            Base class from which feedback implementation derived.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedback.Start(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Called at start of drag feedback process.
            </summary>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedback.DragRectangle(System.Drawing.Rectangle)">
            <summary>
            Called to request drag feedback for the new rectangle.
            </summary>
            <param name="newRect">New drag feedback rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedback.DragRectangles(System.Drawing.Rectangle[])">
            <summary>
            Called to request drag feedback for the new rectangles.
            </summary>
            <param name="newRects">New drag feedback rectangles.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedback.Quit">
            <summary>
            Called at end of drag feedback process.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DragFeedbackOutline">
            <summary>
            Drag feedback implemented as stippled line around area.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackOutline.Start(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Called at start of drag feedback process.
            </summary>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackOutline.DragRectangle(System.Drawing.Rectangle)">
            <summary>
            Called to request drag feedback for the new rectangle.
            </summary>
            <param name="newRect">New drag feedback rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackOutline.DragRectangles(System.Drawing.Rectangle[])">
            <summary>
            Called to request drag feedback for the new rectangles.
            </summary>
            <param name="newRects">New drag feedback rectangles.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackOutline.Quit">
            <summary>
            Called at end of drag feedback process.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DragFeedbackSolid">
            <summary>
            Drag feedback implemented as semi-transparent area.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackSolid.Start(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Called at start of drag feedback process.
            </summary>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackSolid.DragRectangle(System.Drawing.Rectangle)">
            <summary>
            Called to request drag feedback for the new rectangle.
            </summary>
            <param name="newRect">New drag feedback rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackSolid.DragRectangles(System.Drawing.Rectangle[])">
            <summary>
            Called to request drag feedback for the new rectangles.
            </summary>
            <param name="newRects">New drag feedback rectangles.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DragFeedbackSolid.Quit">
            <summary>
            Called at end of drag feedback process.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.CommandDraw">
            <summary>
            Collection of static helper methods for drawing command related visual elements.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawButtonCommand(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,Crownwood.DotNetMagic.Common.TextEdge,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.String,Crownwood.DotNetMagic.Common.CommandImage,System.Drawing.Imaging.ImageAttributes,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Crownwood.DotNetMagic.Common.ButtonStyle,System.Boolean,System.Boolean,System.Boolean,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            Draw a button according to a variety of specified styles.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="edge">Which edge to draw text around the image.</param>
            <param name="font">Font to use when drawing text.</param>
            <param name="textColor">Color to draw enabled text inside command.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="text">Text to draw inside command.</param>
            <param name="image">Image to draw inside command.</param>
            <param name="imageAttr">ImageAttributes used to modify drawing of command.</param>
            <param name="trackBase1">Top Base color used for tracking.</param>
            <param name="trackBase2">Bottom Base color used for tracking.</param>
            <param name="trackLight1">Top Light color used for tracking.</param>
            <param name="trackLight2">Bottom Light color used for tracking.</param>
            <param name="trackLightLight1">Top Very light color used for tracking.</param>
            <param name="trackLightLight2">Bottom Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="buttonStyle">Style of button operation.</param>
            <param name="pushed">Is button pressed down.</param>
            <param name="staticButton">Should buttons be forced to stay static.</param>
            <param name="drawBorder">Should border be forced to draw.</param>
            <param name="hAlign">Horizontal alignment of string.</param>
            <param name="vAlign">Vertical alignment of string.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawButtonCommandBack(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Crownwood.DotNetMagic.Common.ButtonStyle,System.Boolean)">
            <summary>
            Draw a button outline in appropriate visual style.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="trackBase1">Top Base color used for tracking.</param>
            <param name="trackBase2">Bottom Base color used for tracking.</param>
            <param name="trackLight1">Top Light color used for tracking.</param>
            <param name="trackLight2">Bottom Light color used for tracking.</param>
            <param name="trackLightLight1">Top Very light color used for tracking.</param>
            <param name="trackLightLight2">Bottom Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="buttonStyle">Style of button operation.</param>
            <param name="pushed">Is button pressed down.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawButtonCommandInside(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,Crownwood.DotNetMagic.Common.TextEdge,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.String,Crownwood.DotNetMagic.Common.CommandImage,System.Drawing.Imaging.ImageAttributes,System.Boolean,System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Boolean)">
            <summary>
            Draw a button outline in appropriate visual style.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="edge">Which edge to draw text around the image.</param>
            <param name="font">Font to use when drawing text.</param>
            <param name="textColor">Color to draw enabled text inside command.</param>
            <param name="baseColor">Base color to draw inside command.</param>
            <param name="text">Text to draw inside command.</param>
            <param name="image">Image to draw inside command.</param>
            <param name="imageAttr">ImageAttributes used to modify drawing of command.</param>
            <param name="staticButton">Should buttons be forced to stay static.</param>
            <param name="hAlign">Horizontal alignment of string.</param>
            <param name="vAlign">Vertical alignment of string.</param>
            <param name="pushed">Is the button already checked.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawButtonCommandOutline(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Crownwood.DotNetMagic.Common.ButtonStyle,System.Boolean,System.Boolean)">
            <summary>
            Draw a button outline in appropriate visual style.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="trackBase1">Top Base color used for tracking.</param>
            <param name="trackBase2">Bottom Base color used for tracking.</param>
            <param name="trackLight1">Top Light color used for tracking.</param>
            <param name="trackLight2">Bottom Light color used for tracking.</param>
            <param name="trackLightLight1">Top Very light color used for tracking.</param>
            <param name="trackLightLight2">Bottom Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="buttonStyle">Style of button operation.</param>
            <param name="pushed">Is button pressed down.</param>
            <param name="drawBorder">Should border be forced to draw.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawCommandText(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.String,System.Boolean)">
            <summary>
            Draw text inside given rectangle using appropriate appearance.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="font">Font to use when drawing text.</param>
            <param name="textColor">Color to draw enabled text inside command.</param>
            <param name="baseColor">Base color to draw inside command.</param>
            <param name="hAlign">Horizontal alignment of string.</param>
            <param name="vAlign">Vertical alignment of string.</param>
            <param name="text">Test to draw inside command.</param>
            <param name="pushed">Is the button already checked.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawCommandImage(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,System.Drawing.Rectangle,System.Drawing.Color,Crownwood.DotNetMagic.Common.CommandImage,System.Drawing.Imaging.ImageAttributes,System.Boolean)">
            <summary>
            Draw image inside given rectangle using appropriate appearance.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="baseColor">Color for drawing behind image.</param>
            <param name="image">Image to draw inside command.</param>
            <param name="imageAttr">ImageAttributes used to modify drawing of image.</param>
            <param name="staticButton">Should buttons be forced to stay static.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawImageInCentre(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Image,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draw an image in the centre of rectangle but clipped to it
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="imageSize">Size of the image.</param>
            <param name="image">Image to draw.</param>
            <param name="imageAttr">ImageAttributes used to modify drawing of image</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawMenuTopCommand(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,Crownwood.DotNetMagic.Common.TextEdge,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.String,Crownwood.DotNetMagic.Common.CommandImage,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Crownwood.DotNetMagic.Common.OmitEdge)">
            <summary>
            Draw a menu buton according to a variety of specified styles.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="edge">Which edge to draw text around the image.</param>
            <param name="font">Font to use when drawing text.</param>
            <param name="textColor">Color to draw enabled text inside command.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="text">Text to draw inside command.</param>
            <param name="image">Image to draw inside command.</param>
            <param name="trackBase">Base color used for tracking.</param>
            <param name="trackLight">Light color used for tracking.</param>
            <param name="trackLightLight">Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="openBase">Open color used for background in open mode.</param>
            <param name="openBorder">Open color used for border in open mode.</param>
            <param name="omitEdge">Which edge should not be drawn.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawMenuTopCommandBack(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw background of a menu command as a top item.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="trackBase">Base color used for tracking.</param>
            <param name="trackLight">Light color used for tracking.</param>
            <param name="trackLightLight">Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="openBase">Open color used for background in open mode.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawMenuTopCommandOutline(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Crownwood.DotNetMagic.Common.OmitEdge)">
            <summary>
            Draw a button outline in appropriate visual style.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="trackBase">Base color used for tracking.</param>
            <param name="trackLight">Light color used for tracking.</param>
            <param name="trackLightLight">Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="openBorder">OPen border color for open mode.</param>
            <param name="omitEdge">Which edge should not be drawn.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawMenuFullCommand(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Common.ItemState,System.Boolean,System.Drawing.Font,System.String,System.Windows.Forms.Shortcut,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Size,Crownwood.DotNetMagic.Common.CommandImage,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw a full menu command according to a variety of specified styles.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="state">Visual state of button.</param>
            <param name="enabled">Is the command enabled.</param>
            <param name="font">Font to use when drawing text.</param>
            <param name="text">Text to draw inside command.</param>
            <param name="shortCut">Shortcut to draw alongside text.</param>
            <param name="hasChildren">Does the menu have a submenu.</param>
            <param name="needsCheckSpace">Allow room for checkmark, even when one not needed for this item.</param>
            <param name="isChecked">Does menu need a checkmark.</param>
            <param name="isRadioChecked">If checked then should it be a radio checkmark.</param>
            <param name="maxImageSize">Maximum size needed for all menus images.</param>
            <param name="image">Image to draw inside command.</param>
            <param name="textColor">Color to draw enabled text inside command.</param>
            <param name="baseColor">Base color used for drawing.</param>
            <param name="trackBase">Base color used for tracking.</param>
            <param name="trackLight">Light color used for tracking.</param>
            <param name="trackLightLight">Very light color used for tracking.</param>
            <param name="trackBorder">Border color used for tracking.</param>
            <param name="openBase">Open color used for background in open mode.</param>
            <param name="openBorder">Open color used for border in open mode.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawSeparatorCommand(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Common.LayoutDirection,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw a separator in appropriate visual style.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of button.</param>
            <param name="direction">Direction of flow button is in.</param>
            <param name="drawRect">Rectangle that encloses drawing area.</param>
            <param name="sepDarkColor">Dark separator color used for drawing.</param>
            <param name="sepLightColor">Light separator used for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawPlainRaised(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a raised border of one pixel.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="boxRect">Rectangle that encloses drawing area.</param>
            <param name="baseColor">Base color used for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawPlainSunken(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a sunken border of one pixel.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="boxRect">Rectangle that encloses drawing area.</param>
            <param name="baseColor">Base color used for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawHandles(System.Drawing.Graphics,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw drag handle in appropriate style
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="style">Required visual style of handles.</param>
            <param name="rect">Area to draw the handles inside.</param>
            <param name="darkColor">Dark colour for drawing.</param>
            <param name="lightColor">Light colour for drawing.</param>
            <param name="vertical">Draw handle in vertical style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawGradientBackground(System.Drawing.Graphics,System.Windows.Forms.Control,Crownwood.DotNetMagic.Common.VisualStyle,System.Drawing.Rectangle)">
            <summary>
            Draw the gradient style background that fades between two colours.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="control">Reference to control to draw.</param>
            <param name="style">Reference to control to draw.</param>
            <param name="backRect">Rectangle to draw.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawGradientBackground(System.Drawing.Graphics,System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw the gradient style background that fades between two colours.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="control">Reference to control to draw.</param>
            <param name="base0">Base color used for drawing.</param>
            <param name="base1">Lighter base color used for drawing.</param>
            <param name="base2">Darker base color used for drawing.</param>
            <param name="gradient">Should a gradient effect be used.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.DrawGradientBackground(System.Drawing.Graphics,System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Draw the gradient style background that fades between two colours.
            </summary>
            <param name="g">Graphics reference needed for drawing.</param>
            <param name="control">Reference to control to draw.</param>
            <param name="base0">Base color used for drawing.</param>
            <param name="base1">Lighter base color used for drawing.</param>
            <param name="base2">Darker base color used for drawing.</param>
            <param name="gradient">Should a gradient effect be used.</param>
            <param name="drawRect">Rectangle to draw into.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackBaseFromTrack(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track base color from the track starting color.
            </summary>
            <param name="track">Track starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track base color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackLightFromTrack(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track light color from the track starting color.
            </summary>
            <param name="track">Track starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track light color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackLightLightFromTrack(System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track light light color from the track starting color.
            </summary>
            <param name="track">Track starting color.</param>
            <param name="baseColor">Base color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track light light color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.MenuSeparatorFromBase(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the menu separator colour from base color.
            </summary>
            <param name="baseColor">Base menu starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track menu inside color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackMenuInsideFromTrack(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track menu inside colour from starting color.
            </summary>
            <param name="track">Track menu starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track menu inside color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.MenuCheckInsideColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the menu check item colour from starting color.
            </summary>
            <param name="track">Track menu starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Menu check item color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackMenuCheckInsideColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track menu check item colour from starting color.
            </summary>
            <param name="track">Track menu starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track menu check item color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TrackDarkFromTrack(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track dark color from the track starting color.
            </summary>
            <param name="track">Track starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Track dark color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.BaseDarkFromBase(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the dark base color.
            </summary>
            <param name="baseColor">Base starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Dark base color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.BaseLightFromBase(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the light base color.
            </summary>
            <param name="baseColor">Base starting color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Light base color calculated.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.OpenBaseFromBase(System.Drawing.Color)">
            <summary>
            Calculates the track dark color from the track starting color.
            </summary>
            <param name="baseColor">Control base color.</param>
            <returns>Open base color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.OpenBaseFromBase(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the track dark color from the track starting color.
            </summary>
            <param name="baseColor">Control base color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Open base color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.OpenBorderFromBase(System.Drawing.Color,System.Boolean)">
            <summary>
            Calculates the outline open drawing color from control base color.
            </summary>
            <param name="baseColor">Control base color.</param>
            <param name="colors256">Are we working in 256 color mode.</param>
            <returns>Open border color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.TextSize(System.Drawing.Graphics,System.Drawing.Font,System.String)">
            <summary>
            Get the size required to draw the text in a provided font.
            </summary>
            <param name="g">Graphics object used to find size.</param>
            <param name="font">Font used to calculate size.</param>
            <param name="text">String to be measured.</param>
            <returns>Size of the rectangle large enough to enclose text.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandDraw.RawTextSize(System.Drawing.Graphics,System.Drawing.Font,System.String)">
            <summary>
            Get the size required to draw the text using a raw sizing.
            </summary>
            <param name="g">Graphics object used to find size.</param>
            <param name="font">Font used to calculate size.</param>
            <param name="text">String to be measured.</param>
            <returns>Size of the rectangle large enough to enclose text.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandDraw.StandardMenuCheckSize">
            <summary>
            Gets the standard size for checkmarks.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandDraw.StandardMenuColumnGap">
            <summary>
            Gets the pixel width for each side of a menu column.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowContentTabbed">
            <summary>
            Provide a tabbed appearance to multiple contents in the same window.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowContent">
            <summary>
            Base class for a Window that has a collection of contents.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initializes a new instance of the WindowContent class.
            </summary>
            <param name="manager">Parent docking manager instance.</param>
            <param name="vs">Visual style for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.BringContentToFront(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Bring the specified content to the foreground of the window.
            </summary>
            <param name="c">Content to bring to foreground.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.OnContentsClearing">
            <summary>
            Process the removing of all contents.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.OnContentInserted(System.Int32,System.Object)">
            <summary>
            Process the inserting of a new content.
            </summary>
            <param name="index">Position of new content.</param>
            <param name="value">New content instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.OnContentRemoving(System.Int32,System.Object)">
            <summary>
            Process just before a content is removed.
            </summary>
            <param name="index">Index to be removed.</param>
            <param name="value">Content to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.OnContentRemoved(System.Int32,System.Object)">
            <summary>
            Process just after a content has been removed.
            </summary>
            <param name="index">Index to be removed.</param>
            <param name="value">Content to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.OnContentChanged(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.Content.Property)">
            <summary>
            Process a change in property of a contained content.
            </summary>
            <param name="obj">Content that has a changed property.</param>
            <param name="prop">The property that has changed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContent.Suicide">
            <summary>
            Graceful shutdown of the instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowContent.Contents">
            <summary>
            Gets and sets the collection of managed content instances.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowContent.Style">
            <summary>
            Gets the visual style for drawing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowContent.CurrentContent">
            <summary>
            Gets the content which is currently active and so in the foreground.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initializes a new instance of the WindowContent class.
            </summary>
            <param name="manager">Parent docking manager instance.</param>
            <param name="vs">Visual style for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.HideCurrentContent">
            <summary>
            Hide the currently selected content.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.BringContentToFront(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Make the provided content the selected one.
            </summary>
            <param name="c">Content to select.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate a change in a framework property.
            </summary>
            <param name="name">Name of property changed.</param>
            <param name="value">New value of property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged; false to release only unmanaged. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.OnContentsClearing">
            <summary>
            Process the removing of all contents.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.OnContentInserted(System.Int32,System.Object)">
            <summary>
            Process the inserting of a new content.
            </summary>
            <param name="index">Position of new content.</param>
            <param name="value">New content instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.OnContentRemoving(System.Int32,System.Object)">
            <summary>
            Process just before a content is removed.
            </summary>
            <param name="index">Index to be removed.</param>
            <param name="value">Content to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.WindowDetailGotFocus(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Process a change in content detail focus.
            </summary>
            <param name="wd">WindowDetail instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.AddHotZones(Crownwood.DotNetMagic.Docking.Redocker,Crownwood.DotNetMagic.Docking.HotZoneCollection)">
            <summary>
            Add the collection of hot zones.
            </summary>
            <param name="redock">Reference to a redocker instance.</param>
            <param name="collection">Collection of hot zones.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.RecordRestore(System.Object)">
            <summary>
            Create a new restore instance for the window.
            </summary>
            <param name="child">Child object instance.</param>
            <returns>New restore instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter out; false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.OnContentChanged(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.Content.Property)">
            <summary>
            Process a change in property of a contained content.
            </summary>
            <param name="obj">Content that has a changed property.</param>
            <param name="prop">The property that has changed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowContentTabbed.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowContentTabbed.CurrentContent">
            <summary>
            Gets the selected content in the tabbed group.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowContentTabbed.TabControl">
            <summary>
            Gets access to the tab control used to present contents.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Restore">
            <summary>
            Base class for handling restore information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.#ctor">
            <summary>
            Initializes a new instance of the Restore class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.#ctor(Crownwood.DotNetMagic.Docking.Restore)">
            <summary>
            Initializes a new instance of the Restore class.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.PerformRestore(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Perform a restore using provided window.
            </summary>
            <param name="w">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.PerformRestore(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Perform a restore using provided zone.
            </summary>
            <param name="z">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.PerformRestore">
            <summary>
            Perform a restore.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.Reconnect(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Reconnect the object after a load has completed.
            </summary>
            <param name="dm">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save the object state to a stream.
            </summary>
            <param name="xmlOut">Stream for saving.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.LoadFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load the object state from a stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Restore.CreateFromXml(System.Xml.XmlTextReader,System.Boolean,System.Int32)">
            <summary>
            Recreate a Restore derived object from the stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="readIn">Should move to next XML node.</param>
            <param name="formatVersion">Format version number.</param>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Restore.Child">
            <summary>
            Gets and sets the child control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreContent">
            <summary>
            Base class for handling content base restore information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.#ctor">
            <summary>
            Initializes a new instance of the RestoreContent class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.#ctor(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreContent class.
            </summary>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreContent class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.Reconnect(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Reconnect the object after a load has completed.
            </summary>
            <param name="dm">Reference to docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContent.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RestoreContent.Content">
            <summary>
            Gets the cached content instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreContentState">
            <summary>
            Restore of content state.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.#ctor">
            <summary>
            Initializes a new instance of the RestoreContentState class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.#ctor(Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreContentState class.
            </summary>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreContentState class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentState.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RestoreContentState.State">
            <summary>
            Gets the cached state value.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreAutoHideState">
            <summary>
            Restore of an auto hidden content.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideState.#ctor">
            <summary>
            Initializes a new instance of the RestoreAutoHideState class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideState.#ctor(Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreAutoHideState class.
            </summary>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideState.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Initializes a new instance of the RestoreAutoHideState class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideState.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity">
            <summary>
            Restore of an auto hidden content with affinity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity.#ctor">
            <summary>
            Initializes a new instance of the RestoreAutoHideAffinity class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the RestoreAutoHideAffinity class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
            <param name="next">Collection of content names.</param>
            <param name="previous">Collection of content names.</param>
            <param name="nextAll">Collection of content names.</param>
            <param name="previousAll">Collection of content names.</param>
            <param name="currentContent">Is this content supposed to become the current one.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreAutoHideAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity">
            <summary>
            Restore content with docking edge affinity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity.#ctor">
            <summary>
            Initializes a new instance of the RestoreContentDockingAffinity class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Initializes a new instance of the RestoreContentDockingAffinity class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
            <param name="best">Collection of content names.</param>
            <param name="next">Collection of content names.</param>
            <param name="previous">Collection of content names.</param>
            <param name="nextAll">Collection of content names.</param>
            <param name="previousAll">Collection of content names.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentDockingAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity">
            <summary>
            Restore floating content object with affinity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity.#ctor">
            <summary>
            Initializes a new instance of the RestoreContentFloatingAffinity class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Initializes a new instance of the RestoreContentFloatingAffinity class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="state">State of content.</param>
            <param name="content">Reference to source content.</param>
            <param name="best">Collection of content names.</param>
            <param name="associates">Collection of content names.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity.PerformRestore(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Perform a restore using provided docking manager.
            </summary>
            <param name="dm">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreContentFloatingAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity">
            <summary>
            Restore content object with zone affinity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity.#ctor">
            <summary>
            Initializes a new instance of the RestoreZoneAffinity class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Initializes a new instance of the RestoreZoneAffinity class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="content">Reference to source content.</param>
            <param name="best">Collection of content names.</param>
            <param name="next">Collection of content names.</param>
            <param name="previous">Collection of content names.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity.PerformRestore(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Perform a restore using provided zone.
            </summary>
            <param name="z">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreZoneAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RestoreWindowContent">
            <summary>
            Restore content with window affinity.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreWindowContent.#ctor">
            <summary>
            Initializes a new instance of the RestoreWindowContent class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreWindowContent.#ctor(Crownwood.DotNetMagic.Docking.Restore,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the RestoreWindowContent class.
            </summary>
            <param name="child">Restore object to be chained.</param>
            <param name="content">Reference to source content.</param>
            <param name="next">Collection of content names.</param>
            <param name="previous">Collection of content names.</param>
            <param name="selected">Was content selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreWindowContent.PerformRestore(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Perform a restore using provided window.
            </summary>
            <param name="w">Reference to source.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreWindowContent.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Save object specific information to stream.
            </summary>
            <param name="xmlOut">Stream for loading.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RestoreWindowContent.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Load object specific information from stream.
            </summary>
            <param name="xmlIn">Stream for loading.</param>
            <param name="formatVersion">Format version number.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneSequence">
            <summary>
            Hot zone representing a content being moved into a zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneSequence.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Docking.ZoneSequence,System.Int32)">
            <summary>
            Initializes a new instance of the HotZoneSequence class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">New size of hot zone.</param>
            <param name="zs">Zone to be moved within.</param>
            <param name="index">New index position</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneSequence.ApplyChange(System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Apply the hot zone change.
            </summary>
            <param name="screenPos">Screen position when change applied.</param>
            <param name="parent">Parent redocker instance.</param>
            <returns>true is successful; otherwise false.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneFloating">
            <summary>
            Hot zone representing a content becoming a floating window.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneFloating.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Point,Crownwood.DotNetMagic.Docking.RedockerContent)">
            <summary>
            Initializes a new instance of the HotZoneFloating class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">Screen area to display with rectangle.</param>
            <param name="offset">Cursor offset when dragging started.</param>
            <param name="redocker">Parent redocker instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneFloating.ApplyChange(System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Apply the hot zone change.
            </summary>
            <param name="screenPos">Screen position when change applied.</param>
            <param name="parent">Parent redocker instance.</param>
            <returns>true is successful; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneFloating.UpdateForMousePosition(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Update the screen indication to reflect new mouse position.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="screenPos">New screen position.</param>
            <param name="parent">Parent redocker instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneFloating.DrawIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Draw the zone indicator to the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneFloating.RemoveIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Remove the zone indicator from the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GroupCollectionVC">
            <summary>
            Implements the group drawing implementation for a NodeCollection.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.DefaultCollectionVC">
            <summary>
            Implements the default drawing implementation for a NodeCollection.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.INodeCollectionVC">
            <summary>
            Interface required to draw individual NodeCollection instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.Initialize(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is attached to the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.Detaching(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is about to be detached from the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.MeasureEdges(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics)">
            <summary>
            Calculate and return the extra space needed for drawing a NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Extra space needed for each edge of the collection area.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.SetBounds(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle)">
            <summary>
            Defines the bounding rectangle of the collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="bounds">Bounding rectangle of collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.IntersectsWith(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle)">
            <summary>
            Find if the provided rectangle intersects the bounds of the node collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="rectangle">Rectangle to compare against.</param>
            <returns>True if intersecting; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw the NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="preDraw">True when drawing before children and fales for drawing after.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.MouseDown(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a mouse down on the NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="n">Reference to Node within collection.</param>
            <param name="button">Button that is pressed down.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.DoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Process a double click on the NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="n">Reference to Node within collection.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.NodeCollectionClearing(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Notification that all child nodes are being removed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.SizeChanged(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Notification that the size of the control has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.PostDrawNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Final chance to perform drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeCollectionVC.PostCalculateNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Collections.ArrayList)">
            <summary>
            Called once all the nodes have been calculated ready for display.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.Initialize(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is attached to the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.Detaching(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is about to be detached from the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.IsRootCollection(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Helper function that indicates if given collection is the root.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.MeasureEdges(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics)">
            <summary>
            Calculate and return the extra space needed for drawing a NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Extra space needed for each edge of the collection area.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.SetBounds(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle)">
            <summary>
            Defines the bounding rectangle of the collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="bounds">Bounding rectangle of collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.IntersectsWith(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle)">
            <summary>
            Find if the provided rectangle intersects the bounds of the node collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="rectangle">Rectangle to compare against.</param>
            <returns>True if intersecting; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw the NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="preDraw">True when drawing before children and fales for drawing after.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.DrawNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw any lines/boxes/indicators for a given node and child nodes.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="showLines">Should lines for drawn for node.</param>
            <param name="showBoxes">Should boxes for drawn for node.</param>
            <param name="showIndicators">Should indicators for drawn for node.</param>
            <param name="firstOrLast">Is node the first of last in collection.</param>
            <param name="lineDashPen">Pen used to drawing lines.</param>
            <param name="xMidAdjustL">Left adjusted position for column</param>
            <param name="xMidAdjustR">Right adjusted position for column.</param>
            <param name="xMid">Middle position for column.</param>
            <param name="xRight">Right position for column.</param>
            <param name="xLeft">Left position for column.</param>
            <returns>true if node is outside of clipping rectangle; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.DrawIndicator(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draw an appropriate image for a node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="x">Left X position for drawing indicator.</param>
            <param name="y">Middle Y position for drawing indicator.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.DrawExpandCollapseBox(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draw an expand/collapse box for the given node using provided centre point.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="x">X centre of box.</param>
            <param name="y">Y centre of box.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.AdjustBeforeDrawing(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle@)">
            <summary>
            Adjust the total bounds of the collection into the bounds available for drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="ncBounds">Drawing bounds to draw within.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.ShowLines(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Should lines be drawn for the node collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <returns>true if lines are to be drawn; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.ShowBoxes(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Should boxes be drawn for the node collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <returns>true if lines are to be drawn; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.MouseDown(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a left mouse down on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="n">Reference to Node within collection.</param>
            <param name="button">Button that is pressed down.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.DoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Process a left mouse down on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="n">Reference to Node within collection.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.GetExpandCollapseBox(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Gets the bounding rectangle of just the expand/collapse box
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="n">Reference to Node within collection.</param>
            <returns>Bounding rectangle of the box.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.NodeCollectionClearing(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Notification that all child nodes are being removed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.SizeChanged(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Notification that the size of the control has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.PostDrawNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Final change to perform drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultCollectionVC.PostCalculateNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Collections.ArrayList)">
            <summary>
            Called once all the nodes have been calculated ready for display.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.IsRealRootCollection(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Helper function that indicates if given collection is the real root.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.IsRootCollection(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Helper function that indicates if given collection is the root.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.SetBounds(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle)">
            <summary>
            Defines the bounding rectangle of the collection.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="bounds">Bounding rectangle of collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.MeasureEdges(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics)">
            <summary>
            Calculate and return the extra space needed for drawing a NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Extra space needed for each edge of the collection area.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw the NodeCollection instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="preDraw">True when drawing before children and fales for drawing after.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.AdjustBeforeDrawing(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.NodeCollection,System.Drawing.Rectangle@)">
            <summary>
            Adjust the total bounds of the collection into the bounds available for drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="nc">Reference to NodeCollection instance.</param>
            <param name="ncBounds">Drawing bounds to draw within.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.SizeChanged(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Notification that the size of the control has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.PostDrawNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Final change to perform drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupCollectionVC.PostCalculateNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Collections.ArrayList)">
            <summary>
            Called once all the nodes have been calculated ready for display.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StatusBarControl">
            <summary>
            Configurable title bar for presenting user with header information.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.#ctor">
            <summary>
            Initializes a new instance of the StatusBarControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.Dispose(System.Boolean)">
            <summary>
            Dispose of instance resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetBackColor">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetDock">
            <summary>
            Resets the Dock property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetStyle">
            <summary>
            Resets the Dock property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetOffice2003GradBack">
            <summary>
            Resets the Office2003GradBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetIDE2005GradBack">
            <summary>
            Resets the IDE2005GradBack property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetApply2007ClearType">
            <summary>
            Resets the Apply2007ClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetApplyMediaPlayerClearType">
            <summary>
            Resets the ApplyMediaPlayerClearType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetSizingGrip">
            <summary>
            Resets the SizingGrip property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetPadLeft">
            <summary>
            Resets the PadLeft property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetPadRight">
            <summary>
            Resets the PadRight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetPadTop">
            <summary>
            Resets the PadTop property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.ResetPadBottom">
            <summary>
            Resets the PadBottom property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs structure contained event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process individual windows messages.
            </summary>
            <param name="m">Message to snoop.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusBarControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs structure contained event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.Dock">
            <summary>
            Gets and sets the docking edge for the status bar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.Style">
            <summary>
            Gets and sets how the panels are drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.Office2003GradBack">
            <summary>
            Gets and sets a value indicating if the background should be drawn with a gradient when using Office2003 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.IDE2005GradBack">
            <summary>
            Gets and sets a value indicating if the background should be drawn with a gradient when using IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.SizingGrip">
            <summary>
            Gets and sets a value indicating if a sizing grip should be shown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.StatusPanels">
            <summary>
            Gets the collection of StatusPanel instances to be displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.PadLeft">
            <summary>
            Gets and sets the starting offset for positioning panels.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.PadRight">
            <summary>
            Gets and sets the ending offset when positioning with spring.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.PadTop">
            <summary>
            Gets and sets the starting offset from top when positioning panels.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusBarControl.PadBottom">
            <summary>
            Gets and sets the offset from bottom when positioning panels.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.PlainRenderer">
            <summary>
            Draw ToolStrip using the Plain themed appearance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.PlainRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.Gdi32">
            <summary>
            Access to GDI32 functions.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            BitBlt function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.ExcludeClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ExcludeClipRect function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            CreateCompatibleBitmap function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.CombineRgn(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            CombineRgn function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.CreateRectRgnIndirect(Crownwood.DotNetMagic.Win32.RECT@)">
            <summary>
            CreateRectRgnIndirect function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.GetClipBox(System.IntPtr,Crownwood.DotNetMagic.Win32.RECT@)">
            <summary>
            GetClipBox function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.GetClipRgn(System.IntPtr,System.IntPtr@)">
            <summary>
            GetClipRgn function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.SelectClipRgn(System.IntPtr,System.IntPtr)">
            <summary>
            SelectClipRgn function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.CreateBrushIndirect(Crownwood.DotNetMagic.Win32.LOGBRUSH@)">
            <summary>
            CreateBrushIndirect function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.PatBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            PatBlt function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.DeleteObject(System.IntPtr)">
            <summary>
            DeleteObject function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.DeleteDC(System.IntPtr)">
            <summary>
            DeleteDC function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            SelectObject function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.CreateCompatibleDC(System.IntPtr)">
            <summary>
            CreateCompatibleDC function of GDI32
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Gdi32.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            GetDeviceCaps function of GDI32
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowCollection">
            <summary>
            Provides a collection container for Window instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.Add(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Adds the specified Window object to the collection.
            </summary>
            <param name="value">The Window object to add to the collection.</param>
            <returns>The Window object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.AddRange(Crownwood.DotNetMagic.Docking.Window[])">
            <summary>
            Adds an array of Window objects to the collection.
            </summary>
            <param name="values">An array of Window objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.Remove(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Removes a Window from the collection.
            </summary>
            <param name="value">A Window to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Inserts a Window instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the Window.</param>
            <param name="value">The Window object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.Contains(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Determines whether a Window is in the collection.
            </summary>
            <param name="value">The Window to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowCollection.IndexOf(Crownwood.DotNetMagic.Docking.Window)">
            <summary>
            Returns the index of the first occurrence of the given Window.
            </summary>
            <param name="value">The Window to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowCollection.Item(System.Int32)">
            <summary>
            Gets the Window at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GroupColoring">
            <summary>
            Specifies how to draw the group node colouring.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.ControlProperties">
            <summary>
            Specifies that the TreeControl properties be used.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2003Light">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2003 light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2003Dark">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2003 dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007BlueLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Blue scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007BlueDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Blue scheme dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007SilverLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Silver scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007SilverDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Silver scheme dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007BlackLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Black scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.Office2007BlackDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use Office2007 Black scheme dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerBlueLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Blue scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerBlueDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Blue scheme dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerOrangeLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Orange scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerOrangeDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Orange scheme dark colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerPurpleLight">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Purple scheme light colours.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupColoring.MediaPlayerPurpleDark">
            <summary>
            Specifies the the TreeControl properties be ignored and use MediaPlayer Purple scheme dark colours.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.SelectMode">
            <summary>
            Specifies how selection is handled.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.SelectMode.None">
            <summary>
            Specifies that nodes cannot be selected.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.SelectMode.Single">
            <summary>
            Specifies that only a single node can be selected at a time.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.SelectMode.Multiple">
            <summary>
            Specifies that any number of nodes can be selected at a time.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TreeControlStyles">
            <summary>
            Specifies a style to be applied to the TreeControl control.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.StandardPlain">
            <summary>
            Specifies standard appearance using plain settings.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.StandardThemed">
            <summary>
            Specifies standard appearance using themed settings.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.Explorer">
            <summary>
            Specifies explorer like appearance and behaviour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.Navigator">
            <summary>
            Specifies navigator appearance and behaviour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.Group">
            <summary>
            Specifies group appearance and behaviour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeLight">
            <summary>
            Specifies group appearance matching Office2003 light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeDark">
            <summary>
            Specifies group appearance matching Office2003 dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.List">
            <summary>
            Specifies list appearance and behaviour.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeBlueLight">
            <summary>
            Specifies group appearance matching Office2007 Blue light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeBlueDark">
            <summary>
            Specifies group appearance matching Office2007 Blue dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeSilverLight">
            <summary>
            Specifies group appearance matching Office2007 Silver light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeSilverDark">
            <summary>
            Specifies group appearance matching Office2007 Silver dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeBlackLight">
            <summary>
            Specifies group appearance matching Office2007 Black light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupOfficeBlackDark">
            <summary>
            Specifies group appearance matching Office2007 Black dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaBlueLight">
            <summary>
            Specifies group appearance matching MediaPlayer Blue light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaBlueDark">
            <summary>
            Specifies group appearance matching MediaPlayer Blue dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaOrangeLight">
            <summary>
            Specifies group appearance matching MediaPlayer Orange light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaOrangeDark">
            <summary>
            Specifies group appearance matching MediaPlayer Orange dark theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaPurpleLight">
            <summary>
            Specifies group appearance matching MediaPlayer Purple light theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeControlStyles.GroupMediaPurpleDark">
            <summary>
            Specifies group appearance matching MediaPlayer Purple dark theme.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Indicator">
            <summary>
            Specifies an indicator.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.None">
            <summary>
            Specifies no indicator.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.FlagRed">
            <summary>
            Specifies a red flag.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.FlagOrange">
            <summary>
            Specifies an orange flag.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.FlagGreen">
            <summary>
            Specifies a green flag.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.FlagBlue">
            <summary>
            Specifies a blue flag.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.FlagGray">
            <summary>
            Specifies a gray flag.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.ArrowRed">
            <summary>
            Specifies a red arrow.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.ArrowOrange">
            <summary>
            Specifies an orange arrow.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.ArrowGreen">
            <summary>
            Specifies a green arrow.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.ArrowBlue">
            <summary>
            Specifies a blue arrow.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.ArrowGray">
            <summary>
            Specifies a gray arrow.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.BoxRed">
            <summary>
            Specifies a red box.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.BoxOrange">
            <summary>
            Specifies an orange box.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.BoxGreen">
            <summary>
            Specifies a green box.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.BoxBlue">
            <summary>
            Specifies a blue box.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.BoxGray">
            <summary>
            Specifies a gray box.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.TickRed">
            <summary>
            Specifies a red tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.TickBrown">
            <summary>
            Specifies a brown tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.TickGreen">
            <summary>
            Specifies a green tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.TickBlue">
            <summary>
            Specifies a blue tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.TickBlack">
            <summary>
            Specifies a black tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.CrossRed">
            <summary>
            Specifies a red cross.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.CrossBrown">
            <summary>
            Specifies a brown cross.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.CrossGreen">
            <summary>
            Specifies a green cross.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.CrossBlue">
            <summary>
            Specifies a blue cross.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.CrossBlack">
            <summary>
            Specifies a black cross.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.QuestionRed">
            <summary>
            Specifies a red question mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.QuestionBrown">
            <summary>
            Specifies a brown question mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.QuestionGreen">
            <summary>
            Specifies a green question mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.QuestionBlue">
            <summary>
            Specifies a blue question mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.QuestionBlack">
            <summary>
            Specifies a black question mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Tick">
            <summary>
            Specifies a tick.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.NoEntryBig">
            <summary>
            Specifies a no entry sign.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.NoEntrySmall">
            <summary>
            Specifies a no entry sign.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Exclamation">
            <summary>
            Specifies an exclamation mark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Error">
            <summary>
            Specifies an error indicator.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Lock">
            <summary>
            Specifies a lock symbol.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Lightning">
            <summary>
            Specifies a lightning symbol.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Paperclip">
            <summary>
            Specifies a paperclip symbol.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicator.Graph">
            <summary>
            Specifies a graph symbol.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ClickExpandAction">
            <summary>
            Specifies the expand operation when clicking a node.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ClickExpandAction.None">
            <summary>
            Specifies no expand/collapse action take place.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ClickExpandAction.Expand">
            <summary>
            Specifies the node be expanded.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ClickExpandAction.Toggle">
            <summary>
            Specifies the node expanded state be toggled.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ViewControllers">
            <summary>
            Specifies the ViewControllers to use.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ViewControllers.Default">
            <summary>
            Specifies the default ViewControllers.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ViewControllers.Group">
            <summary>
            Specifies the root nodes as group ViewControllers.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.DrawStyle">
            <summary>
            Specifies how a visual element is drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DrawStyle.Plain">
            <summary>
            Specifies that plain style be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DrawStyle.Themed">
            <summary>
            Specifies that the current theme be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DrawStyle.Gradient">
            <summary>
            Specifies that gradient style be drawn.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Indicators">
            <summary>
            Specifies how to show indicators.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicators.None">
            <summary>
            Specifies that indicators are not shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicators.AtRoot">
            <summary>
            Specifies that all indicators are shown at root level.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Indicators.AtGroup">
            <summary>
            Specifies that indicators are shown at group level.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LineBoxVisibility">
            <summary>
            Specifies when to show Lines or Boxes.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineBoxVisibility.Nowhere">
            <summary>
            Specifies that they are not shown at all.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineBoxVisibility.OnlyAtRoot">
            <summary>
            Specifies that they are shown at root level only.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineBoxVisibility.OnlyBelowRoot">
            <summary>
            Specifies that they are below root only.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineBoxVisibility.Everywhere">
            <summary>
            Specifies that they are shown at all levels.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.ScrollVisibility">
            <summary>
            Specifies how to show a scrollbar.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ScrollVisibility.Never">
            <summary>
            Specifies the scrollbar is never shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ScrollVisibility.Always">
            <summary>
            Specifies the scrollbar is always shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.ScrollVisibility.WhenNeeded">
            <summary>
            Specifies the scrollbar is shown when needed.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.VerticalGranularity">
            <summary>
            Specifies the vertical scrolling granularity.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.VerticalGranularity.Pixel">
            <summary>
            Specifies pixel level scrolling.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.VerticalGranularity.Node">
            <summary>
            Specifies node level scrolling.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LineDashStyle">
            <summary>
            Specifies how the lines are drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineDashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineDashStyle.Dot">
            <summary>
            Specifies a dotted line.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.LineDashStyle.Dash">
            <summary>
            Specifies a dashed line.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.CheckStates">
            <summary>
            Specifies TreeControl level checkbox style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckStates.None">
            <summary>
            Specifies that no checkbox is shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckStates.TwoStateCheck">
            <summary>
            Specifies a checkbox with checked and unchecked states is used.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckStates.ThreeStateCheck">
            <summary>
            Specifies a checkbox with checked, unchecked and mixed states is used.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckStates.Radio">
            <summary>
            Specifies a radio button
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeCheckStates">
            <summary>
            Specifies node level checkbox style.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.NodeCheckStates.None">
            <summary>
            Specifies that no checkbox is shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.NodeCheckStates.TwoStateCheck">
            <summary>
            Specifies a checkbox with checked and unchecked states is used.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.NodeCheckStates.ThreeStateCheck">
            <summary>
            Specifies a checkbox with checked, unchecked and mixed states is used.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.NodeCheckStates.Radio">
            <summary>
            Specifies a radio button
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.NodeCheckStates.Inherit">
            <summary>
            Specifies the style of the TreeControl should be used.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.CheckState">
            <summary>
            Specifies the checkbox state.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckState.Unchecked">
            <summary>
            Specifies the checkbox is unchecked.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckState.Mixed">
            <summary>
            Specifies the checkbox is mixed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CheckState.Checked">
            <summary>
            Specifies the checkbox is checked.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TreeGradientColoring">
            <summary>
            Specifies how gradient color is calculated.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeGradientColoring.VeryLightToColor">
            <summary>
            Specifies very light to color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeGradientColoring.LightToColor">
            <summary>
            Specifies light to color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeGradientColoring.LightToDark">
            <summary>
            Specifies light to dark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeGradientColoring.LightToVeryDark">
            <summary>
            Specifies light to very dark.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeGradientColoring.VeryLightToVeryDark">
            <summary>
            Specifies very light to very dark.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GroupBorderStyle">
            <summary>
            Specifies how the group border is drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupBorderStyle.None">
            <summary>
            Specifies that no group border is drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupBorderStyle.AllEdges">
            <summary>
            Draw border color around exposed edges.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupBorderStyle.VerticalEdges">
            <summary>
            Draw border color around vertically exposed edges.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.GroupBorderStyle.BottomEdge">
            <summary>
            Draw border around the bottom edge only.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TreeBorderStyle">
            <summary>
            Specifies how the border is drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.None">
            <summary>
            Specifies a value of None.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Theme">
            <summary>
            Specifies the border be drawn using current theme.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Solid">
            <summary>
            Specifies a value equivalent to ButtonBorderStyle.Inset
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Dashed">
            <summary>
            Specifies a value equivalent to ButtonBorderStyle.Dashed
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Dotted">
            <summary>
            Specifies a value equivalent to ButtonBorderStyle.Dotted
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Flat3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Flat
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Bump3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Bump
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Etched3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Etched
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Adjust3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Adjust
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Raised3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Raised
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.RaisedInner3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.RaisedInner
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.RaisedOuter3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.RaisedOuter
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.Sunken3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.Sunken
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.SunkenInner3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.SunkenInner
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.TreeBorderStyle.SunkenOuter3D">
            <summary>
            Specifies a value equivalent to Border3DStyle.SunkenOuter
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabGroupLeaf">
            <summary>
            Group that represents a terminal leaf.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.#ctor(Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupBase)">
            <summary>
            Initializes a new instance of the TabGroupLeaf class.
            </summary>
            <param name="tabbedGroups">Parent control instance.</param>
            <param name="parent">Parent group instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.Dispose">
            <summary>
            Releases all resources used by the group.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.Notify(Crownwood.DotNetMagic.Controls.TabGroupBase.NotifyCode)">
            <summary>
            Informs group of a notification.
            </summary>
            <param name="code">Which notification has occured.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.ContainsProminent(System.Boolean)">
            <summary>
            Returns a value indicating whether the group contains the prominent leaf.
            </summary>
            <param name="recurse">Should the group search child groups.</param>
            <returns>true if prominent leaf contained; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Request this group save its information.
            </summary>
            <param name="xmlOut">Write to save information into.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabGroupLeaf.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Request this group load its information.
            </summary>
            <param name="xmlIn">Reader to load information from.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.TabControl">
            <summary>
            Gets a reference to the contained TabControl instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.TabPages">
            <summary>
            Gets the collection of tab pages contained in leaf.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.AllowDrop">
            <summary>
            Sets and gets if tabs can be dragged onto this leaf.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.Count">
            <summary>
            Gets the number of child items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.IsLeaf">
            <summary>
            Gets a value indicating whether the group is a leaf.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.IsSequence">
            <summary>
            Gets a value indicating whether the group is a sequence.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabGroupLeaf.GroupControl">
            <summary>
            Gets the parent control instance.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ThemeColorHelper">
            <summary>
            Helper class for applying theme to a control instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.#ctor">
            <summary>
            Initialize a new instance of the ThemeColorHelper class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.Reset">
            <summary>
            Ensure that the current theme is retested.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.BaseColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the base color for the current theme
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.BaseColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light base color for the current theme
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.BaseColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark base color for the current theme
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.BaseColorStub(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light base color for the IDE2005 stub.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.DarkBaseColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark base color for the current theme
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.DarkBaseColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark second base color for the current theme
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackDarkColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking dark color for the current theme.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackBaseColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking base colour for the top.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackBaseColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking base colour for the bottom.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackLightColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking light colour for the top.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackLightColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking light colour for the bottom.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackLightLightColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking light light colour for the top.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackLightLightColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking light light colour for the bottom.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.OpenBorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the menu border color.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.MenuItemBorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the menu item border color.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.MenuBackColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the menu background color.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.MenuSeparatorColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the menu separator color.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackMenuInsideColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking colour for inside a menu item.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.MenuCheckInsideColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the inside colour for a checkmark/radio button
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.TrackMenuCheckInsideColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the tracking inside colour for a checkmark/radio button
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.CaptionColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Light color used for captions
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.CaptionColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Dark color used for captions
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.CaptionSelectColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Light color used for selected captions
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.CaptionSelectColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Dark color used for selected captions
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.SpotColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Dark color used for drawing spots
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.SpotColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Light color used for drawing spots
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.SepDarkColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Dark color used for separators.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.SepLightColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Light color used for separators.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.OpenBaseColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Top Base color used for drawing open menu items.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.OpenBaseColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Bottom Base color used for drawing open menu items.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.ColumnBaseColor1(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Left color used for drawing image column.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.ColumnBaseColor2(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Right color used for drawing image column.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.ActiveTabColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Color using to fill inside of an active tab.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.ActiveTabButtonColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Color using to for tab buttons.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.ActiveBorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Color used for border in docking and tabcontrol.
            </summary>
            <param name="style">Visual Style to be applied.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ThemeColorHelper.Dispose">
            <summary>
            Dispose of object details.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingObscurer">
            <summary>
            Obscure all docking related areas.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingObscurer.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the DockingObscurer class.
            </summary>
            <param name="cont">Control to obscure.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingObscurer.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.MSG">
            <summary>
            Win32 MSG structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.hwnd">
            <summary>
            hwnd field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.message">
            <summary>
            message field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.wParam">
            <summary>
            wParam field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.lParam">
            <summary>
            lParam field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.time">
            <summary>
            time field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.pt_x">
            <summary>
            pt_x field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.MSG.pt_y">
            <summary>
            pt_y field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.PAINTSTRUCT">
            <summary>
            Win32 PAINTSTRUCT structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.hdc">
            <summary>
            hdc field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.fErase">
            <summary>
            fErase field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.rcPaint">
            <summary>
            rcPaint field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.fRestore">
            <summary>
            fRestore field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.fIncUpdate">
            <summary>
            fIncUpdate field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved1">
            <summary>
            Reserved1 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved2">
            <summary>
            Reserved2 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved3">
            <summary>
            Reserved3 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved4">
            <summary>
            Reserved4 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved5">
            <summary>
            Reserved5 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved6">
            <summary>
            Reserved6 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved7">
            <summary>
            Reserved7 field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.PAINTSTRUCT.Reserved8">
            <summary>
            Reserved8 field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.RECT">
            <summary>
            Win32 RECT structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RECT.left">
            <summary>
            left field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RECT.top">
            <summary>
            top field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RECT.right">
            <summary>
            right field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.RECT.bottom">
            <summary>
            bottom field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.POINT">
            <summary>
            Win32 POINT structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.POINT.x">
            <summary>
            x field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.POINT.y">
            <summary>
            y field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.SIZE">
            <summary>
            Win32 SIZE structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SIZE.cx">
            <summary>
            cx field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.SIZE.cy">
            <summary>
            cy field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.BLENDFUNCTION">
            <summary>
            Win32 BLENDFUNCTION structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BLENDFUNCTION.BlendOp">
            <summary>
            BlendOp field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BLENDFUNCTION.BlendFlags">
            <summary>
            BlendFlags field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BLENDFUNCTION.SourceConstantAlpha">
            <summary>
            SourceConstantAlpha field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.BLENDFUNCTION.AlphaFormat">
            <summary>
            AlphaFormat field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS">
            <summary>
            Win32 TRACKMOUSEEVENTS structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS.cbSize">
            <summary>
            cbSize field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS.dwFlags">
            <summary>
            dwFlags field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS.hWnd">
            <summary>
            hWnd field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.TRACKMOUSEEVENTS.dwHoverTime">
            <summary>
            dwHoverTime field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.LOGBRUSH">
            <summary>
            Win32 LOGBRUSH structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.LOGBRUSH.lbStyle">
            <summary>
            lbStyle field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.LOGBRUSH.lbColor">
            <summary>
            lbColor field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.LOGBRUSH.lbHatch">
            <summary>
            lbHatch field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.NCCALCSIZE_PARAMS">
            <summary>
            Win32 NCCALCSIZE_PARAMS structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.NCCALCSIZE_PARAMS.rectProposed">
            <summary>
            rectProposed field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.NCCALCSIZE_PARAMS.rectBeforeMove">
            <summary>
            rectBeforeMove field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.NCCALCSIZE_PARAMS.rectClientBeforeMove">
            <summary>
            rectClientBeforeMove field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.NCCALCSIZE_PARAMS.lpPos">
            <summary>
            lpPos field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.WINDOWPOS">
            <summary>
            Win32 NCCALCSIZWINDOWPOSE_PARAMS structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.hwnd">
            <summary>
            hwnd field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.hwndInsertAfter">
            <summary>
            hwndInsertAfter field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.x">
            <summary>
            x position field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.y">
            <summary>
            y position field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.cx">
            <summary>
            cx width field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.cy">
            <summary>
            cy height field of structure
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Win32.WINDOWPOS.flags">
            <summary>
            flags field of structure
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContentSolid">
            <summary>
            Manager for redocking of content instance and using Solid as the feedback.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContentZones">
            <summary>
            Manager for redocking of content instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentZones class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentZones class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentZones class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.InternalConstruct(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.RedockerContent.Source,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,Crownwood.DotNetMagic.Docking.FloatingForm,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Point)">
            <summary>
            Perform initialization.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="source">Type of source.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="ff">Floating form source.</param>
            <param name="dm">DockingManager instance.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.EnterTrackingMode">
            <summary>
            Enter hot tracking mode.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.ExitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Exit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.QuitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Quit hot tracking mode.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a change in mouse position.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentZones.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process a mouse button up call.
            </summary>
            <param name="e">Mouse event information that triggered call.</param>
            <returns>true if redocking action occured;false otherwise.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.RedockerContentZones.DragFeedback">
            <summary>
            Gets and sets the feedback class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentSolid.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentSolid class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentSolid.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentSolid class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentSolid.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentSolid class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentSolid.InternalConstruct(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.RedockerContent.Source,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,Crownwood.DotNetMagic.Docking.FloatingForm,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Point)">
            <summary>
            Perform initialization.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="source">Type of source.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="ff">Floating form source.</param>
            <param name="dm">DockingManager instance.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.WindowDetailCollection">
            <summary>
            Provides a collection container for WindowDetail instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.Add(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Adds the specified WindowDetail object to the collection.
            </summary>
            <param name="value">The WindowDetail object to add to the collection.</param>
            <returns>The WindowDetail object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.AddRange(Crownwood.DotNetMagic.Docking.WindowDetail[])">
            <summary>
            Adds an array of WindowDetail objects to the collection.
            </summary>
            <param name="values">An array of WindowDetail objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.Remove(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Removes a WindowDetail from the collection.
            </summary>
            <param name="value">A WindowDetail to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Inserts a WindowDetail instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the WindowDetail.</param>
            <param name="value">The WindowDetail object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.Contains(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Determines whether a WindowDetail is in the collection.
            </summary>
            <param name="value">The WindowDetail to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.WindowDetailCollection.IndexOf(Crownwood.DotNetMagic.Docking.WindowDetail)">
            <summary>
            Returns the index of the first occurrence of the given WindowDetail.
            </summary>
            <param name="value">The WindowDetail to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.WindowDetailCollection.Item(System.Int32)">
            <summary>
            Gets the WindowDetail at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.WizardPage">
            <summary>
            Represents a single wizard page.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPage.#ctor">
            <summary>
            Initializes a new instance of the WizardPage class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPage.ResetVisible">
            <summary>
            Resets the value of the Visible property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPage.OnFullPageChanged(System.EventArgs)">
            <summary>
            Raises the FullPageChanged event.
            </summary>
            <param name="e">An EventArgs structures that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPage.OnSubTitleChanged(System.EventArgs)">
            <summary>
            Raises the SubTitleChanged event.
            </summary>
            <param name="e">An EventArgs structures that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardPage.OnCaptionTitleChanged(System.EventArgs)">
            <summary>
            Raises the CaptionTitleChanged event.
            </summary>
            <param name="e">An EventArgs structures that contains the event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardPage.FullPageChanged">
            <summary>
            Occurs when the FullPage property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardPage.SubTitleChanged">
            <summary>
            Occurs when the SubTitle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardPage.CaptionTitleChanged">
            <summary>
            Occurs when the CaptionTitle property changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPage.Visible">
            <summary>
            Gets or sets a value indicating whether the control is displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPage.FullPage">
            <summary>
            Gets and sets a value indicating if the page occupies the whole control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPage.SubTitle">
            <summary>
            Gets and sets text string to be used as the subtitle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardPage.CaptionTitle">
            <summary>
            Gets and sets text string to be used as the caption title.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeCollectionDialog">
            <summary>
            Form used to edit a node collection.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionDialog.#ctor">
            <summary>
            Initializes a new instance of the NodeCollectionDialog class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionDialog.#ctor(Crownwood.DotNetMagic.Controls.NodeCollection)">
            <summary>
            Initializes a new instance of the NodeCollectionDialog class.
            </summary>
            <param name="original">Original Nodes to be edited.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionDialog.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged; false to release only unmanaged. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollectionDialog.Nodes">
            <summary>
            Gets the collection of edited nodes.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.DefaultNodeVC">
            <summary>
            Implements the default drawing implementation for a Node.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.INodeVC">
            <summary>
            Interface required to draw individual Node instance.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.Initialize(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is attached to the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.Detaching(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is about to be detached from the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.MeasureSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics)">
            <summary>
            Calculate and return the size needed for drawing a Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Size instance with drawing size required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.SetPosition(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Defines the top left position of the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="topLeft">Top left position of the node.</param>
            <returns>Bounding rectangle created for node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.SetChildBounds(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle)">
            <summary>
            Defines the bounding rectangle of the node and all children as well.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="bounds">Bounding rectangle of collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.IntersectsWith(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Find if the provided rectangle intersects the bounds of the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="rectangle">Rectangle to compare against.</param>
            <param name="recurse">Compare against children as well.</param>
            <returns>True if intersecting; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draw the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="leftOffset">Starting left offset for drawing.</param>
            <param name="rightOffset">Right offset for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.MouseDown(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a mouse down on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="button">Button that is pressed down.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.MouseUp(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a mouse up on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="button">Button that is going up.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Process a double click on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.NodeExpandedChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the expanded state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.NodeVisibleChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the visible state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.NodeSelectableChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the selectable state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.NodeCheckStateChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the CheckState of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.NodeRemoving(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that specified node is being removed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.CanSelectNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is the specified Node allowed to be selected?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>true if node is allowed to be selected; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.CanCollapseNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Is the specified Node allowed to be collapsed?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="key">True if keyboard action.</param>
            <param name="mouse">True if mouse action.</param>
            <returns>true if node is allowed to be collapsed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.CanExpandNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Is the specified Node allowed to be expanded?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="key">True if keyboard action.</param>
            <param name="mouse">True if mouse action.</param>
            <returns>true if node is allowed to be collapsed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.CanAutoEdit(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is AutoEdit enabled for this Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.CanToolTip(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Gets a value indicating if tooltips are allowed for this node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>True if allowed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.BeginEditNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Initiate the editing of the Node label.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.SizeChanged(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Notification that the size of the control has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragOverNodeFromPoint(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Point)">
            <summary>
            Find the displayed node for the given point.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="pt">Point in Client coordinates.</param>
            <returns>node reference or null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragEnter(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that dragging has entered the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragOver(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user is dragging over the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragLeave(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that dragging has left the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragDrop(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user has dropped onto specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.DragHover(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that user is hovering over a drag Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.PostDrawNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Final change to perform drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.PostCalculateNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Collections.ArrayList)">
            <summary>
            Called once all the nodes have been calculated ready for display.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.GetNodeFont(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Recover the Font used to draw the text in normal mode.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Font used to draw text in normal mode.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.INodeVC.GetTextRectangle(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Get the rectangle that represents drawing area for text.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Client spaced rectangle for the text area.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.#cctor">
            <summary>
            Initialize class wide fields.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.Initialize(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is attached to the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.Detaching(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is about to be detached from the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.IsRootNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Helper function that indicates if given node is at the root.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.MeasureSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics)">
            <summary>
            Calculate and return the size needed for drawing a Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Size instance with drawing size required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.SetPosition(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Defines the top left position of the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="topLeft">Top left position of the node.</param>
            <returns>Bounding rectangle created for node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.SetChildBounds(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle)">
            <summary>
            Defines the bounding rectangle of the node and all children as well.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="bounds">Bounding rectangle of collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.IntersectsWith(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Find if the provided rectangle intersects the bounds of the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="rectangle">Rectangle to compare against.</param>
            <param name="recurse">Compare against children as well.</param>
            <returns>True if intersecting; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draw the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="leftOffset">Starting left offset for drawing.</param>
            <param name="rightOffset">Right offset for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DrawCheck(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the appropriate checkbox at the specified position.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="drawRect">Bounds of checkbox drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DrawImage(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the appropriate image at the specified position.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="x">X position for drawing.</param>
            <param name="y">Y position for drawing.</param>
            <param name="width">Width allowed for drawing.</param>
            <param name="height">Height allowed for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DrawText(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw the appropriate text in provided rectangle.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw text inside.</param>
            <param name="hotLeft">Left position for drawing as hot tracked.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DrawFocusIndication(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw focus indication around the provided rectangle.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw text inside.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetCheckStates(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Gets the required check states for this Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Valid check states for node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetTextSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics)">
            <summary>
            Get the size of any text that needs to be displayed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>new Size instance; Size.Empty if no image required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetCheckSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Get the size of any checkbox that needs to be displayed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>new Size instance; Size.Empty if no checkbox required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetImageSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Get the size of any image that needs to be displayed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>new Size instance; Size.Empty if no image required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetCheckRectangle(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Size,System.Drawing.Rectangle)">
            <summary>
            Gets the rectangle occupied by checkbox within the client rectangle.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="checkSize">Size of the checkbox.</param>
            <param name="client">Bounds of the node client.</param>
            <returns>Bounds of the checkbox.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanExpandOnClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Return a value indicating of the given node should be expanded on a single click.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Expand action to be taken.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanAutoEdit(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is AutoEdit enabled for this Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanToolTip(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Gets a value indicating if tooltips are allowed for this node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>True if allowed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanExpandOnDoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Return a value indicating of the given node should be expanded on a double click.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Expand action to be taken.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.MouseDown(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a mouse down on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="button">Button that is pressed down.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.MouseUp(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Process a mouse up on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="button">Button that is going up.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Point)">
            <summary>
            Process a double click on the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="pt">Point being pressed down.</param>
            <returns>true if the point was processed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.ClickPointInNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Returns a value indicating if the point is inside the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="rect">Rectangle of node area.</param>
            <param name="pt">Point where the mouse is clicked.</param>
            <returns>true if inside area; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.NodeExpandedChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the expanded state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.NodeVisibleChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the visible state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.NodeSelectableChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the selectable state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.NodeCheckStateChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the CheckState of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.NodeRemoving(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that specified node is being removed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanSelectNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is the specified Node allowed to be selected?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>true if node is allowed to be selected; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanCollapseNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Is the specified Node allowed to be collapsed?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="key">True if keyboard action.</param>
            <param name="mouse">True if mouse action.</param>
            <returns>true if node is allowed to be collapsed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.CanExpandNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Is the specified Node allowed to be expanded?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="key">True if keyboard action.</param>
            <param name="mouse">True if mouse action.</param>
            <returns>true if node is allowed to be collapsed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.BeginEditNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Initiate the editing of the Node label.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetTextRectangle(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Get the rectangle that represents drawing area for text.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.SizeChanged(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Notification that the size of the control has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragOverNodeFromPoint(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Point)">
            <summary>
            Find the displayed node for the given point.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="pt">Point in Client coordinates.</param>
            <returns>node reference or null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragEnter(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that dragging has entered the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragOver(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user is dragging over the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragLeave(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that dragging has left the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragDrop(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user has dropped onto specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.DragHover(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that user is hovering over a drag Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.PostDrawNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Final change to perform drawing.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.PostCalculateNodes(Crownwood.DotNetMagic.Controls.TreeControl,System.Collections.ArrayList)">
            <summary>
            Called once all the nodes have been calculated ready for display.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="displayNodes">Collection of nodes in display.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.DefaultNodeVC.GetNodeFont(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Recover the Font used to draw the text in normal mode.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Font used to draw text in normal mode.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabPageCollection">
            <summary>
            Provides a collection container for TabPage instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.Add(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Adds the specified TabPage object to the collection.
            </summary>
            <param name="value">The TabPage object to add to the collection.</param>
            <returns>The TabPage object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.AddRange(Crownwood.DotNetMagic.Controls.TabPage[])">
            <summary>
            Adds an array of TabPage objects to the collection.
            </summary>
            <param name="values">An array of TabPage objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.Remove(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Removes a TabPage from the collection.
            </summary>
            <param name="value">A TabPage to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Inserts a TabPage instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the TabPage.</param>
            <param name="value">The TabPage object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.Contains(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Determines whether a TabPage is in the collection.
            </summary>
            <param name="value">The TabPage to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabPageCollection.IndexOf(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Returns the index of the first occurrence of the given TabPage.
            </summary>
            <param name="value">The TabPage to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPageCollection.Item(System.Int32)">
            <summary>
            Gets the TabPage at the specified index.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabPageCollection.Item(System.String)">
            <summary>
            Gets the TabPage with the specified title.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ConversionHelper">
            <summary>
            Collection of static helper methods to convert between types.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.SizeToString(System.Drawing.Size)">
            <summary>
            Convert a Size instance into a string representation.
            </summary>
            <param name="size">Size instance to be converted.</param>
            <returns>String representation of the Size instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.StringToSize(System.String)">
            <summary>
            Convert a string representation to a Size instance.
            </summary>
            <param name="str">String representation of the Size instance.</param>
            <returns>Size instance created from string representation.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.PointToString(System.Drawing.Point)">
            <summary>
            Convert a Point instance into a string representation.
            </summary>
            <param name="point">Point instance to be converted.</param>
            <returns>String representation of the Point instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.StringToPoint(System.String)">
            <summary>
            Convert a string representation to a Point instance.
            </summary>
            <param name="str">String representation of the Point instance.</param>
            <returns>Point instance created from string representation.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.DecimalToString(System.Decimal)">
            <summary>
            Convert a Decimal value into a string representation.
            </summary>
            <param name="value">Decimal value to be converted.</param>
            <returns>String representation of the Decimal instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ConversionHelper.StringToDecimal(System.String)">
            <summary>
            Convert a string representation to a Decimal instance.
            </summary>
            <param name="str">String representation of the Decimal instance.</param>
            <returns>Decimal instance created from string representation.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable">
            <summary>
            Provide a fixed set of blue professional colors.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonCheckedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonCheckedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonCheckedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonCheckedHighlight">
            <summary>
            Gets the solid color used when the button is checked.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonCheckedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonCheckedHighlight.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedBorder">
            <summary>
            Gets the border color to use with the ButtonPressedGradientBegin, ButtonPressedGradientMiddle, and ButtonPressedGradientEnd colors.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedHighlight">
            <summary>
            Gets the solid color used when the button is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonPressedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonPressedHighlight.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedBorder">
            <summary>
            Gets the border color to use with the ButtonSelectedGradientBegin, ButtonSelectedGradientMiddle, and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedHighlight">
            <summary>
            Gets the solid color used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.CheckBackground">
            <summary>
            Gets the solid color to use when the button is checked and gradients are being used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.CheckPressedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuBorder">
            <summary>
            Gets the color that is the border color to use on a MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemBorder">
            <summary>
            Gets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemSelected">
            <summary>
            Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ProfessionalBlueColorTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.MediaPlayerColorTable">
            <summary>
            Provide Media Player Theme colors
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.#ctor(Crownwood.DotNetMagic.Common.MediaPlayerTheme)">
            <summary>
            Initialize a new instance of the MediaPlayerColorTable class.
            </summary>
            <param name="theme">Initial theme.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SoftBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Soft background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.LightBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Light background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.DarkBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Dark background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.EnhancedBackground(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the enhanced background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Enhanced background color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.BorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the enhanced background theme color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Border color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SepLightColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the light separator color.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Light separator color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SepDarkColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the dark separator color.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Dark separator color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TabInactiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the text color for an inactive tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Inactive text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TabActiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the text color for an active tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Active text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TabHighlightTextColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the text color for tab that is highlighted.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Active text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TabButtonColor(Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Controls.MediaPlayerStyle)">
            <summary>
            Gets the text color for an inactive tab control header.
            </summary>
            <param name="style">Source style.</param>
            <param name="office">Office style.</param>
            <returns>Inactive text color.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light active title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark active title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleInactiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light inactive title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleInactiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark inactive title color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleActiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the active title text color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleInactiveTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the inactive title text color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleBorderColorDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the border color around a sliding title or title control.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TitleBorderColorLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the border color around a sliding title or title control.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.StatusBarGripDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark color used to draw a status bar grip.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.StatusBarGripLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light color used to draw a status bar grip.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.StatusBarText(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of text on the status bar.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.IndicatorsActive(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the active color of dragging indicators.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.IndicatorsInactive(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the inactive color of dragging indicators.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SelectedActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active light color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SelectedActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active dark color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.CheckedActiveLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active light color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.CheckedActiveDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the selected active dark color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TooltipTextColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of the tooltip text.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TooltipBorderColor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the color of the tooltip border.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TooltipLight(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the light tooltip color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.TooltipDark(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the dark tooltip color.
            </summary>
            <param name="style">Source style.</param>
            <returns>Color</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedBorder">
            <summary>
            Gets the border color for a button being pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedHighlight">
            <summary>
            Gets the highlight background for a pressed button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonPressedHighlightBorder">
            <summary>
            Gets the highlight border for a pressed button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedBorder">
            <summary>
            Gets the border color for a button being selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedHighlight">
            <summary>
            Gets the highlight background for a selected button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonCheckedGradientBegin">
            <summary>
            Gets the background starting color for a checked button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonCheckedGradientMiddle">
            <summary>
            Gets the background middle color for a checked button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonCheckedGradientEnd">
            <summary>
            Gets the background ending color for a checked button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonCheckedHighlight">
            <summary>
            Gets the highlight background for a checked button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ButtonCheckedHighlightBorder">
            <summary>
            Gets the highlight border for a checked button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.CheckPressedBackground">
            <summary>
            Get background of a pressed check mark area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.CheckSelectedBackground">
            <summary>
            Get background of a selected check mark area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color for the context menu margin.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginGradientEnd">
            <summary>
            Gets the ending color for the context menu margin.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the ending color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemBorder">
            <summary>
            Gets the border color for around the menu item.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemSelected">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.MediaPlayerColorTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.GroupNodeVC">
            <summary>
            Implements the group drawing implementation for a Node.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.Initialize(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is attached to the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.Detaching(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Called when the VC is about to be detached from the control.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.MeasureSize(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics)">
            <summary>
            Calculate and return the size needed for drawing a Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <returns>Size instance with drawing size required.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.IntersectsWith(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Find if the provided rectangle intersects the bounds of the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="rectangle">Rectangle to compare against.</param>
            <param name="recurse">Compare against children as well.</param>
            <returns>True if intersecting; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.Draw(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draw the Node instance.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="clipRectangle">Clipping rectangle used when drawing.</param>
            <param name="leftOffset">Starting left offset for drawing.</param>
            <param name="rightOffset">Right offset for drawing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetGroupColouringOffice(Crownwood.DotNetMagic.Controls.TreeControl,System.Boolean,System.Boolean,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Calculate the correct colors to use for the Office2003 group coloring.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="selectedNode">Is the node is selected state.</param>
            <param name="hotNode">Is the node being hot tracked.</param>
            <param name="top">Returned top color.</param>
            <param name="bottom">Returned bottom color.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawFocusIndication(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw focus indication around the provided rectangle.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw text inside.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawGroupBorder(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border around the group node in appropriate style.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle that represents the node drawing area.</param>
            <returns>The area inside the group border.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawImageBox(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw just the image box for a group node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw image box inside.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawImageInsideImageBox(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the optional image inside the image box.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw image box inside.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawText(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw the appropriate text in provided rectangle.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw text inside.</param>
            <param name="hotLeft">Left position for drawing as hot tracked.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DrawArrow(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw just the arrow for a group node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="g">Reference to Graphics instance to draw into.</param>
            <param name="rect">Rectangle to draw image box inside.</param>
            <param name="color">Color to draw arrow with.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetCheckStates(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Gets the required check states for this Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Valid check states for node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.ClickPointInNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Returns a value indicating of the point is inside the node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="rect">Rectangle of node area.</param>
            <param name="pt">Point where the mouse is clicked.</param>
            <returns>true if inside area; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.CanSelectNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is the specified Node allowed to be selected?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>true if node is allowed to be selected; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.CanCollapseNode(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Is the specified Node allowed to be collapsed?
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="key">True if keyboard action.</param>
            <param name="mouse">True if mouse action.</param>
            <returns>true if node is allowed to be collapsed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.CanExpandOnClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Return a value indicating of the given node should be expanded on a single click.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Expand action to be taken.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.CanAutoEdit(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Is AutoEdit enabled for this Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.CanExpandOnDoubleClick(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Return a value indicating of the given node should be expanded on a double click.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Expand action to be taken.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.NodeExpandedChanged(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that the expanded state of a node has changed.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragOverNodeFromPoint(Crownwood.DotNetMagic.Controls.TreeControl,System.Drawing.Point)">
            <summary>
            Find the displayed node for the given point.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="pt">Point in Client coordinates.</param>
            <returns>node reference or null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragEnter(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that dragging has entered the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragOver(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user is dragging over the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragLeave(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that dragging has left the specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragDrop(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragEventArgs)">
            <summary>
            Notification that user has dropped onto specified Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="drgevent">Drag event information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.DragHover(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Notification that user is hovering over a drag Node.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetNodeFont(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Recover the Font used to draw the text in normal mode.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns>Font used to draw text in normal mode.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetTextRectangle(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Get the rectangle that represents drawing area for text.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetForeColor(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Get the foreground color to use based on node and tree settings.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="hotNode">Is this node being hot tracked.</param>
            <param name="selectedNode">Is this node selected.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.GroupNodeVC.GetBackColor(Crownwood.DotNetMagic.Controls.TreeControl,Crownwood.DotNetMagic.Controls.Node,System.Boolean,System.Boolean)">
            <summary>
            Get the background color to use based on node and tree settings.
            </summary>
            <param name="tc">Reference to owning TreeControl.</param>
            <param name="n">Reference to Node instance.</param>
            <param name="hotNode">Is this node being hot tracked.</param>
            <param name="selectedNode">Is this node selected.</param>
            <returns></returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LabelControlEventArgs">
            <summary>
            Provide TextBox data for an event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.LabelControlEventArgs.#ctor(System.Windows.Forms.TextBox)">
            <summary>
            Initialize a new instance of the LabelControlEventArgs class.
            </summary>
            <param name="textBox">Instance about to be edited.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.LabelControlEventArgs.TextBox">
            <summary>
            Gets access to the TextBox used for label editing.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeEventArgs">
            <summary>
            Provides Node data for event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeEventArgs.#ctor(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Initialize a new instance of the =NodeEventArgs class.
            </summary>
            <param name="node">Node instance associated with event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeEventArgs.Node">
            <summary>
            Gets the Node instance associated with event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.CancelNodeEventArgs">
            <summary>
            Provides Node data for a cancelable event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.CancelNodeEventArgs.#ctor(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Initialize a new instance of the CancelNodeEventArgs class.
            </summary>
            <param name="node">Node instance associated with event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.CancelNodeEventArgs.Node">
            <summary>
            Gets the Node instance associated with event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LabelEditEventArgs">
            <summary>
            Provides Node and Label text data for a cancelable event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.LabelEditEventArgs.#ctor(Crownwood.DotNetMagic.Controls.Node,System.String)">
            <summary>
            Initialize a new instance of the LabelEditEventArgs class.
            </summary>
            <param name="node">Node instance associated with event.</param>
            <param name="label">Initial label to use when editing.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.LabelEditEventArgs.Label">
            <summary>
            Gets and sets the initial label text for editing.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StartDragEventArgs">
            <summary>
            Provides Node and drag effects values for a cancelable event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StartDragEventArgs.#ctor(Crownwood.DotNetMagic.Controls.Node,System.Windows.Forms.DragDropEffects)">
            <summary>
            Initialize a new instance of the LabelEditEventArgs class.
            </summary>
            <param name="node">Node instance associated with event.</param>
            <param name="effect">DragDropEffects for operation.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StartDragEventArgs.Effect">
            <summary>
            Gets and sets the initial label text for editing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StartDragEventArgs.Object">
            <summary>
            Gets and sets the object to be drag and dropped.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LabelControlEventHandler">
            <summary>
            Signature of handler used for label editing.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeEventHandler">
            <summary>
            Signature of handler used for node event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.CancelNodeEventHandler">
            <summary>
            Signature of handler used for cancelable node event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.LabelEditEventHandler">
            <summary>
            Signature of handler used for cancelable label editing event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StartDragEventHandler">
            <summary>
            Signature of handler used for cancelable attempt to start dragging a node.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeDragDropEventHandler">
            <summary>
            Signature of handler for Node specific drag and drop events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetArea">
            <summary>
            Represents a target area for dragging and dropping.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetArea.FindTarget(System.Drawing.Point,Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos">Mouse position.</param>
            <param name="target">Incoming target.</param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetArea.Quit">
            <summary>
            Dragging operation has finished.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetAreaSides">
            <summary>
            Represents a target area for dragging and dropping.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaSides.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the TargetArea class.
            </summary>
            <param name="squares">Showing as squares or diamonds.</param>
            <param name="host">Hosting tabbed groups instance.</param>
            <param name="leaf">Leaf that is being dragged.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaSides.FindTarget(System.Drawing.Point,Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos">Mouse position.</param>
            <param name="target">Incoming target.</param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaSides.Quit">
            <summary>
            Dragging operation has finished.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetAreaLeaf">
            <summary>
            Represents a target area for dragging and dropping.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaLeaf.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the TargetAreaLeaf class.
            </summary>
            <param name="squares">Showing as squares or diamonds.</param>
            <param name="source">Leaf that is being dragged.</param>
            <param name="leaf">Leaf that is a potential target.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaLeaf.FindTarget(System.Drawing.Point,Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos">Mouse position.</param>
            <param name="target">Incoming target.</param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaLeaf.Quit">
            <summary>
            Dragging operation has finished.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetAreaLeaf.AllowAction">
            <summary>
            Are any actions allowed.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetAreaCollection">
            <summary>
            Provides a collection container for TargetArea instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.Add(Crownwood.DotNetMagic.Controls.TargetArea)">
            <summary>
            Adds the specified TargetArea object to the collection.
            </summary>
            <param name="value">The TargetArea object to add to the collection.</param>
            <returns>The TargetArea object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.AddRange(Crownwood.DotNetMagic.Controls.TargetArea[])">
            <summary>
            Adds an array of TargetArea objects to the collection.
            </summary>
            <param name="values">An array of TargetArea objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.Remove(Crownwood.DotNetMagic.Controls.TargetArea)">
            <summary>
            Removes a TargetArea from the collection.
            </summary>
            <param name="value">A TargetArea to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.TargetArea)">
            <summary>
            Inserts a TargetArea instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the TargetArea.</param>
            <param name="value">The TargetArea object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.Contains(Crownwood.DotNetMagic.Controls.TargetArea)">
            <summary>
            Determines whether a TargetArea is in the collection.
            </summary>
            <param name="value">The TargetArea to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetAreaCollection.IndexOf(Crownwood.DotNetMagic.Controls.TargetArea)">
            <summary>
            Returns the index of the first occurrence of the given TargetArea.
            </summary>
            <param name="value">The TargetArea to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TargetAreaCollection.Item(System.Int32)">
            <summary>
            Gets the TargetArea at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ZoneHelper">
            <summary>
            Collection of helper routines for dealing with Zone instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneHelper.Contents(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Find collection of content instances inside a Zone.
            </summary>
            <param name="z">Zone to use.</param>
            <returns>Collection of content.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneHelper.ContentNames(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Find collection of content names inside a Zone.
            </summary>
            <param name="z">Zone to use.</param>
            <returns>Collection of content names.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneHelper.ContentNamesInPriority(Crownwood.DotNetMagic.Docking.Zone,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Find collection of content names inside a Zone in order of priority.
            </summary>
            <param name="z">Zone to use.</param>
            <param name="c">Content to use as basis of priority.</param>
            <returns>Collection of content names.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager">
            <summary>
            Manage a collection of docking content.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.#ctor(System.Windows.Forms.ScrollableControl,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initializes a new instance of the DockingManager class.
            </summary>
            <param name="container">Control to manage.</param>
            <param name="vs">Visual style required.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.#ctor(System.Windows.Forms.ScrollableControl,Crownwood.DotNetMagic.Common.VisualStyle,Crownwood.DotNetMagic.Docking.DockingFactory)">
            <summary>
            Initializes a new instance of the DockingManager class.
            </summary>
            <param name="container">Control to manage.</param>
            <param name="vs">Visual style required.</param>
            <param name="factory">Factory used to create control and form instanced.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.Finalize">
            <summary>
            Class destructor.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ResetColors">
            <summary>
            Reset the colors used by the docking manager.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ToggleContentAutoHide(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Invert the current auto hidden state of the content.
            </summary>
            <param name="c">Content to invert.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ShowContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Make the content visible.
            </summary>
            <param name="c">Content to make visible.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ShowAllContents">
            <summary>
            Make all content visible.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.HideContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Make the content invisible.
            </summary>
            <param name="c">Content to make invisible.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.HideContent(Crownwood.DotNetMagic.Docking.Content,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Make the content invisible.
            </summary>
            <param name="c">Content to make invisible.</param>
            <param name="record">Should record its position.</param>
            <param name="reorder">Should move to start of content collection.</param>
            <param name="closeOnHide">Should the CloseOnHide property be honored.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.HideAllContents">
            <summary>
            Make all content invisible.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.HideAllContents(System.Boolean)">
            <summary>
            Make all content invisible.
            </summary>
            <param name="closeOnHide">Should close on hide be honored.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.CreateWindowForContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Create a style specific window to hold the given content.
            </summary>
            <param name="c">Content to create window for.</param>
            <returns>New window instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.CreateWindowForContent(Crownwood.DotNetMagic.Docking.Content,System.EventHandler,System.EventHandler,System.EventHandler,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Create a style specific window to hold the given content.
            </summary>
            <param name="c">Content to create window for.</param>
            <param name="contentClose">Delegate to handle closing of content.</param>
            <param name="restore">Delegate to handle restoring of content.</param>
            <param name="invertAutoHide">Delegate to handle inverting auto hidden state.</param>
            <param name="showContextMenu">Delegate to handle context menu.</param>
            <returns>New window instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.CreateZoneForContent(Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Create a new zone instance for given state.
            </summary>
            <param name="zoneState">State of new zone.</param>
            <returns>New zone instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged; false to release only unmanaged. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.CreateZoneForContent(Crownwood.DotNetMagic.Docking.State,System.Windows.Forms.ScrollableControl)">
            <summary>
            Create a new zone instance for given state.
            </summary>
            <param name="zoneState">State of new zone.</param>
            <param name="destination">Container to attach zone into.</param>
            <returns>New zone instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SetHiddenState(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Set new content with given initial state but hidden.
            </summary>
            <param name="c">Content to setup.</param>
            <param name="newState">State to setup content in.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.AddContentWithState(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.State)">
            <summary>
            Create and show new content with given initial state.
            </summary>
            <param name="c">Content to show.</param>
            <param name="newState">State to show content in.</param>
            <returns>New window content instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.AddContentToWindowContent(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent)">
            <summary>
            Add new content to an existing window.
            </summary>
            <param name="c">Content to be added.</param>
            <param name="wc">Existing window to add into.</param>
            <returns>Existing window added into.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.AddContentToZone(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.Zone,System.Int32)">
            <summary>
            Create and show a new window inside an existing zone.
            </summary>
            <param name="c">Content to show.</param>
            <param name="z">Zone to add window to.</param>
            <param name="index">Index position for insertion.</param>
            <returns>New window instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.InnerResizeRectangle(System.Windows.Forms.Control)">
            <summary>
            Find remaining inner space left over when all docking windows are taken into account.
            </summary>
            <param name="source">Extra control to take into account.</param>
            <returns>Inner rectangle.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ReorderZoneToInnerMost(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Reposition zone to be the innermost control.
            </summary>
            <param name="zone">Zone to reposition.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.ReorderZoneToOuterMost(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Reposition zone to be the outermost control.
            </summary>
            <param name="zone">Zone to reposition.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.OuterControlIndex">
            <summary>
            Find the insertion index to maintain the OuterControl property.
            </summary>
            <returns>Insertion index.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.RemoveShowingAutoHideWindows">
            <summary>
            Retract any showing auto hidden windows.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.BringAutoHideIntoView(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Make the required content inside an auto hidden window the foremost.
            </summary>
            <param name="c">Content to bring to the front.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToArray">
            <summary>
            Saves layout information into an array of bytes using Encoding.Unicode.
            </summary>
            <returns>Array of bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToArray(System.Text.Encoding)">
            <summary>
            Saves layout information into an array of bytes using caller provided encoding object.
            </summary>
            <param name="encoding">Encoding object.</param>
            <returns>Array of bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToFile(System.String)">
            <summary>
            Saves layout information into a named file using Encoding.Unicode.
            </summary>
            <param name="filename">Filename to create.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToFile(System.String,System.Text.Encoding)">
            <summary>
            Saves layout information into a named file using caller provided encoding object.
            </summary>
            <param name="filename">Filename to create.</param>
            <param name="encoding">Encoding object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves layout information into a stream object using caller provided encoding object.
            </summary>
            <param name="stream">Destination stream for saving.</param>
            <param name="encoding">Encoding object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.SaveConfigToXml(System.Xml.XmlTextWriter)">
            <summary>
            Saves layout information using provided xml writer object.
            </summary>
            <param name="xmlOut">Xml writer object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.LoadConfigFromArray(System.Byte[])">
            <summary>
            Loads layout information from given array of bytes.
            </summary>
            <param name="buffer">Array of byes.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.LoadConfigFromFile(System.String)">
            <summary>
            Loads layout information from given filename.
            </summary>
            <param name="filename">Filename to open.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.LoadConfigFromStream(System.IO.Stream)">
            <summary>
            Loads layout information from given stream object.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.LoadConfigFromXml(System.Xml.XmlTextReader)">
            <summary>
            Loads layout information using provided xml reader object.
            </summary>
            <param name="xmlIn">Reader for loading config.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.DockingManager.AutoHideContents(Crownwood.DotNetMagic.Docking.ContentCollection,Crownwood.DotNetMagic.Docking.State,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Convert a set of contents into an auto hidden group on one of the docking edges.
            </summary>
            <param name="cc">Collection of content instances.</param>
            <param name="state">Docking edge to become attached to.</param>
            <param name="current">Which content should become the selected one.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContentShown">
            <summary>
            Occurs when a content is shown.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContentHidden">
            <summary>
            Occurs just after a content has been hidden.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContentHiding">
            <summary>
            Occurs just before a content is being hidden.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContentAutoHideOpening">
            <summary>
            Occurs when a content is about to becoming shown in auto hide mode.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContentAutoHideClosed">
            <summary>
            Occurs when a content has become invisible in auto hide mode.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.ContextMenu">
            <summary>
            Occurs when a context menu is required.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.TabControlCreated">
            <summary>
            Occurs when a new tab control instance is created.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.SaveCustomConfig">
            <summary>
            Occurs when a configuration is being saved.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.LoadCustomConfig">
            <summary>
            Occurs when a configuration is being loaded.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.FloatingFormActivated">
            <summary>
            Occurs when a floating form become active.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.WindowActivated">
            <summary>
            Occurs when a window has become active.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.WindowDeactivated">
            <summary>
            Occurs when a window has become inactive.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.WindowDetailActivated">
            <summary>
            Occurs when a window details has become active.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.WindowDetailDeactivated">
            <summary>
            Occurs when a window details has become inactive.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.DoubleClickDock">
            <summary>
            Occurs when a double click has caused docking changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.LayoutChanged">
            <summary>
            Occurs when the layout is changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.DockingManager.DoubleClickFloatingTitle">
            <summary>
            Occurs when the user double clicks the floating form title area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.Container">
            <summary>
            Gets the control this docking manager is attached to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.Factory">
            <summary>
            Gets and sets the factory used to create controls and forms.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.InnerControl">
            <summary>
            Gets and sets the control inside the edge docked windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.OuterControl">
            <summary>
            Gets and sets the first control outside the edge docked windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.Contents">
            <summary>
            Gets and sets the collection of content instances.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AllowRedocking">
            <summary>
            Gets and sets a value indicating if content can be redocked by the user.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AllowResize">
            <summary>
            Gets and sets a value indicating if resizing of docking windows is allowed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AllowSideCaptions">
            <summary>
            Gets and sets a value indicating if captions are allowed to be placed at sides.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.StubsShowAll">
            <summary>
            Gets and sets a value indicating if tab stubs show text for all entries or just selected one.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AllowTabbed">
            <summary>
            Gets and sets a value indicating if a tabbed appearance is allowed for docked content.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ShowUnmatchedOnLoad">
            <summary>
            Should content instances not found in the loading data be shown or hidde.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AllowFloating">
            <summary>
            Gets and sets a value indicating if content are allowed in floating state.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.FloatingInTaskBar">
            <summary>
            Gets and sets a value indicating if floating window should appear in taskbar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.FloatingTaskBarIcon">
            <summary>
            Gets and sets the icon to use when showing a floating window in the taskbar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ZoneMinMax">
            <summary>
            Gets and sets a value indicating if zones are allowed to maximize windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.InsideFill">
            <summary>
            Gets and sets a value indicating is the inside area should also be filled by edge docked windows.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.AutoResize">
            <summary>
            Gets and sets a value indicating is edge docked windows should resize themselves automatically.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.InnerMinimum">
            <summary>
            Gets and sets the minimum size we allow for the inner control area.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.Style">
            <summary>
            Gets the visual style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.FeedbackStyle">
            <summary>
            Gets the feedback style used when dragging.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ResizeBarVector">
            <summary>
            Gets and sets the size of resize bar separators.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.BackColor">
            <summary>
            Gets and sets the background color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ActiveColor">
            <summary>
            Gets and sets the active color used in title bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ActiveTextColor">
            <summary>
            Gets and sets the text color used in active title bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.InactiveTextColor">
            <summary>
            Gets and sets the inactive text color using in title bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.ResizeBarColor">
            <summary>
            Gets and sets the color of resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.CaptionFont">
            <summary>
            Gets and sets the font used in title bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.TabControlFont">
            <summary>
            Gets and sets the font used tab controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.PlainTabBorder">
            <summary>
            Gets and sets a value indicating if the tab control in plain style should have a plain border.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.TextHideAll">
            <summary>
            Sets and gets the text to use for the 'Hide All' context menu item.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.DockingManager.TextShowAll">
            <summary>
            Sets and gets the text to use for the 'Hide All' context menu item.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.ContentHandler">
            <summary>
            Represents the method that will provide content information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.ContentHidingHandler">
            <summary>
            Represents the method that will provide content hiding information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.ContextMenuHandler">
            <summary>
            Represents the method that will provide context menu information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.TabControlCreatedHandler">
            <summary>
            Represents the method that will provide tab control created information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.SaveCustomConfigHandler">
            <summary>
            Represents the method that will provide save information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.LoadCustomConfigHandler">
            <summary>
            Represents the method that will provide load information.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.FloatingFormHandler">
            <summary>
            Represents the method that handle floating form activation/inactivation.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.WindowHandler">
            <summary>
            Represents the method that handle window activation/inactivation.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.WindowDetailHandler">
            <summary>
            Represents the method that handle window details activation/inactivation.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.DockingManager.DoubleClickDockHandler">
            <summary>
            Represents the method that handles a double clicked caused docking change.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.State">
            <summary>
            Specifies the current docking state of a content.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.State.Floating">
            <summary>
            Specifies the content is floating.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.State.DockTop">
            <summary>
            Specifies the content is docked against top edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.State.DockBottom">
            <summary>
            Specifies the content is docked against bottom edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.State.DockLeft">
            <summary>
            Specifies the content is docked against left edge.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.State.DockRight">
            <summary>
            Specifies the content is docked against right edge.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ContextHandler">
            <summary>
            Represents the method that will handle a context menu request.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.WizardControlDesigner">
            <summary>
            Designer used in conjunction with WizardControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControlDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="msg">The Windows Message to process.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControlDesigner.AssociatedComponents">
            <summary>
            Return collection of WizardPages which are child components.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControlDesigner.SelectionService">
            <summary>
            Return a selection service reference.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControlDesigner.DrawGrid">
            <summary>
            Gets a value indicating if the grid should be drawn.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.OfficeExtender">
            <summary>
            Provide extra property to controls to automatically update colors based on Office2003.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeExtender.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.#ctor">
            <summary>
            Initialize a new instance of the OfficeExtender class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initialize a new instance of the OfficeExtender class.
            </summary>
            <param name="container">Parent container.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The Object to receive the extender properties. </param>
            <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.GetOffice2003BackColor(System.Windows.Forms.Control)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Office2003 back color.
            </summary>
            <param name="control">Target control.</param>
            <returns>true if back color auto changed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.SetOffice2003BackColor(System.Windows.Forms.Control,Crownwood.DotNetMagic.Controls.OfficeColor)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Office2003 back color.
            </summary>
            <param name="control">Target control.</param>
            <param name="color">How to color the background.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.RemoveControl(System.Windows.Forms.Control)">
            <summary>
            Remove the specified control from the managed collection.
            </summary>
            <param name="c">Control instance to remove.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.GetOffice2007BackColor(System.Windows.Forms.Control)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Office2007 back color.
            </summary>
            <param name="control">Target control.</param>
            <returns>true if back color auto changed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.SetOffice2007BackColor(System.Windows.Forms.Control,Crownwood.DotNetMagic.Controls.OfficeColor)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Office2003 back color.
            </summary>
            <param name="control">Target control.</param>
            <param name="color">How to color the background.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.GetMediaPlayerBackColor(System.Windows.Forms.Control)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Media Player back color.
            </summary>
            <param name="control">Target control.</param>
            <returns>true if back color auto changed; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.OfficeExtender.SetMediaPlayerBackColor(System.Windows.Forms.Control,Crownwood.DotNetMagic.Controls.MediaPlayerColor)">
            <summary>
            Gets a value indicating if the given control is to automatically get the Office2003 back color.
            </summary>
            <param name="control">Target control.</param>
            <param name="color">How to color the background.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.OfficeExtender.Office2007Variant">
            <summary>
            Gets and sets the Office2007 color variant to use with Office2007BackColor.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.OfficeExtender.MediaPlayerVariant">
            <summary>
            Gets and sets the Media Player color variant to use with Office2007BackColor.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.OfficeColor">
            <summary>
            Specifies the color to use on the background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeColor.Disable">
            <summary>
            Specifies the extender should not change the property.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeColor.Base">
            <summary>
            Specifies a base color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeColor.Light">
            <summary>
            Specifies a light color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeColor.Dark">
            <summary>
            Specifies a dark color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.OfficeColor.Enhanced">
            <summary>
            Specifies a selected/enhanced color.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Office2007Variant">
            <summary>
            Specifies the color to use on the background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Office2007Variant.Blue">
            <summary>
            Specifies the Blue variant for Office2007BackColor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Office2007Variant.Silver">
            <summary>
            Specifies the Blue variant for Office2007BackColor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Office2007Variant.Black">
            <summary>
            Specifies the Blue variant for Office2007BackColor
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.MediaPlayerColor">
            <summary>
            Specifies the color to use on the background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerColor.Disable">
            <summary>
            Specifies the extender should not change the property.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerColor.Base">
            <summary>
            Specifies a base color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerColor.Light">
            <summary>
            Specifies a light color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerColor.Dark">
            <summary>
            Specifies a dark color.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerColor.Enhanced">
            <summary>
            Specifies a selected/enhanced color.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.MediaPlayerVariant">
            <summary>
            Specifies the color to use on the background.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerVariant.Blue">
            <summary>
            Specifies the Blue variant for MediaPlayerBackColor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerVariant.Orange">
            <summary>
            Specifies the Blue variant for MediaPlayerBackColor
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.MediaPlayerVariant.Purple">
            <summary>
            Specifies the Blue variant for MediaPlayerBackColor
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.BorderForControl">
            <summary>
            Represents a border around a contained control.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.BorderForControl.#ctor">
            <summary>
            Initializes a new instance of the BorderForControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.BorderForControl.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the BorderForControl class.
            </summary>
            <param name="control">Control that will be contained.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.BorderForControl.#ctor(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Initializes a new instance of the BorderForControl class.
            </summary>
            <param name="control">Control that will be contained.</param>
            <param name="borderWidth">Width of border around contained control.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.BorderForControl.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.BorderForControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="e">An LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.BorderForControl.BorderWidth">
            <summary>
            Gets or sets the border width around the contained control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ResourceHelper">
            <summary>
            Collection of static helper methods for loading embedded resources.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadCursor(System.Type,System.String)">
            <summary>
            Load the named cursor from assembly.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="cursorName">Name of cursor resource in the assembly.</param>
            <returns>New Cursor instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadIcon(System.Type,System.String)">
            <summary>
            Load the named icon from assembly.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="iconName">Name of icon resource in the assembly.</param>
            <returns>New Icon instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadIcon(System.Type,System.String,System.Drawing.Size)">
            <summary>
            Load the named icon from assembly.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="iconName">Name of icon resource in the assembly.</param>
            <param name="iconSize">Which icon size is required from those available.</param>
            <returns>New Icon instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadBitmap(System.Type,System.String)">
            <summary>
            Load the named bitmap from assembly.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="imageName">Name of bitmap resource in the assembly.</param>
            <returns>New Bitmap instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadBitmap(System.Type,System.String,System.Drawing.Point)">
            <summary>
            Load the named bitmap from assembly.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="imageName">Name of bitmap resource in the assembly.</param>
            <param name="transparentPixel">Pixel to use for defining transparent color.</param>
            <returns>New Bitmap instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadBitmapStrip(System.Type,System.String,System.Drawing.Size)">
            <summary>
            Load the named bitmap and create image strip from it.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="imageName">Name of bitmap resource in the assembly.</param>
            <param name="imageSize">Size of each individual image in strip.</param>
            <returns>New ImageList instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ResourceHelper.LoadBitmapStrip(System.Type,System.String,System.Drawing.Size,System.Drawing.Point)">
            <summary>
            Load the named bitmap and create image strip from it.
            </summary>
            <param name="assemblyType">Type that resides in required assembly.</param>
            <param name="imageName">Name of bitmap resource in the assembly.</param>
            <param name="imageSize">Size of each individual image in strip.</param>
            <param name="transparentPixel">Pixel to use for defining transparent color.</param>
            <returns>New ImageList instance.</returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.KeyHelper">
            <summary>
            Helper class for accessing keyboard state
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.KeyHelper.CTRLPressed">
            <summary>
            Gets a value indicating if the CTRL key is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.KeyHelper.SHIFTPressed">
            <summary>
            Gets a value indicating if the SHIFT key is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.KeyHelper.ALTPressed">
            <summary>
            Gets a value indicating if the ALT key is pressed.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.RedockerContentOutline">
            <summary>
            Manager for redocking of content instance and using Outline as the feedback.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentOutline.#ctor(System.Boolean,Crownwood.DotNetMagic.Docking.FloatingForm,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentOutline class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="ff">Floating form source.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentOutline.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentOutline class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentOutline.#ctor(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the RedockerContentOutline class.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.RedockerContentOutline.InternalConstruct(System.Boolean,System.Windows.Forms.Control,Crownwood.DotNetMagic.Docking.RedockerContent.Source,Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.WindowContent,Crownwood.DotNetMagic.Docking.FloatingForm,Crownwood.DotNetMagic.Docking.DockingManager,System.Drawing.Point)">
            <summary>
            Perform initialization.
            </summary>
            <param name="squares">Show squares or diamonds.</param>
            <param name="callingControl">Calling control instance.</param>
            <param name="source">Type of source.</param>
            <param name="c">Source content.</param>
            <param name="wc">WindowContent that contains content.</param>
            <param name="ff">Floating form source.</param>
            <param name="dm">DockingManager instance.</param>
            <param name="offset">Screen offset.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneTabbed">
            <summary>
            Hot zone representing a content being moved into a content tab.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneTabbed.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,Crownwood.DotNetMagic.Docking.WindowContentTabbed,System.Boolean)">
            <summary>
            Initializes a new instance of the HotZoneTabbed class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
            <param name="newSize">New size of hot zone.</param>
            <param name="wct">Tabbed content instance.</param>
            <param name="itself">Being moved within itself.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneTabbed.ApplyChange(System.Drawing.Point,Crownwood.DotNetMagic.Docking.Redocker)">
            <summary>
            Apply the hot zone change.
            </summary>
            <param name="screenPos">Screen position when change applied.</param>
            <param name="parent">Parent redocker instance.</param>
            <returns>true is successful; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneTabbed.DrawFeedback(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Rectangle)">
            <summary>
            Draw a reversible rectangle on the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="rect">Screen bounding rectangle.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Content">
            <summary>
            Individual docking unit.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="xmlIn">Steam containing information to be loaded.</param>
            <param name="formatVersion">Version number.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(Crownwood.DotNetMagic.Docking.DockingManager)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="control">Control to use inside content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="control">Control to use inside content.</param>
            <param name="title">Title to use inside content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.Control,System.String,System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="control">Control to use inside content.</param>
            <param name="title">Title to use inside content.</param>
            <param name="imageList">ImageList to use inside content.</param>
            <param name="imageIndex">ImageIndex to use inside content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.Control,System.String,System.Drawing.Icon)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="manager">Reference to parent docking manager.</param>
            <param name="control">Control to use inside content.</param>
            <param name="title">Title to use inside content.</param>
            <param name="icon">Icon to use inside content.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.BringToFront">
            <summary>
            Bring this content to the front of any tabbed content window.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.RecordRestore">
            <summary>
            Record the current position of the content.
            </summary>
            <returns>Object representing position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.RecordAutoHideRestore">
            <summary>
            Record the current auto hidden position of the content.
            </summary>
            <returns>Object representing position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.RecordDockingRestore">
            <summary>
            Record the current edge docked position of the content.
            </summary>
            <returns>Object representing position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.RecordFloatingRestore">
            <summary>
            Record the current floating position of the content.
            </summary>
            <returns>Object representing position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToArray">
            <summary>
            Saves content information into an array of bytes using Encoding.Unicode.
            </summary>
            <returns>Array of bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToArray(System.Text.Encoding)">
            <summary>
            Saves content information into an array of bytes using caller provided encoding object.
            </summary>
            <param name="encoding">Encoding object.</param>
            <returns>Array of bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToFile(System.String)">
            <summary>
            Saves content information into a named file using Encoding.Unicode.
            </summary>
            <param name="filename">Filename to create.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToFile(System.String,System.Text.Encoding)">
            <summary>
            Saves content information into a named file using caller provided encoding object.
            </summary>
            <param name="filename">Filename to create.</param>
            <param name="encoding">Encoding object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves content information into a stream object using caller provided encoding object.
            </summary>
            <param name="stream">Destination stream for saving.</param>
            <param name="encoding">Encoding object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.SaveContentToXml(System.Xml.XmlTextWriter)">
            <summary>
            Saves content information using provided xml writer object.
            </summary>
            <param name="xmlOut">Xml writer object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.LoadContentFromArray(System.Byte[])">
            <summary>
            Loads content information from given array of bytes.
            </summary>
            <param name="buffer">Array of byes.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.LoadContentFromFile(System.String)">
            <summary>
            Loads layout information from given filename.
            </summary>
            <param name="filename">Filename to open.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.LoadContentFromStream(System.IO.Stream)">
            <summary>
            Loads content information from given stream object.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.LoadContentFromXml(System.Xml.XmlTextReader)">
            <summary>
            Loads content information using provided xml reader object.
            </summary>
            <param name="xmlIn">Reader for loading config.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.OnPropertyChanging(Crownwood.DotNetMagic.Docking.Content.Property)">
            <summary>
            Raises the PropertyChanging event.
            </summary>
            <param name="prop">Property has is changing.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.Content.OnPropertyChanged(Crownwood.DotNetMagic.Docking.Content.Property)">
            <summary>
            Raises the PropertyChangedevent.
            </summary>
            <param name="prop">Property that has changed.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.Content.PropertyChanging">
            <summary>
            Occurs just before a property changes value.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.Content.PropertyChanged">
            <summary>
            Occurs just after a property changes value.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.DockingManager">
            <summary>
            Gets and set access to the parent docking manager instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Control">
            <summary>
            Gets and sets the control to use for display.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Title">
            <summary>
            Gets and sets the short title text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.FullTitle">
            <summary>
            Gets and sets the long title text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.UniqueName">
            <summary>
            Gets and sets the unique name.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.ImageList">
            <summary>
            Gets and sets the image list to use as a source for images.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.ImageIndex">
            <summary>
            Gets and sets the index into the associated image list.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Icon">
            <summary>
            Gets and sets the associated icon.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.CaptionBar">
            <summary>
            Gets and sets a value indicating if a caption bar is required.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.CloseButton">
            <summary>
            Gets and sets a value indicating if a close button is required.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.HideButton">
            <summary>
            Gets and sets if the hide button should be displayed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.DisplaySize">
            <summary>
            Gets and sets the default docked display size.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.AutoHideSize">
            <summary>
            Gets and sets the default auto hidden display size.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.FloatingSize">
            <summary>
            Gets and sets the default floating display size.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.DisplayLocation">
            <summary>
            Gets and sets the default floating window location.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Order">
            <summary>
            Gets the unique value giving the creation order of content instances.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.CloseOnHide">
            <summary>
            Gets and sets a value indicating if the content should be removed when closed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Office2003BackColor">
            <summary>
            Gets and sets the automatic Office2003 background color action.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Office2007BackColor">
            <summary>
            Gets and sets the automatic Office2007 background color action.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.MediaPlayerBackColor">
            <summary>
            Gets and sets the automatic MediaPlayer background color action.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Tag">
            <summary>
            Gets and sets user defined data.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.Visible">
            <summary>
            Gets a value indicating is the content is currently hidden.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.DefaultRestore">
            <summary>
            Gets and sets an object that represents the default docking location. 
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.AutoHideRestore">
            <summary>
            Gets and sets an object that represents the saved auto hidden location. 
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.DockingRestore">
            <summary>
            Gets and sets an object that represents the saved docked location.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.FloatingRestore">
            <summary>
            Gets and sets an object that represents the saved floating location.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.ParentWindowContent">
            <summary>
            Gets and sets the parent window that contains this content.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.IsDocked">
            <summary>
            Gets a value indicating if the Content is docked against an edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.Content.IsAutoHidden">
            <summary>
            Gets a value indicating if the Content is in AutoHide.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Content.Property">
            <summary>
            Specifies the property that has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.Control">
            <summary>
            Specifies the control property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.Title">
            <summary>
            Specifies the title property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.FullTitle">
            <summary>
            Specifies the full title property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.ImageList">
            <summary>
            Specifies the image list property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.ImageIndex">
            <summary>
            Specifies the image index property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.Icon">
            <summary>
            Specifies the icon property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.CaptionBar">
            <summary>
            Specifies the caption bar property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.CloseButton">
            <summary>
            Specifies the close button property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.HideButton">
            <summary>
            Specifies the help button property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.DisplaySize">
            <summary>
            Specifies the display size property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.AutoHideSize">
            <summary>
            Specifies the auto hide size property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.FloatingSize">
            <summary>
            Specifies the floating size property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.DisplayLocation">
            <summary>
            Specifies the display location property has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.Office2003BackColor">
            <summary>
            Specifies the Office2003 automatic background color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.Office2007BackColor">
            <summary>
            Specifies the Office2007 automatic background color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.MediaPlayerBackColor">
            <summary>
            Specifies the MediaPlayer automatic background color has changed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Docking.Content.Property.UniqueName">
            <summary>
            Specifies the unique name of the content has changed.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.Content.PropChangeHandler">
            <summary>
            Represents the method that will handle a property change.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ZoneCollection">
            <summary>
            Provides a collection container for Zone instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.Add(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Adds the specified Zone object to the collection.
            </summary>
            <param name="value">The Zone object to add to the collection.</param>
            <returns>The Zone object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.AddRange(Crownwood.DotNetMagic.Docking.Zone[])">
            <summary>
            Adds an array of Zone objects to the collection.
            </summary>
            <param name="values">An array of Zone objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.Remove(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Removes a Zone from the collection.
            </summary>
            <param name="value">A Zone to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Inserts a Zone instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the Zone.</param>
            <param name="value">The Zone object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.Contains(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Determines whether a Zone is in the collection.
            </summary>
            <param name="value">The Zone to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ZoneCollection.IndexOf(Crownwood.DotNetMagic.Docking.Zone)">
            <summary>
            Returns the index of the first occurrence of the given Zone.
            </summary>
            <param name="value">The Zone to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ZoneCollection.Item(System.Int32)">
            <summary>
            Gets the Zone at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TargetManagerAreas">
            <summary>
            Manage all targets used during a drag and drop operation for zone style redocking.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerAreas.#ctor(System.Boolean,Crownwood.DotNetMagic.Controls.TabbedGroups,Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Initializes a new instance of the TargetManagerAreas class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="host">Control that is requesting target management.</param>
            <param name="leaf">Source leaf causing drag operation.</param>
            <param name="source">Source TabControl of drag operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerAreas.Quit">
            <summary>
            Remove any visual indications.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerAreas.Initialize">
            <summary>
            Class specific initialization.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerAreas.FindTarget(System.Drawing.Point)">
            <summary>
            Gets the target associated with a mouse location.
            </summary>
            <param name="mousePos">Mouse position.</param>
            <returns>Target instance; otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TargetManagerAreas.UpdateFeedbackForTarget(Crownwood.DotNetMagic.Controls.Target)">
            <summary>
            Update feedback for the new target.
            </summary>
            <param name="t">Target instance.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StatusPanel">
            <summary>
            Represents a single StatusPanel inside the StatusBarControl.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.#ctor">
            <summary>
            Initializes a new instance of the StatusPanel class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.ResetRequestedWidth">
            <summary>
            Resets the RequestedWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.ResetPanelBorder">
            <summary>
            Resets the PanelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.ResetAlignment">
            <summary>
            Resets the PanelBorder property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.ResetAutoSizing">
            <summary>
            Resets the AutoSizing property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="pevent">A PaintEventArgs structure contained event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs structure contained event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnRequestedWidthChanged">
            <summary>
            Raises the RequestedWidthChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnPanelBorderChanged">
            <summary>
            Raises the PanelBorderChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnAlignmentChanged">
            <summary>
            Raises the AlignmentChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnImageChanged">
            <summary>
            Raises the ImageChanged event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanel.OnAutoSizingChanged">
            <summary>
            Raises the AutoSizingChanged event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.RequestedWidthChanged">
            <summary>
            Occurs when the RequestedWidth property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.PanelBorderChanged">
            <summary>
            Occurs when the BorderStyle property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.AlignmentChanged">
            <summary>
            Occurs when the Alignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.ImageChanged">
            <summary>
            Occurs when the Alignment property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.AutoSizingChanged">
            <summary>
            Occurs when the AutoSizing property changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanel.PaintBackground">
            <summary>
            Occurs when the PaintBackground property changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Visible">
            <summary>
            Gets and sets the Size property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Size">
            <summary>
            Gets and sets the Size property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Location">
            <summary>
            Gets and sets the Location property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Dock">
            <summary>
            Gets and sets the Dock property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.RightToLeft">
            <summary>
            Gets and sets the RightToLeft property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.TabStop">
            <summary>
            Gets and sets the TabStop property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Text">
            <summary>
            Gets and sets the Text property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.TabIndex">
            <summary>
            Gets and sets the TabStop property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.BorderStyle">
            <summary>
            Gets and sets the BorderStyle property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.DockPadding">
            <summary>
            Gets and sets the DockPadding property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Anchor">
            <summary>
            Gets and sets the Anchor property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.AutoScroll">
            <summary>
            Gets and sets the AutoScroll property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.AutoScrollMinSize">
            <summary>
            Gets and sets the AutoScrollMinSize property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.AutoScrollMargin">
            <summary>
            Gets and sets the AutoScrollMargin property of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.RequestedWidth">
            <summary>
            Gets and sets the requested width of the panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.PanelBorder">
            <summary>
            Gets and sets how the panel border is drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Alignment">
            <summary>
            Gets and sets how the panel border is drawn.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.AutoSizing">
            <summary>
            Gets and sets the policy for sizing the panel width.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanel.Image">
            <summary>
            Gets and sets the Image to draw inside panel.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.PanelBorder">
            <summary>
            Specifies the method used to draw panel border.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.None">
            <summary>
            Specifies that no border be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.Sunken">
            <summary>
            Specifies that a single sunken border be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.Raised">
            <summary>
            Specifies that a single raised border be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.Dotted">
            <summary>
            Specifies that a single dotted border be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.Dashed">
            <summary>
            Specifies that a single dashed border be drawn.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.PanelBorder.Solid">
            <summary>
            Specifies that a single solid border be used.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.DropIndicators">
            <summary>
            Show drop indicators for possible drag and drop positions.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.DropIndicators.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.#ctor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the DropIndicators class.
            </summary>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initialize a new instance of the DropIndicators class.
            </summary>
            <param name="squares">Show as squares or diamonds.</param>
            <param name="showMiddle">Show middle hot area.</param>
            <param name="showLeft">Show left hot area.</param>
            <param name="showRight">Show right hot area.</param>
            <param name="showTop">Show top hot area.</param>
            <param name="showBottom">Show bottom hot area.</param>
            <param name="style">Drawing style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.ShowRelative(System.Drawing.Rectangle)">
            <summary>
            Show the window relative to provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.ScreenMouseMove(System.Drawing.Point)">
            <summary>
            Perofrm mouse hit testing against a screen point.
            </summary>
            <param name="screenPoint">Screen point.</param>
            <returns>Area that is active.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.MouseReset">
            <summary>
            Ensure the state is updated to reflect the mouse not being over the control.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.DropIndicators.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.CommandImage">
            <summary>
            Manage an individual source image.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.#ctor">
            <summary>
            Initializes a new instance of the CommandImage class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.Dispose">
            <summary>
            Dispose of any resources.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the CommandImage class.
            </summary>
            <param name="image">Initial image.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.GetDisabledImage(System.Drawing.Color)">
            <summary>
            Gets a disabled version of the original image.
            </summary>
            <param name="backColor">Background color for creating image.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.ImageSpace(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Gets the space needed to draw the image in different styles.
            </summary>
            <param name="style">Visual style required.</param>
            <returns>Space image needs.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.CommandImage.CreateGrayScaleImage(System.Drawing.Image)">
            <summary>
            Create a gray scale version of provided image.
            </summary>
            <param name="source">Original image.</param>
            <returns>Gray scale version.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandImage.Empty">
            <summary>
            Gets a new empty command image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandImage.Image">
            <summary>
             Gets access to the original image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandImage.WhiteImage">
            <summary>
            Gets a white version of the original image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandImage.FadedImage">
            <summary>
            Gets a disabled version of the original image.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.CommandImage.ImageSize">
            <summary>
            Get the size of the image.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.NAGScreen">
            <summary>
            Summary description for NAGScreen.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.NAGScreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.NAGScreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.NAGScreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.TabStub">
            <summary>
            Mini container of tab pages.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.#ctor(Crownwood.DotNetMagic.Common.VisualStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the TabStub class.
            </summary>
            <param name="style">Visual style for drawing.</param>
            <param name="stubsShowAll">Initial stubs value.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the group.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Propogate a change in a framework property.
            </summary>
            <param name="name">Name of property changed.</param>
            <param name="value">New value of property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.TabStubVector(System.Drawing.Font)">
            <summary>
            Calculate the vector needed for drawing the tab stub.
            </summary>
            <param name="font">Font to use when drawing text.</param>
            <returns>Vector needed to correctly draw tab stub.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises then MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises then MouseLeave event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises then MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnPageClicked(System.Int32)">
            <summary>
            Raises the PageClicked event.
            </summary>
            <param name="pageIndex">Page index that has been clicked.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnPageOver(System.Int32)">
            <summary>
            Raises the PageClicked event.
            </summary>
            <param name="pageIndex">Page index the mouse is hovering over.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnPagesLeave">
            <summary>
            Raises the PagesLeave event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.TabStub.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.TabStub.PageClicked">
            <summary>
            Occurs when a page has been clicked.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.TabStub.PageOver">
            <summary>
            Occurs when mouse hovers over a page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.TabStub.PagesLeave">
            <summary>
            Occurs when mouse leaves the tab stub control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.TabPages">
            <summary>
            Gets the collection of tab pages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.Apply2007ClearType">
            <summary>
            Gets and sets a value indicating if the Office 2007 style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.ApplyMediaPlayerClearType">
            <summary>
            Gets and sets a value indicating if the Media Player style text should use ClearType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.Edging">
            <summary>
            Gets and sets the edge this stud is to draw against.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.SelectedIndex">
            <summary>
            Gets and sets the index of the selected tab page.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.Font">
            <summary>
            Gets and sets the font used to draw text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.BackColor">
            <summary>
            Gets and sets the background color for drawing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.TabStub.WindowContentTabbed">
            <summary>
            Gets and sets an associated windw content used to popout.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.TabStub.TabStubIndexHandler">
            <summary>
            Represents the method that will handle the PageClicked and PageOver events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.TabStub.TabStubHandler">
            <summary>
            Represents the method that will handle the PagesLeave events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneNull">
            <summary>
            Hot zone representing no action.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneNull.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the HotZoneFloating class.
            </summary>
            <param name="hotArea">Screen area that is hot.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneNull.DrawIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Draw the zone indicator to the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneNull.RemoveIndicator(Crownwood.DotNetMagic.Common.DragFeedback,System.Drawing.Point)">
            <summary>
            Remove the zone indicator from the screen.
            </summary>
            <param name="dragFeedback">Feedback class.</param>
            <param name="mousePos">Screen position of mouse.</param>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Status">
            <summary>
            Specifies the state of a button.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Status.Default">
            <summary>
            Specifies the button default its state.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Status.Yes">
            <summary>
            Specifies the button be visible.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Status.No">
            <summary>
            Specifies the button be hidden.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.Profiles">
            <summary>
            Specifies how buttons are defaulted.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Profiles.Install">
            <summary>
            Specifies wizard acts like an installer.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Profiles.Configure">
            <summary>
            Specifies wizard acts a item configurer.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.Profiles.Controller">
            <summary>
            Specifies wizard acts like a controller.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.WizardControl">
            <summary>
            Manage a collection of wizard pages.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.#ctor">
            <summary>
            Initializes a new instance of the WizardControl class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetProfile">
            <summary>
            Resets the Profile property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializePicture">
            <summary>
            Decide if the picture needs to be persisted.
            </summary>
            <returns>Should picture be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetPicture">
            <summary>
            Resets the Picture property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializeTitle">
            <summary>
            Decide if the main title text needs to be persisted.
            </summary>
            <returns>Should main title text be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetTitle">
            <summary>
            Resets the Title property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetTitleFont">
            <summary>
            Resets the TitleFont property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializeTitleFont">
            <summary>
            Decide if the main title font needs to be persisted.
            </summary>
            <returns>Should main title font be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetSubTitleFont">
            <summary>
            Resets the SubTitleFont property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializeSubTitleFont">
            <summary>
            Decide if the sub-title font needs to be persisted.
            </summary>
            <returns>Should sub-title font be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetTitleColor">
            <summary>
            Resets the TitleColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializeTitleColor">
            <summary>
            Decide if the color of the main title text needs to be persisted.
            </summary>
            <returns>Should the color of the main title text be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetAssignDefaultButton">
            <summary>
            Resets the AssignDefaultButton property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ResetSubTitleColor">
            <summary>
            Resets the SubTitleColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.ShouldSerializeSubTitleColor">
            <summary>
            Decide if the color of the sub-title text needs to be persisted.
            </summary>
            <returns>Should the color of the sub-title title text be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnWizardPageEnter(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Raises the WizardPageEnter event.
            </summary>
            <param name="wp">A WizardPage reference.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnWizardPageLeave(Crownwood.DotNetMagic.Controls.WizardPage)">
            <summary>
            Raises the WizardPageLeave event.
            </summary>
            <param name="wp">A WizardPage reference.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnCloseClick(System.EventArgs)">
            <summary>
            Raises the CloseClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnFinishClick(System.EventArgs)">
            <summary>
            Raises the FinishClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnNextClick(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the NextClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnBackClick(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the BackClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnCancelClick(System.EventArgs)">
            <summary>
            Raises the CancelClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnUpdateClick(System.EventArgs)">
            <summary>
            Raises the CancelClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnHelpClick(System.EventArgs)">
            <summary>
            Raises the HelpClick event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.WizardControl.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.WizardPageEnter">
            <summary>
            Occurs when a new wizard page is entered.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.WizardPageLeave">
            <summary>
            Occurs when a wizard page is left.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.WizardCaptionTitleChanged">
            <summary>
            Occurs when the caption title has changed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.SelectionChanged">
            <summary>
            Occurs when the selected wizard page changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.UpdateClick">
            <summary>
            Occurs when the update button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.CancelClick">
            <summary>
            Occurs when the cancel button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.FinishClick">
            <summary>
            Occurs when the finish button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.CloseClick">
            <summary>
            Occurs when the close button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.HelpClick">
            <summary>
            Occurs when the help button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.NextClick">
            <summary>
            Occurs when the next button is pressed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.WizardControl.BackClick">
            <summary>
            Occurs when the back button is pressed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.Style">
            <summary>
            Gets and sets the visual style for styling the WizardControl.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.TabControl">
            <summary>
            Gets access to the underlying TabControl.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.HeaderPanel">
            <summary>
            Gets access to teh underlying header panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.TrailerPanel">
            <summary>
            Gets access to the underlying trailer panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.WizardPages">
            <summary>
            Gets the collection of WizardPages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.Profile">
            <summary>
            Gets and sets the profile that determines default operation of buttons.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.Picture">
            <summary>
            Gets and sets the image using in the header.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.Title">
            <summary>
            Gets and sets the main title text in header.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.TitleFont">
            <summary>
            Gets and sets the font used to draw the main title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.SubTitleFont">
            <summary>
            Gets and sets the font used to draw the sub-title.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.TitleColor">
            <summary>
            Gets and sets the color of the main title text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.AssignDefaultButton">
            <summary>
            Gets and sets a value indicating if a default button should be assigned.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.SubTitleColor">
            <summary>
            Gets and sets the color for drawing the sub-title text.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.UpdateButton">
            <summary>
            Gets access to the update button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowUpdateButton">
            <summary>
            Gets and sets the visibility of the update button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableUpdateButton">
            <summary>
            Gets and sets the selectability of the update button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonUpdateText">
            <summary>
            Gets and sets the text displayed on the update button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.CancelButton">
            <summary>
            Gets access to the cancel button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowCancelButton">
            <summary>
            Gets and sets the visibility of the cancel button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableCancelButton">
            <summary>
            Gets and sets the selectability of the cancel button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonCancelText">
            <summary>
            Gets and sets the text displayed on the cancel button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.BackButton">
            <summary>
            Gets access to the back button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowBackButton">
            <summary>
            Gets and sets the visibility of the back button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableBackButton">
            <summary>
            Gets and sets the selectability of the back button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonBackText">
            <summary>
            Gets and sets the text displayed on the back button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.NextButton">
            <summary>
            Gets access to the next button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowNextButton">
            <summary>
            Gets and sets the visibility of the next button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableNextButton">
            <summary>
            Gets and sets the selectability of the next button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonNextText">
            <summary>
            Gets and sets the text displayed on the next button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.FinishButton">
            <summary>
            Gets access to the finish button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowFinishButton">
            <summary>
            Gets and sets the visibility of the finish button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableFinishButton">
            <summary>
            Gets and sets the selectability of the finish button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonFinishText">
            <summary>
            Gets and sets the text displayed on the finish button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.CloseButton">
            <summary>
            Gets access to the close button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowCloseButton">
            <summary>
            Gets and sets the visibility of the close button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableCloseButton">
            <summary>
            Gets and sets the selectability of the close button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonCloseText">
            <summary>
            Gets and sets the text displayed on the close button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.HelpButton">
            <summary>
            Gets access to the help button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ShowHelpButton">
            <summary>
            Gets and sets the visibility of the help button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.EnableHelpButton">
            <summary>
            Gets and sets the selectability of the help button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.ButtonHelpText">
            <summary>
            Gets and sets the text displayed on the help button.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.WizardControl.SelectedIndex">
            <summary>
            Gets and sets the index of hte currently selected page.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.WizardControl.WizardPageHandler">
            <summary>
            Represents the method that will handle some WizardControl events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeCollectionEditor">
            <summary>
            Information for editing the NodeCollection types.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method.
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information.</param>
            <returns>A UITypeEditorEditStyle enumeration value that indicates the style of editor.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by GetEditStyle.
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information.</param>
            <param name="provider">An IServiceProvider that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns></returns>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.ColorDetails">
            <summary>
            Class used to help supply colours used for drawing elements.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorDetails.#ctor">
            <summary>
            Initializes a new instance of the ColorDetails class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorDetails.Dispose">
            <summary>
            Dispose of object details.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorDetails.Reset">
            <summary>
            Reset the theme state.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorDetails.DefineBaseColors(System.Drawing.Color)">
            <summary>
            Reset the colors based on the base.
            </summary>
            <param name="baseColor">Base color.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.ColorDetails.DefineTrackColors(System.Drawing.Color)">
            <summary>
            Reset the colors based on the tracking start color.
            </summary>
            <param name="track">Tracking start color.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.Style">
            <summary>
            Gets and sets the visual style
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.DefaultBaseColor">
            <summary>
            Gets and sets if the basecolor is defaulted
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.DefaultTrackColor">
            <summary>
            Gets and sets if the trackcolor is defaulted
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.BaseColor">
            <summary>
            Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.BaseDarkerColor">
            <summary>
            Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.BaseColor1">
            <summary>
            Light Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.BaseColor2">
            <summary>
            Dark Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.BaseColorStub">
            <summary>
            Light base colour used in stubs.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.DarkBaseColor">
            <summary>
            Dark Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.DarkBaseColor2">
            <summary>
            Dark Second Base color used for drawing background related items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.MenuSeparatorColor">
            <summary>
            Color used to draw menu separators.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackBaseColor1">
            <summary>
            Top Base color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackBaseColor2">
            <summary>
            Bottom Base color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackLightColor1">
            <summary>
            Top Lighter color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackLightColor2">
            <summary>
            Bottom Lighter color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackLightLightColor1">
            <summary>
            Top Very light color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackLightLightColor2">
            <summary>
            Bottom Very light color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackDarkColor">
            <summary>
            Darker color used for drawing hot tracking items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.OpenBorderColor">
            <summary>
            Gets the menu border colour
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.MenuItemBorderColor">
            <summary>
            Gets the menu item border colour
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.MenuBackColor">
            <summary>
            Gets the menu background color.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackMenuInsideColor">
            <summary>
            Gets the tracking border colour for inside menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.MenuCheckInsideColor">
            <summary>
            Gets the menu checkbox/radio button inside colour.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.TrackMenuCheckInsideColor">
            <summary>
            Gets the tracking menu checkbox/radio button inside colour.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.CaptionColor1">
            <summary>
            Light color used for captions
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.CaptionColor2">
            <summary>
            Dark color used for captions
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.CaptionSelectColor1">
            <summary>
            Light color used for selected captions
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.CaptionSelectColor2">
            <summary>
            Dark color used for selected captions
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.SpotColor1">
            <summary>
            Dark color used for drawing spots
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.SpotColor2">
            <summary>
            Light color used for drawing spots
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.SepDarkColor">
            <summary>
            Dark color used for separators.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.SepLightColor">
            <summary>
            Light color used for separators.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.OpenBaseColor1">
            <summary>
            Top Base color used for drawing open menu items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.OpenBaseColor2">
            <summary>
            Bottom Base color used for drawing open menu items.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.ColumnBaseColor1">
            <summary>
            Left color used for drawing image column.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.ColumnBaseColor2">
            <summary>
            Right color used for drawing image column.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.ActiveBorderColor">
            <summary>
            Color used for border in docking and tabcontrol.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.ActiveTabColor">
            <summary>
            Color using to fill inside of an active tab.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.ColorDetails.ActiveTabButtonColor">
            <summary>
            Color using to for tab buttons.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Win32.Uxtheme">
            <summary>
            Access to Uxtheme functions.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.IsAppThemed">
            <summary>
            IsAppThemed function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.IsThemeActive">
            <summary>
            IsThemeActive function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.GetCurrentThemeName(System.Char[],System.Int32,System.Char[],System.Int32,System.Char[],System.Int32)">
            <summary>
            GetCurrentThemeName function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.OpenThemeData(System.IntPtr,System.String)">
            <summary>
            OpenThemeData function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.CloseThemeData(System.IntPtr)">
            <summary>
            CloseThemeData function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.GetWindowTheme(System.IntPtr)">
            <summary>
            GetWindowTheme function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.SetWindowTheme(System.IntPtr,System.String,System.String)">
            <summary>
            SetWindowTheme function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.DrawThemeBackground(System.IntPtr,System.IntPtr,System.Int32,System.Int32,Crownwood.DotNetMagic.Win32.RECT@,System.IntPtr)">
            <summary>
            DrawThemeBackground function of uxtheme
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Win32.Uxtheme.GetThemePartSize(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.IntPtr,Crownwood.DotNetMagic.Win32.THEMESIZE,Crownwood.DotNetMagic.Win32.SIZE@)">
            <summary>
            GetThemePartSize function of uxtheme
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.NAG">
            <summary>
            Internal class used to decide if a NAG screen should be shown.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.NAG.NAG_Start">
            <summary>
            Called by every DotNetMagic control constructor to ensure NAG shown.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.FloatingForm">
            <summary>
            Form used to host a floating zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.Zone,Crownwood.DotNetMagic.Docking.ContextHandler)">
            <summary>
            Initializes a new instance of the FloatingForm class.
            </summary>
            <param name="dockingManager">Parent docking manager instance.</param>
            <param name="zone">Zone to be hosted.</param>
            <param name="contextHandler">Delegate for handling context menus.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.RequestShow">
            <summary>
            Caller is requesting the FloatingForm is made visible.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Process propogation of values.
            </summary>
            <param name="name">Property being notified.</param>
            <param name="value">New value of property.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.AddHotZones(Crownwood.DotNetMagic.Docking.Redocker,Crownwood.DotNetMagic.Docking.HotZoneCollection)">
            <summary>
            Add our collection of hotzones into redocker.
            </summary>
            <param name="redock">Redocker target.</param>
            <param name="collection">Collection of hotzones.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged; false to release only unmanaged. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnWindowInserted(System.Int32,System.Object)">
            <summary>
            Process a new window being inserted into zone.
            </summary>
            <param name="index">Index position of insertion.</param>
            <param name="value">New window instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnWindowRemoving(System.Int32,System.Object)">
            <summary>
            Process a window before being removed from zone.
            </summary>
            <param name="index">Index position being removed.</param>
            <param name="value">Window instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnWindowRemoved(System.Int32,System.Object)">
            <summary>
            Process a window after it has been removed from zone.
            </summary>
            <param name="index">Index position being removed.</param>
            <param name="value">Window instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnWindowClearing">
            <summary>
            Process the contents about to be removed from the zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnFullTitleChanged(System.Object,System.EventArgs)">
            <summary>
            Modify the floating form title.
            </summary>
            <param name="sender">Source string.</param>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnZoneRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Process the removal of zone.
            </summary>
            <param name="sender">Object source.</param>
            <param name="e">A ControlEventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnContext(Crownwood.DotNetMagic.Docking.ContentCollection,System.Drawing.Point)">
            <summary>
            Raises the Context event.
            </summary>
            <param name="cc">The collection of content instances.</param>
            <param name="screenPos">Screen position of mouse.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.ExitFloating">
            <summary>
            Floating form is about to exit.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.Restore">
            <summary>
            Restore the zone.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnMove(System.EventArgs)">
            <summary>
            Update each zone content with new position.
            </summary>
            <param name="e">An EventArgs structure containing the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Close each of the content that are allowed to be removed.
            </summary>
            <param name="e">A CancelEventArgs structure contained event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.OnResize(System.EventArgs)">
            <summary>
            Update each zone content with new size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.FloatingForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            This member overrides Control.ProcessCmdKey.
            </summary>
            <param name="msg">Windows message</param>
            <param name="keyData">KryData for the message.</param>
            <returns>True if processed; otherwise false.</returns>
        </member>
        <member name="E:Crownwood.DotNetMagic.Docking.FloatingForm.Context">
            <summary>
            Occurs when context menu is required.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.FloatingForm.DockingManager">
            <summary>
            Gets the parent docking manager instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.FloatingForm.Zone">
            <summary>
            Gets the hosted zone instance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.FloatingForm.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.ContentCollection">
            <summary>
            Provides a collection container for Content instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Add(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Adds the specified Content object to the collection.
            </summary>
            <param name="value">The Content object to add to the collection.</param>
            <returns>The Content object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.AddRange(Crownwood.DotNetMagic.Docking.Content[])">
            <summary>
            Adds an array of Content objects to the collection.
            </summary>
            <param name="values">An array of Content objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Remove(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Removes a Content from the collection.
            </summary>
            <param name="value">A Content to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Inserts a Content instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the Content.</param>
            <param name="value">The Content object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Contains(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Determines whether a Content is in the collection.
            </summary>
            <param name="value">The Content to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Contains(Crownwood.DotNetMagic.Docking.ContentCollection)">
            <summary>
            Determines whether any of a group of Content is in the collection.
            </summary>
            <param name="values">The group of Content to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Contains(System.String)">
            <summary>
            Determines whether a Content with a given title is in the collection.
            </summary>
            <param name="value">The title of the Content to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.ContainsTitleOrUnique(System.String)">
            <summary>
            Determines whether a Content with a given title or unique name is in the collection.
            </summary>
            <param name="value">The title of the Content to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Contains(Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Determines whether a Content with any of a group of titles is in the collection.
            </summary>
            <param name="values">The group of titles to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.ContainsTitleOrUnique(Crownwood.DotNetMagic.Docking.StringCollection)">
            <summary>
            Determines whether a Content with any of a group of titles or unique names is in the collection.
            </summary>
            <param name="values">The group of titles to locate in the collection.</param>
            <returns>true if an item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.FindUniqueName(System.String)">
            <summary>
            Gets the Content with the specified unique name.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.SetIndex(System.Int32,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Move Content to new indexed position in collection.
            </summary>
            <param name="newIndex">New indexed position required.</param>
            <param name="value">Content instance to move to new position.</param>
            <returns>The new indexed position.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.IndexOf(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Returns the index of the first occurrence of the given Content.
            </summary>
            <param name="value">The Content to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.ContentCollection.Copy">
            <summary>
            Return a new ContentCollection with same content references.
            </summary>
            <returns>New ContentCollection instance.</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ContentCollection.Item(System.Int32)">
            <summary>
            Gets the Content at the specified index.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.ContentCollection.Item(System.String)">
            <summary>
            Gets the Content with the specified title.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.NodeCollection">
            <summary>
            Provides a collection container for Node instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.#ctor">
            <summary>
            Initialize a new instance of the NodeCollection class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.#ctor(Crownwood.DotNetMagic.Controls.TreeControl)">
            <summary>
            Initialize a new instance of the NodeCollection class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.#ctor(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Initialize a new instance of the NodeCollection class.
            </summary>
            <param name="parentNode">Node this collection is attached to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Add(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Adds the specified Node object to the collection.
            </summary>
            <param name="value">The Node object to add to the collection.</param>
            <returns>The Node object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Add(Crownwood.DotNetMagic.Controls.Node,System.Boolean)">
            <summary>
            Adds the specified Node object to the collection.
            </summary>
            <param name="value">The Node object to add to the collection.</param>
            <param name="bSort">If true it will sort the collection after adding the new node.</param>
            <returns>The Node object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.AddRange(Crownwood.DotNetMagic.Controls.Node[])">
            <summary>
            Adds an array of Node objects to the collection.
            </summary>
            <param name="values">An array of Node objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Remove(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Removes a Node from the collection.
            </summary>
            <param name="value">A Node to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Insert(System.Int32,Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Inserts a Node instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the Node.</param>
            <param name="value">The Node object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Contains(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Determines whether a Node is in the collection.
            </summary>
            <param name="value">The Node to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.IndexOf(Crownwood.DotNetMagic.Controls.Node)">
            <summary>
            Returns the index of the first occurrence of the given Node.
            </summary>
            <param name="value">The Node to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.GetFirstNode">
            <summary>
            Gets reference to the first Node in this hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.GetFirstDisplayedNode">
            <summary>
            Gets reference to the first displayed Node in this hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.GetLastNode">
            <summary>
            Gets reference to the last Node in this hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.GetLastDisplayedNode">
            <summary>
            Gets reference to the last displayed Node in this hierarchy.
            </summary>
            <returns>null if no Node found; otherwise reference to node.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.Clone">
            <summary>
            Creates a deep copy of the NodeCollection.
            </summary>
            <returns>New NodeCollection instance.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Called when the new item has been inserted.
            </summary>
            <param name="index">Index of newly inserted item.</param>
            <param name="value">Reference of inserted item.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Called when the item has been removed.
            </summary>
            <param name="index">Index of removed item.</param>
            <param name="value">Reference of removed item.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Called when the item has been removed.
            </summary>
            <param name="index">Index of removed item.</param>
            <param name="value">Reference of removed item.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Called when an item has been replaced.
            </summary>
            <param name="index">Index of replaced item.</param>
            <param name="oldValue">Reference of removed item.</param>
            <param name="newValue">Reference of added item.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnClear">
            <summary>
            Called when the contents are about to be cleared down.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.NodeCollection.OnVCChanged">
            <summary>
            Raises the VCChanged event.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.NodeCollection.VCChanged">
            <summary>
            Occurs after the VC property value has changed.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.ParentNode">
            <summary>
            Gets the Node instance this collection is attached to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.TreeControl">
            <summary>
            Gets the TreeControl instance this collection is attached to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.VC">
            <summary>
            Gets the TreeControl instance this collection is attached to.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.Size">
            <summary>
            Gets the size of the node collection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.Bounds">
            <summary>
            Gets the bounds of the node collection.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.ChildBounds">
            <summary>
            Gets the bounds of the node collection including children nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.FirstVisibleIndex">
            <summary>
            Gets the index of the first visible node, or -1 if none are visible.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.LastVisibleIndex">
            <summary>
            Gets the index of the last visible node, or -1 if none are visible.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.VisibleCount">
            <summary>
            Gets the number of visible Nodes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.Item(System.Int32)">
            <summary>
            Gets the Node at the specified index.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.NodeCollection.Cache">
            <summary>
            Gets a value indicating if the size of the node needs recalculating.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.HotZoneCollection">
            <summary>
            Provides a collection container for HotZone instances.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.Add(Crownwood.DotNetMagic.Docking.HotZone)">
            <summary>
            Adds the specified HotZone object to the collection.
            </summary>
            <param name="value">The HotZone object to add to the collection.</param>
            <returns>The HotZone object added to the collection.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.AddRange(Crownwood.DotNetMagic.Docking.HotZone[])">
            <summary>
            Adds an array of HotZone objects to the collection.
            </summary>
            <param name="values">An array of HotZone objects to add to the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.Remove(Crownwood.DotNetMagic.Docking.HotZone)">
            <summary>
            Removes a HotZone from the collection.
            </summary>
            <param name="value">A HotZone to remove from the collection.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.Insert(System.Int32,Crownwood.DotNetMagic.Docking.HotZone)">
            <summary>
            Inserts a HotZone instance into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the HotZone.</param>
            <param name="value">The HotZone object to insert.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.Contains(Crownwood.DotNetMagic.Docking.HotZone)">
            <summary>
            Determines whether a HotZone is in the collection.
            </summary>
            <param name="value">The HotZone to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.Contains(System.Drawing.Point)">
            <summary>
            Determines whether a HotZone intersects the given Point.
            </summary>
            <param name="pt">The Point to test against each HotZone.</param>
            <returns>HotZone if match is found; otherwise null</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.HotZoneCollection.IndexOf(Crownwood.DotNetMagic.Docking.HotZone)">
            <summary>
            Returns the index of the first occurrence of the given HotZone.
            </summary>
            <param name="value">The HotZone to locate.</param>
            <returns>Index of object; otherwise -1</returns>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.HotZoneCollection.Item(System.Int32)">
            <summary>
            Gets the HotZone at the specified index.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.AutoHidePanel">
            <summary>
            Manage a collection of auto hidden groups along a docked edge.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,System.Windows.Forms.DockStyle)">
            <summary>
            Initializes a new instance of the AutoHidePanel class.
            </summary>
            <param name="manager">Parent docking manager.</param>
            <param name="dockEdge">Edge we are docked against.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Process change in environment values.
            </summary>
            <param name="name">Name of environment variable that has changed.</param>
            <param name="value">New value for environment variable.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.ContainsContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Do we contain the provided content instance in a auto hidden group.
            </summary>
            <param name="c">Content to search for.</param>
            <returns>true if found;false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.BringContentIntoView(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Make the auto hidden panel containing the content visible.
            </summary>
            <param name="c">Content to search for.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.RestoreObjectForContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Create a restore object for the provided content.
            </summary>
            <param name="c">Content to search for.</param>
            <returns>Restore object that contains position details.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AddContent(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,Crownwood.DotNetMagic.Docking.StringCollection,System.Boolean)">
            <summary>
            Add a new content into this edge using provided hint information.
            </summary>
            <param name="content">Content to be added.</param>
            <param name="next">Collection of content names.</param>
            <param name="previous">Collection of content names.</param>
            <param name="nextAll">Collection of content names.</param>
            <param name="previousAll">Collection of content names.</param>
            <param name="contentCurrent">Should this content become the current one.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AddContentIntoTabStub(Crownwood.DotNetMagic.Docking.Content,Crownwood.DotNetMagic.Docking.TabStub,System.Int32,System.Boolean)">
            <summary>
            Add a new content into specified stub at specified index.
            </summary>
            <param name="content">Content to be added.</param>
            <param name="ts">Which TabStub to add the content into.</param>
            <param name="index">Which indexed position inside tab stub.</param>
            <param name="currentContent">Should this content become the current one.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AddContentsAsGroup(Crownwood.DotNetMagic.Docking.ContentCollection,Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Add all the contents of a collection as a new tab stub.
            </summary>
            <param name="contents">Collection of content to be added.</param>
            <param name="current">Initial content to show as selected.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AddContentsAsGroup(Crownwood.DotNetMagic.Docking.ContentCollection,Crownwood.DotNetMagic.Docking.Content,System.Int32)">
            <summary>
            Add all the contents of a collection as a new tab stub at indexed position.
            </summary>
            <param name="contents">Collection of content to be added.</param>
            <param name="current">Initial content to show as selected.</param>
            <param name="index">Indexed position of new tab stub.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.InvertAutoHideWindowContent(Crownwood.DotNetMagic.Docking.WindowContentTabbed)">
            <summary>
            Invert the auto hidden status of a specified content container window.
            </summary>
            <param name="wct">Window to search for.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.RemoveContent(Crownwood.DotNetMagic.Docking.Content)">
            <summary>
            Remove the specified content from its tab stub.
            </summary>
            <param name="c">Content to search for.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.RemoveShowingWindow">
            <summary>
            Remove any auto hidden window that is currently popped out.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="msg">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter out; false otherwise.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data. </param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged; false to release only unmanaged. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel">
            <summary>
            Handle visible display of a single auto hidden group.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.#ctor(Crownwood.DotNetMagic.Docking.DockingManager,Crownwood.DotNetMagic.Docking.AutoHidePanel,Crownwood.DotNetMagic.Common.Edge)">
            <summary>
            Initializes a new instance of the AutoHostPanel class.
            </summary>
            <param name="manager">Parent docking manager.</param>
            <param name="autoHidePanel">Parent auto hide panel.</param>
            <param name="borderEdge">Edge we are docked against.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.ResizeBarSize">
            <summary>
            Gets the current size of the resize bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.CanResize(Crownwood.DotNetMagic.Controls.ResizeBar)">
            <summary>
            Determines if the ResizeBar instance is allowed to resize.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.StartResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Drawing.Rectangle@)">
            <summary>
            Determine the screen rectangle the bar can size into.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="screenBoundary">Screen bounding rectangle.</param>
            <returns>Is the instance allowed to resize.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.EndResizeOperation(Crownwood.DotNetMagic.Controls.ResizeBar,System.Int32)">
            <summary>
            Resize operation completed with delta change.
            </summary>
            <param name="bar">ResizeBar instance.</param>
            <param name="delta">Delta change to size.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.PropogateNameValue(Crownwood.DotNetMagic.Common.PropogateName,System.Object)">
            <summary>
            Process change in environment values.
            </summary>
            <param name="name">Name of environment variable that has changed.</param>
            <param name="value">New value for environment variable.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data. </param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.MinimumWidth">
            <summary>
            Gets the calculated minimum width of the auto host panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.MinimumHeight">
            <summary>
            Gets the calculated minimum height of the auto host panel.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.ResizeBarColor">
            <summary>
            Gets the color to use for the resize bar.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.ResizeBarVector">
            <summary>
            Gets the resize bar vector length.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.Style">
            <summary>
            Gets the visual style used for drawing.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Docking.AutoHidePanel.AutoHostPanel.BackgroundColor">
            <summary>
            Gets the background color used for drawing.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups">
            <summary>
            Provide a Tabbed MDI appearance to multiple tab pages.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.#ctor">
            <summary>
            Initializes a new instance of the TabbedGroups class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.#ctor(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Initializes a new instance of the TabbedGroups class.
            </summary>
            <param name="style">Define initial visual style.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetFeedbackStyle">
            <summary>
            Resets the FeedbackStyle property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetOfficeStyleNormal">
            <summary>
            Resets the OfficeStyleNormal property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetOfficeStyleSelected">
            <summary>
            Resets the OfficeStyleSelected property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetOfficeStyleProminent">
            <summary>
            Resets the OfficeStyleProminent property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMediaPlayerStyleNormal">
            <summary>
            Resets the MediaPlayerStyleNormal property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMediaPlayerStyleSelected">
            <summary>
            Resets the MediaPlayerStyleSelected property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMediaPlayerStyleProminent">
            <summary>
            Resets the MediaPlayerStyleProminent property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetIDE2005StyleNormal">
            <summary>
            Resets the IDE2005StyleNormal property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetIDE2005StyleSelected">
            <summary>
            Resets the IDE2005StyleSelected property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetIDE2005StyleProminent">
            <summary>
            Resets the IDE2005StyleProminent property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetRootDirection">
            <summary>
            Reset the RootDirection property.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetResizeBarVector">
            <summary>
            Resets the ResizeBarVector property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeResizeBackColor">
            <summary>
            Decide if the resize bar color needs to be persisted.
            </summary>
            <returns>Should color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetResizeBarColor">
            <summary>
            Resets the ResetResizeBarColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeProminentBackColor">
            <summary>
            Decide if the prominent back color needs to be persisted.
            </summary>
            <returns>Should color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentBackColor">
            <summary>
            Resets the ProminentBackColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeProminentForeColor">
            <summary>
            Decide if the prominent foreground color needs to be persisted.
            </summary>
            <returns>Should color be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentForeColor">
            <summary>
            Resets the ProminentForeColor property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetResizeBarLock">
            <summary>
            Resets the ResizeBarLock property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetLayoutLock">
            <summary>
            Resets the LayoutLock property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentLeaf">
            <summary>
            Resets the ProminentLeaf property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentOnly">
            <summary>
            Resets the ProminentOnly property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentColors">
            <summary>
            Resets the ProminentColors property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetCompactOptions">
            <summary>
            Resets the CompactOptions property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetDropType">
            <summary>
            Resets the DropType property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetDefaultGroupMinimumWidth">
            <summary>
            Resets the DefaultGroupMinimumWidth property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetDefaultGroupMinimumHeight">
            <summary>
            Resets the DefaultGroupMinimumHeight property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetCloseMenuText">
            <summary>
            Resets the CloseMenuText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentMenuText">
            <summary>
            Resets the ProminentMenuText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetRebalanceMenuText">
            <summary>
            Resets the RebalanceMenuText property to its default value. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMovePreviousMenuText">
            <summary>
            Resets the MovePreviousMenuText property to its default value. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMoveNextMenuText">
            <summary>
            Resets the MoveNextMenuText property to its default value. 
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetNewVerticalMenuText">
            <summary>
            Resets the NewVerticalMenuText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetNewHorizontalMenuText">
            <summary>
            Resets the NewHorizontalMenuText property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeCloseShortcut">
            <summary>
            Decide if close shortcut needs to be persisted.
            </summary>
            <returns>Should the shortcut be persisted.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetCloseShortcut">
            <summary>
            Resets the CloseShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeProminentShortcut">
            <summary>
            Decide if prominent shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetProminentShortcut">
            <summary>
            Resets the ProminentShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeRebalanceShortcut">
            <summary>
            Decide if rebalance shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetRebalanceShortcut">
            <summary>
            Resets the RebalanceShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeMovePreviousShortcut">
            <summary>
            Decide if move previous shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMovePreviousShortcut">
            <summary>
            Resets the MovePreviousShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeMoveNextShortcut">
            <summary>
            Decide if move next shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetMoveNextShortcut">
            <summary>
            Resets the MoveNextShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeSplitVerticalShortcut">
            <summary>
            Decide if split vertical shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetSplitVerticalShortcut">
            <summary>
            Resets the SplitVerticalShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeSplitHorizontalShortcut">
            <summary>
            Decide if split horizontal shortcut needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetSplitHorizontalShortcut">
            <summary>
            Resets the SplitHorizontalShortcut property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeImageList">
            <summary>
            Decide if image list needs to be persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetImageList">
            <summary>
            Resets the ResetImageList property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetDisplayTabMode">
            <summary>
            Resets the ResetDisplayTabMode property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetHotkeyPrefix">
            <summary>
            Resets the HotkeyPrefix property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetSaveControls">
            <summary>
            Resets the SaveControls property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeDirty">
            <summary>
            Never want to persist this information.
            </summary>
            <returns>returns false always</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetDirty">
            <summary>
            Resets the ResetDirty property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetPageCloseWhenEmpty">
            <summary>
            Resets the PageCloseWhenEmpty property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetIgnoreKeys">
            <summary>
            Resets the IgnoreKeys property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetAutoCalculateDirty">
            <summary>
            Resets the AutoCalculateDirty property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ShouldSerializeActiveLeaf">
            <summary>
            Never want to persist this information.
            </summary>
            <returns>always returns false</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetActiveLeaf">
            <summary>
            Resets the ActiveLeaf property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetAtLeastOneLeaf">
            <summary>
            Resets the AtLeastOneLeaf property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ResetAutoCompact">
            <summary>
            Resets the AutoCompact property to its default value.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.Rebalance">
            <summary>
            Restore equal proportional spacing to all groups recursively.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.Rebalance(System.Boolean)">
            <summary>
            Restore equal proportional spacing to all groups.
            </summary>
            <param name="recurse">Should recurse into all groups.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.Compact">
            <summary>
            Perform compacting of hierarchy using default flags.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.Compact(Crownwood.DotNetMagic.Controls.CompactFlags)">
            <summary>
            Perform compacting of hierarchy using specified flags.
            </summary>
            <param name="flags">Compacting options to be applied.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LeafForPage(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Find the leaf that contains the provided page.
            </summary>
            <param name="page">TabPage to search for.</param>
            <returns>Leaf containing page;otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.FirstLeaf">
            <summary>
            Return reference to first leaf group.
            </summary>
            <returns>First leaf;otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LastLeaf">
            <summary>
            Return reference to last leaf group.
            </summary>
            <returns>Last leaf;otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.NextLeaf(Crownwood.DotNetMagic.Controls.TabGroupLeaf)">
            <summary>
            Return reference to next leaf group in hierarchy starting from specified leaf.
            </summary>
            <param name="current">Starting leaf.</param>
            <returns>Next leaf;otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.PreviousLeaf(Crownwood.DotNetMagic.Controls.TabGroupLeaf)">
            <summary>
            Return reference to previous leaf group in hierarchy starting from specified leaf.
            </summary>
            <param name="current">Starting leaf.</param>
            <returns>Previous leaf;otherwise null.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.EndInit(System.Boolean)">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <param name="events">Should events be generated.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToArray">
            <summary>
            Saves layout information into an array of bytes using Unicode Encoding.
            </summary>
            <returns>Array of created bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToArray(System.Text.Encoding)">
            <summary>
            Saves layout information into an array of bytes.
            </summary>
            <param name="encoding">Required encoding.</param>
            <returns>Array of created bytes.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToFile(System.String)">
            <summary>
            Saves layout information into a named file using Unicode Encoding.
            </summary>
            <param name="filename">Name of file to save to.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToFile(System.String,System.Text.Encoding)">
            <summary>
            Saves layout information into a named file.
            </summary>
            <param name="filename">Name of file to save to.</param>
            <param name="encoding">Required encoding.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves layout information into a stream object.
            </summary>
            <param name="stream">Stream object.</param>
            <param name="encoding">Required encoding.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveConfigToXml(System.Xml.XmlTextWriter)">
            <summary>
            Saves layout information using a provider xml writer.
            </summary>
            <param name="xmlOut">Xml writer object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LoadConfigFromArray(System.Byte[])">
            <summary>
            Loads layout information from given array of bytes.
            </summary>
            <param name="buffer">Array of source bytes.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LoadConfigFromFile(System.String)">
            <summary>
            Loads layout information from given filename.
            </summary>
            <param name="filename">Name of file to read from.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LoadConfigFromStream(System.IO.Stream)">
            <summary>
            Loads layout information from given stream object.
            </summary>
            <param name="stream">Stream object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.LoadConfigFromXml(System.Xml.XmlTextReader)">
            <summary>
            Loads layout information using the provided xml reader.
            </summary>
            <param name="xmlIn">Xml reader object.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnTabControlType">
            <summary>
            Get the implementation class to create when a new TabControl is created.
            </summary>
            <returns>Type to create.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnTabControlCreated(Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Define default settings for a newly created TabControl instance.
            </summary>
            <param name="tc">TabControl instance just created.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnTabControlRemoved(Crownwood.DotNetMagic.Controls.TabControl)">
            <summary>
            Raises the TabControlRemove event to let user unsubscribe event handlers.
            </summary>
            <param name="tc">TabControl instance about to be removed.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnPageCloseRequested(Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs)">
            <summary>
            Raises the PageCloseRequest event.
            </summary>
            <param name="e">A TGCloseRequestEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnPageContextMenu(Crownwood.DotNetMagic.Controls.TGContextMenuEventArgs)">
            <summary>
            Raises the PageContextMenu event.
            </summary>
            <param name="e">A TGContextMenuEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnGlobalSaving(System.Xml.XmlTextWriter)">
            <summary>
            Raises the GlobalSaving event.
            </summary>
            <param name="xmlOut">A XmlTextWriter that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnGlobalLoading(System.Xml.XmlTextReader)">
            <summary>
            Raises the GlobalLoading event.
            </summary>
            <param name="xmlIn">A XmlTextReader that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnPageSaving(Crownwood.DotNetMagic.Controls.TGPageSavingEventArgs)">
            <summary>
            Raises the PageSaving event.
            </summary>
            <param name="e">A TGPageSavingEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnPageLoading(Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs)">
            <summary>
            Raises the PageLoading event.
            </summary>
            <param name="e">A TGPageLoadingEventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnProminentLeafChanged(System.EventArgs)">
            <summary>
            Raises the ProminentLeafChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnActiveLeafChanged(System.EventArgs)">
            <summary>
            Raises the ActiveLeafChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnDirtyChanged(System.EventArgs)">
            <summary>
            Raises the DirtyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnExternalDrop(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,Crownwood.DotNetMagic.Controls.TabbedGroups.DragProvider)">
            <summary>
            Raises the ExternalDrop event.
            </summary>
            <param name="tgl">Source TabGroupLeaf instance.</param>
            <param name="tc">Source TabControl instance.</param>
            <param name="dp">Source DragProvider instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnExternalDropType(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,System.Object)">
            <summary>
            Raises the ExternalDropType event.
            </summary>
            <param name="tgl">Source TabGroupLeaf instance.</param>
            <param name="tc">Source TabControl instance.</param>
            <param name="data">Source typed data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnExternalDropRaw(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ExternalDropRaw event.
            </summary>
            <param name="tgl">Source TabGroupLeaf instance.</param>
            <param name="tc">Source TabControl instance.</param>
            <param name="rawData">Source raw data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnExternalDragEnter(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ExternalDragEnter event to test if drag is allowed into the tab headers.
            </summary>
            <param name="tgl">Source TabGroupLeaf instance.</param>
            <param name="tc">Source TabControl instance.</param>
            <param name="e">An DragEventArgs than contains the event data.</param>
            <returns>true if allowed to drag provided data; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnExternalDragOver(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the ExternalDragOver event to test if drag is allowed over the tab headers.
            </summary>
            <param name="tgl">Source TabGroupLeaf instance.</param>
            <param name="tc">Source TabControl instance.</param>
            <param name="e">An DragEventArgs than contains the event data.</param>
            <returns>true if allowed to drag provided data; otherwise false.</returns>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnPageChanged(Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Raises the PageChanged event.
            </summary>
            <param name="tp">Source TabPage instance.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnResizeStart(Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Raises the ResizeStart event.
            </summary>
            <param name="tgs">TabGroupSequence that contains the resize operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.OnResizeFinish(Crownwood.DotNetMagic.Controls.TabGroupSequence)">
            <summary>
            Raises the ResizeFinish event.
            </summary>
            <param name="tgs">TabGroupSequence that contains the resize operation.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <returns>true if key processed; otherwise false.</returns>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlType">
            <summary>
            Occurs when a new TabControl needs creating and requests the actual type to create.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlCreated">
            <summary>
            Occurs when a new TabControl has been created.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlRemoved">
            <summary>
            Occurs when a TabControl is being removed.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.PageCloseRequest">
            <summary>
            Occurs when a request to close a TabPage is being made.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.PageContextMenu">
            <summary>
            Occurs when a context menu is about to be shown.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.GlobalSaving">
            <summary>
            Occurs during the saving of control state.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.GlobalLoading">
            <summary>
            Occurs during the loading of control state.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.PageSaving">
            <summary>
            Occurs during the saving of each tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.PageLoading">
            <summary>
            Occurs during the loading of each tab page.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentLeafChanged">
            <summary>
            Occurs when the prominent leaf changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ActiveLeafChanged">
            <summary>
            Occurs when the active leaf changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.DirtyChanged">
            <summary>
            Occurs when the dirty state changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDragEnter">
            <summary>
            Occurs when drag into tab header is occuring.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDragOver">
            <summary>
            Occurs when drag over tab header is occuring.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDrop">
            <summary>
            Occurs when an external drag drop of standard type occurs.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDropType">
            <summary>
            Occurs when an external drag drop of user specified type occurs.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDropRaw">
            <summary>
            Occurs when an external drag drop of raw data occurs.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.PageChanged">
            <summary>
            Occurs when the selected tab page changes.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeStart">
            <summary>
            Occurs when a resize operation starts within a sequence.
            </summary>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeFinish">
            <summary>
            Occurs when a resize operation finishes within a sequence.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.Style">
            <summary>
            Gets or sets the visual style for the control.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.FeedbackStyle">
            <summary>
            Gets the feedback style used when dragging.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.OfficeStyleNormal">
            <summary>
            Gets or sets the drawing used for Office2003 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.OfficeStyleSelected">
            <summary>
            Gets or sets the drawing used for Office2003 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.OfficeStyleProminent">
            <summary>
            Gets or sets the drawing used for Office2003/Office2007 styles.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MediaPlayerStyleNormal">
            <summary>
            Gets or sets the drawing used for Media Player style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MediaPlayerStyleSelected">
            <summary>
            Gets or sets the drawing used for Media Player style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MediaPlayerStyleProminent">
            <summary>
            Gets or sets the drawing used for Media Player styles.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.IDE2005StyleNormal">
            <summary>
            Gets or sets the drawing used for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.IDE2005StyleSelected">
            <summary>
            Gets or sets the drawing used for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.IDE2005StyleProminent">
            <summary>
            Gets or sets the drawing used for IDE2005 style.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.RootSequence">
            <summary>
            Gets the root sequence of contents.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.RootDirection">
            <summary>
            Gets the root sequence of contents.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeBarVector">
            <summary>
            Gets or sets the vector used for the resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeBarColor">
            <summary>
            Gets or sets the color used for the resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentBackColor">
            <summary>
            Gets or sets the color used for the prominent background.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentForeColor">
            <summary>
            Gets or sets the color used for the prominent foreground.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeBarLock">
            <summary>
            Gets or sets the ability to resize using the bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.LayoutLock">
            <summary>
            Gets or sets the ability to move pages around.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentLeaf">
            <summary>
            Gets or sets the leaf that is currently prominent.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentOnly">
            <summary>
            Gets or sets a value indicating if when prominent then only the prominent leaf is visible at all.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentColors">
            <summary>
            Gets or sets a value indicating if when prominent the tab control changes color.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.CompactOptions">
            <summary>
            Gets or sets the compacting options.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.DropType">
            <summary>
            Gets or sets a user defined type allowed to be dropped on tab leaf headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.DefaultGroupMinimumWidth">
            <summary>
            Gets or sets the minimum width a group is allowed to be.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.DefaultGroupMinimumHeight">
            <summary>
            Gets or sets the minimum height a group is allowed to be.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.CloseMenuText">
            <summary>
            Gets or sets the text used for the Close menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentMenuText">
            <summary>
            Gets or sets the text used for the Prominent menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.RebalanceMenuText">
            <summary>
            Gets or sets the text used for the Rebalance menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MovePreviousMenuText">
            <summary>
            Gets or sets the text used for the MovePrevious menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MoveNextMenuText">
            <summary>
            Gets or sets the text used for the MoveNext menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.NewVerticalMenuText">
            <summary>
            Gets or sets the text used for the NewVertical menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.NewHorizontalMenuText">
            <summary>
            Gets or sets the text used for the NewHorizontal menu option.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.CloseShortcut">
            <summary>
            Gets or sets the shortcut key combination for close.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ProminentShortcut">
            <summary>
            Gets or sets the shortcut key combination for prominent.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.RebalanceShortcut">
            <summary>
            Gets or sets the shortcut key combination for rebalance.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MovePreviousShortcut">
            <summary>
            Gets or sets the shortcut key combination for move previous.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.MoveNextShortcut">
            <summary>
            Gets or sets the shortcut key combination for move next.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.SplitVerticalShortcut">
            <summary>
            Gets or sets the shortcut key combination for split vertical.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.SplitHorizontalShortcut">
            <summary>
            Gets or sets the shortcut key combination for split horizontal.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ImageList">
            <summary>
            Gets or sets the source of images that can be used by tab pages.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.DisplayTabMode">
            <summary>
            Gets or sets the display mode for tab headers.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.HotkeyPrefix">
            <summary>
            Gets or sets the vector used for the resize bars.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.SaveControls">
            <summary>
            Gets or sets the need to save information about contained controls.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.Dirty">
            <summary>
            Gets or sets an indication of any changes to the control contents.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.PageCloseWhenEmpty">
            <summary>
            Gets or sets whether PageClose events are generated for empty leafs.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.IgnoreKeys">
            <summary>
            Gets or sets if the shortcut and tabbing keys should be ignored.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.AutoCalculateDirty">
            <summary>
            Gets or sets whether the Dirty property is updated automatically.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ActiveLeaf">
            <summary>
            Gets or sets which leaf is currently active.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.ActiveTabPage">
            <summary>
            Gets the tab page that is currently active.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.AtLeastOneLeaf">
            <summary>
            Gets and sets if at least one leaf should be present at all times.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.AutoCompact">
            <summary>
            Gets and sets if the control should automatically compact after changes.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.DragProvider">
            <summary>
            Provide access to dragging date.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.DragProvider.#ctor">
            <summary>
            Initializes a new instance of the DragProvider class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TabbedGroups.DragProvider.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the DragProvider class.
            </summary>
            <param name="tag">Initial tag to be used.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TabbedGroups.DragProvider.Tag">
            <summary>
            Gets or sets the Tag property.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlTypeHandler">
            <summary>
            Represents the method that will handle the TabControlType event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlCreatedHandler">
            <summary>
            Represents the method that will handle the TabControlCreated event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.TabControlRemovedHandler">
            <summary>
            Represents the method that will handle the TabControlRemoved event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.PageCloseRequestHandler">
            <summary>
            Represents the method that will handle the PageCloseRequest event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.PageContextMenuHandler">
            <summary>
            Represents the method that will handle the PageContextMenu event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.GlobalSavingHandler">
            <summary>
            Represents the method that will handle the GlobalSaving event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.GlobalLoadingHandler">
            <summary>
            Represents the method that will handle the GlobalLoading event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.PageSavingHandler">
            <summary>
            Represents the method that will handle the PageSaving event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.PageLoadingHandler">
            <summary>
            Represents the method that will handle the PageLoading event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDragHandler">
            <summary>
            Represents the method that will handle the ExternalDrag event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDropHandler">
            <summary>
            Represents the method that will handle the ExternalDrop event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDropTypeHandler">
            <summary>
            Represents the method that will handle the ExternalDropType event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ExternalDropRawHandler">
            <summary>
            Represents the method that will handle the ExternalDropRaw event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.PageChangeHandler">
            <summary>
            Represents the method that will handle the PageChanged event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeFinishedHandler">
            <summary>
            Represents the method that will handle resizing finished events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TabbedGroups.ResizeStartHandler">
            <summary>
            Represents the method that will handle resizing start events.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.DisplayTabModes">
            <summary>
            Specifies how tab headers are displayed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.HideAll">
            <summary>
            Specifies tab headers are not shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.ShowAll">
            <summary>
            Specifies tab headers are always shown.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.ShowActiveLeaf">
            <summary>
            Specifies tab headers are shown for the active leaf only.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.ShowMouseOver">
            <summary>
            Specifies tab headers are shown only when mouse is over them.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.ShowActiveAndMouseOver">
            <summary>
            Specifies tab headers are shown when mouse over or active.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.DisplayTabModes.ShowOnlyMultipleTabs">
            <summary>
            Specifies tab headers are shown only for leafs containing multiple pages
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.CompactFlags">
            <summary>
            Specifies how compacting effects the contents.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CompactFlags.RemoveEmptyTabLeaf">
            <summary>
            Specifies empty leafs are removed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CompactFlags.RemoveEmptyTabSequence">
            <summary>
            Specifies empty sequences are removed.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CompactFlags.ReduceSingleEntries">
            <summary>
            Specifies single entries in a sequence replace the sequence.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CompactFlags.ReduceSameDirection">
            <summary>
            Specifies multiple sequences in same direction are merged.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Controls.CompactFlags.All">
            <summary>
            Specifies that all compacting flags are applied.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TGTabControlType">
            <summary>
            Provides data for the TabControlType event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TGTabControlType.#ctor">
            <summary>
            Initialize a new instance of the TGTabControlType.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGTabControlType.TabControlType">
            <summary>
            Gets or sets the TabControlType property for the event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs">
            <summary>
            Provides data for the PageCloseRequest event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs.#ctor(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,Crownwood.DotNetMagic.Controls.TabPage)">
            <summary>
            Initializes a new instance of the TGCloseRequestEventArgs class.
            </summary>
            <param name="tgl">Source TabGroupLeaf for event.</param>
            <param name="tc">Source TabControl for the event.</param>
            <param name="tp">Source TabPage for the event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs.Leaf">
            <summary>
            Gets the source TabGroupLeaf for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs.TabControl">
            <summary>
            Gets the source TabControl for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs.TabPage">
            <summary>
            Gets the source TabPage for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGCloseRequestEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property for the event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TGContextMenuEventArgs">
            <summary>
            Provides data for the PageContextMenu event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TGContextMenuEventArgs.#ctor(Crownwood.DotNetMagic.Controls.TabGroupLeaf,Crownwood.DotNetMagic.Controls.TabControl,Crownwood.DotNetMagic.Controls.TabPage,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initializes a new instance of the TGContextMenuEventArgs class.
            </summary>
            <param name="tgl">Source TabGroupLeaf for event.</param>
            <param name="tc">Source TabControl for event.</param>
            <param name="tp">Source TabPage for event.</param>
            <param name="contextMenuStrip">Source ContextMenuStrip for event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGContextMenuEventArgs.ContextMenuStrip">
            <summary>
            Gets the PopupMenu about to be displayed.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs">
            <summary>
            Provides data for the PageLoading event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs.#ctor(Crownwood.DotNetMagic.Controls.TabPage,System.Xml.XmlTextReader)">
            <summary>
            Initializes a new instance of the TGPageLoadingEventArgs class.
            </summary>
            <param name="tp">Source TabPage for event.</param>
            <param name="xmlIn">Source XmlTextReader for event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs.TabPage">
            <summary>
            Gets the source TabPage for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs.XmlIn">
            <summary>
            Gets the source XmlTextReader for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGPageLoadingEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property for the event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.TGPageSavingEventArgs">
            <summary>
            Provides data for the PageSaving event.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.TGPageSavingEventArgs.#ctor(Crownwood.DotNetMagic.Controls.TabPage,System.Xml.XmlTextWriter)">
            <summary>
            Initializes a new instance of the TGPageSavingEventArgs class.
            </summary>
            <param name="tp">Source TabPage for event.</param>
            <param name="xmlOut">Source XmlTextWriter for event.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGPageSavingEventArgs.TabPage">
            <summary>
            Gets the source TabPage for the event.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.TGPageSavingEventArgs.XmlOut">
            <summary>
            Gets the source XmlTextWriter for the event.
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Controls.StatusPanelBorder">
            <summary>
            Represents a single StatusPanelBorder inside the StatusBarControl.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelBorder.#ctor(Crownwood.DotNetMagic.Controls.StatusBarControl)">
            <summary>
            Initializes a new instance of the StatusPanel class.
            </summary>
            <param name="parent">Back reference to recover drawing information.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelBorder.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs structure containing event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelBorder.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="pevent">A PaintEventArgs structure contained event data.</param>
        </member>
        <member name="M:Crownwood.DotNetMagic.Controls.StatusPanelBorder.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs structure contained event data.</param>
        </member>
        <member name="E:Crownwood.DotNetMagic.Controls.StatusPanelBorder.PaintBackground">
            <summary>
            Occurs when the AutoSize property changes.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Controls.StatusPanelBorder.StatusPanel">
            <summary>
            Gets and sets the hosted StatusPanel
            </summary>
        </member>
        <member name="T:Crownwood.DotNetMagic.Common.Edges">
            <summary>
            Stores a value for each edge of a rectangle.
            </summary>
        </member>
        <member name="F:Crownwood.DotNetMagic.Common.Edges.Empty">
            <summary>
            An empty instance of the Edges class.
            </summary>
        </member>
        <member name="M:Crownwood.DotNetMagic.Common.Edges.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of the Edges structure.
            </summary>
            <param name="left">Initial value for Left edge.</param>
            <param name="top">Initial value for Top edge.</param>
            <param name="right">Initial value for Right edge.</param>
            <param name="bottom">Initial value for Bottom edge.</param>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Edges.Left">
            <summary>
            Gets and sets the value of the top edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Edges.Top">
            <summary>
            Gets and sets the value of the top edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Edges.Right">
            <summary>
            Gets and sets the value of the top edge.
            </summary>
        </member>
        <member name="P:Crownwood.DotNetMagic.Common.Edges.Bottom">
            <summary>
            Gets and sets the value of the top edge.
            </summary>
        </member>
    </members>
</doc>
