// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Object>
#include <osgAnimation/VertexInfluence>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_VALUE_REFLECTOR(osgAnimation::VertexInfluence)
	I_DeclaringFile("osgAnimation/VertexInfluence");
	I_Constructor0(____VertexInfluence,
	               "",
	               "");
	I_Method0(const std::string &, getName,
	          Properties::NON_VIRTUAL,
	          __C5_std_string_R1__getName,
	          "",
	          "");
	I_Method1(void, setName, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setName__C5_std_string_R1,
	          "",
	          "");
	I_SimpleProperty(const std::string &, Name, 
	                 __C5_std_string_R1__getName, 
	                 __void__setName__C5_std_string_R1);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::VertexInfluenceMap)
	I_DeclaringFile("osgAnimation/VertexInfluence");
	I_BaseType(osg::Object);
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "Clone the type of an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "Clone an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "return the name of the object's library. ",
	          "Must be defined by derived classes. The OpenSceneGraph convention is that the namespace of a library is the same as the library name. ");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "return the name of the object's class type. ",
	          "Must be defined by derived classes. ");
	I_Constructor0(____VertexInfluenceMap,
	               "",
	               "");
	I_Constructor2(IN, const osgAnimation::VertexInfluenceMap &, x, IN, const osg::CopyOp &, x,
	               ____VertexInfluenceMap__C5_osgAnimation_VertexInfluenceMap_R1__C5_osg_CopyOp_R1,
	               "",
	               "");
END_REFLECTOR

TYPE_NAME_ALIAS(std::vector< osgAnimation::VertexInfluence >, osgAnimation::VertexInfluenceSet::BoneToVertexList)

TYPE_NAME_ALIAS(std::vector< osgAnimation::VertexInfluenceSet::BoneWeight >, osgAnimation::VertexInfluenceSet::BoneWeightList)

TYPE_NAME_ALIAS(std::map< int COMMA  osgAnimation::VertexInfluenceSet::BoneWeightList >, osgAnimation::VertexInfluenceSet::VertexIndexToBoneWeightMap)

TYPE_NAME_ALIAS(std::vector< osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSet >, osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSetList)

BEGIN_VALUE_REFLECTOR(osgAnimation::VertexInfluenceSet)
	I_DeclaringFile("osgAnimation/VertexInfluence");
	I_Constructor0(____VertexInfluenceSet,
	               "",
	               "");
	I_Method0(const osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSetList &, getUniqVertexSetToBoneSetList,
	          Properties::NON_VIRTUAL,
	          __C5_UniqVertexSetToBoneSetList_R1__getUniqVertexSetToBoneSetList,
	          "",
	          "");
	I_Method1(void, addVertexInfluence, IN, const osgAnimation::VertexInfluence &, v,
	          Properties::NON_VIRTUAL,
	          __void__addVertexInfluence__C5_VertexInfluence_R1,
	          "",
	          "");
	I_Method0(void, buildVertex2BoneList,
	          Properties::NON_VIRTUAL,
	          __void__buildVertex2BoneList,
	          "",
	          "");
	I_Method0(void, buildUniqVertexSetToBoneSetList,
	          Properties::NON_VIRTUAL,
	          __void__buildUniqVertexSetToBoneSetList,
	          "",
	          "");
	I_Method0(void, clear,
	          Properties::NON_VIRTUAL,
	          __void__clear,
	          "",
	          "");
	I_Method0(const osgAnimation::VertexInfluenceSet::VertexIndexToBoneWeightMap &, getVertexToBoneList,
	          Properties::NON_VIRTUAL,
	          __C5_VertexIndexToBoneWeightMap_R1__getVertexToBoneList,
	          "",
	          "");
	I_SimpleProperty(const osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSetList &, UniqVertexSetToBoneSetList, 
	                 __C5_UniqVertexSetToBoneSetList_R1__getUniqVertexSetToBoneSetList, 
	                 0);
	I_SimpleProperty(const osgAnimation::VertexInfluenceSet::VertexIndexToBoneWeightMap &, VertexToBoneList, 
	                 __C5_VertexIndexToBoneWeightMap_R1__getVertexToBoneList, 
	                 0);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgAnimation::VertexInfluenceSet::BoneWeight)
	I_DeclaringFile("osgAnimation/VertexInfluence");
	I_Constructor2(IN, const std::string &, name, IN, float, weight,
	               ____BoneWeight__C5_std_string_R1__float,
	               "",
	               "");
	I_Method0(const std::string &, getBoneName,
	          Properties::NON_VIRTUAL,
	          __C5_std_string_R1__getBoneName,
	          "",
	          "");
	I_Method0(float, getWeight,
	          Properties::NON_VIRTUAL,
	          __float__getWeight,
	          "",
	          "");
	I_Method1(void, setWeight, IN, float, weight,
	          Properties::NON_VIRTUAL,
	          __void__setWeight__float,
	          "",
	          "");
	I_SimpleProperty(const std::string &, BoneName, 
	                 __C5_std_string_R1__getBoneName, 
	                 0);
	I_SimpleProperty(float, Weight, 
	                 __float__getWeight, 
	                 __void__setWeight__float);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSet)
	I_DeclaringFile("osgAnimation/VertexInfluence");
	I_Constructor0(____UniqVertexSetToBoneSet,
	               "",
	               "");
	I_Method1(void, setBones, IN, osgAnimation::VertexInfluenceSet::BoneWeightList &, bones,
	          Properties::NON_VIRTUAL,
	          __void__setBones__BoneWeightList_R1,
	          "",
	          "");
	I_Method0(const osgAnimation::VertexInfluenceSet::BoneWeightList &, getBones,
	          Properties::NON_VIRTUAL,
	          __C5_BoneWeightList_R1__getBones,
	          "",
	          "");
	I_Method0(std::vector< int > &, getVertexes,
	          Properties::NON_VIRTUAL,
	          __std_vectorT1_int__R1__getVertexes,
	          "",
	          "");
	I_Method0(const std::vector< int > &, getVertexes,
	          Properties::NON_VIRTUAL,
	          __C5_std_vectorT1_int__R1__getVertexes,
	          "",
	          "");
	I_SimpleProperty(osgAnimation::VertexInfluenceSet::BoneWeightList &, Bones, 
	                 0, 
	                 __void__setBones__BoneWeightList_R1);
	I_SimpleProperty(std::vector< int > &, Vertexes, 
	                 __std_vectorT1_int__R1__getVertexes, 
	                 0);
END_REFLECTOR

TYPE_NAME_ALIAS(std::pair< int COMMA  float >, osgAnimation::VertexIndexWeight)

TYPE_NAME_ALIAS(std::vector< osgAnimation::VertexIndexWeight >, osgAnimation::VertexList)

STD_MAP_REFLECTOR(std::map< int COMMA  osgAnimation::VertexInfluenceSet::BoneWeightList >)

STD_PAIR_REFLECTOR(std::pair< int COMMA  float >)

STD_VECTOR_REFLECTOR(std::vector< osgAnimation::VertexIndexWeight >)

STD_VECTOR_REFLECTOR(std::vector< osgAnimation::VertexInfluence >)

STD_VECTOR_REFLECTOR(std::vector< osgAnimation::VertexInfluenceSet::BoneWeight >)

STD_VECTOR_REFLECTOR(std::vector< osgAnimation::VertexInfluenceSet::UniqVertexSetToBoneSet >)

