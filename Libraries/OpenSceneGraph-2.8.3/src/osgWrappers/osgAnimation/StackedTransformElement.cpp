// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Matrix>
#include <osgAnimation/StackedTransformElement>
#include <osgAnimation/Target>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osgAnimation::StackedTransformElement)
	I_DeclaringFile("osgAnimation/StackedTransformElement");
	I_BaseType(osg::Object);
	I_Constructor0(____StackedTransformElement,
	               "",
	               "");
	I_Constructor2(IN, const osgAnimation::StackedTransformElement &, rhs, IN, const osg::CopyOp &, c,
	               ____StackedTransformElement__C5_StackedTransformElement_R1__C5_osg_CopyOp_R1,
	               "",
	               "");
	I_Method1(void, applyToMatrix, IN, osg::Matrix &, matrix,
	          Properties::PURE_VIRTUAL,
	          __void__applyToMatrix__osg_Matrix_R1,
	          "",
	          "");
	I_Method0(osg::Matrix, getAsMatrix,
	          Properties::PURE_VIRTUAL,
	          __osg_Matrix__getAsMatrix,
	          "",
	          "");
	I_Method0(bool, isIdentity,
	          Properties::PURE_VIRTUAL,
	          __bool__isIdentity,
	          "",
	          "");
	I_Method0(void, update,
	          Properties::PURE_VIRTUAL,
	          __void__update,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getOrCreateTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getOrCreateTarget,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method0(const osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __C5_Target_P1__getTarget,
	          "",
	          "");
	I_SimpleProperty(osg::Matrix, AsMatrix, 
	                 __osg_Matrix__getAsMatrix, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 0);
END_REFLECTOR

