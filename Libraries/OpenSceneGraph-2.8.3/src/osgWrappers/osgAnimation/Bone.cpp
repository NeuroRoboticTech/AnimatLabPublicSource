// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osgAnimation/Bone>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

TYPE_NAME_ALIAS(osg::Matrix, osgAnimation::Bone::MatrixType)

BEGIN_OBJECT_REFLECTOR(osgAnimation::Bone)
	I_DeclaringFile("osgAnimation/Bone");
	I_BaseType(osg::MatrixTransform);
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "clone an object of the same type as the node. ",
	          "");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "return a clone of a node, with Object* return type. ",
	          "");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "return true if this and obj are of the same kind of object. ",
	          "");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "return the name of the node's class type. ",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "return the name of the node's library. ",
	          "");
	I_Method1(void, accept, IN, osg::NodeVisitor &, nv,
	          Properties::VIRTUAL,
	          __void__accept__osg_NodeVisitor_R1,
	          "Visitor Pattern : calls the apply method of a NodeVisitor with this node's type. ",
	          "");
	I_ConstructorWithDefaults2(IN, const osgAnimation::Bone &, b, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____Bone__C5_Bone_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_ConstructorWithDefaults1(IN, const std::string &, name, "",
	                           Properties::NON_EXPLICIT,
	                           ____Bone__C5_std_string_R1,
	                           "",
	                           "");
	I_MethodWithDefaults1(void, setDefaultUpdateCallback, IN, const std::string &, name, "",
	                      Properties::NON_VIRTUAL,
	                      __void__setDefaultUpdateCallback__C5_std_string_R1,
	                      "",
	                      "");
	I_Method0(osgAnimation::Bone *, getBoneParent,
	          Properties::NON_VIRTUAL,
	          __Bone_P1__getBoneParent,
	          "",
	          "");
	I_Method0(const osgAnimation::Bone *, getBoneParent,
	          Properties::NON_VIRTUAL,
	          __C5_Bone_P1__getBoneParent,
	          "",
	          "");
	I_Method0(const osg::Matrix &, getMatrixInBoneSpace,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Matrix_R1__getMatrixInBoneSpace,
	          "",
	          "");
	I_Method0(const osg::Matrix &, getMatrixInSkeletonSpace,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Matrix_R1__getMatrixInSkeletonSpace,
	          "",
	          "");
	I_Method0(const osg::Matrix &, getInvBindMatrixInSkeletonSpace,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Matrix_R1__getInvBindMatrixInSkeletonSpace,
	          "",
	          "");
	I_Method1(void, setMatrixInSkeletonSpace, IN, const osg::Matrix &, matrix,
	          Properties::NON_VIRTUAL,
	          __void__setMatrixInSkeletonSpace__C5_osg_Matrix_R1,
	          "",
	          "");
	I_Method1(void, setInvBindMatrixInSkeletonSpace, IN, const osg::Matrix &, matrix,
	          Properties::NON_VIRTUAL,
	          __void__setInvBindMatrixInSkeletonSpace__C5_osg_Matrix_R1,
	          "",
	          "");
	I_SimpleProperty(osgAnimation::Bone *, BoneParent, 
	                 __Bone_P1__getBoneParent, 
	                 0);
	I_SimpleProperty(const std::string &, DefaultUpdateCallback, 
	                 0, 
	                 __void__setDefaultUpdateCallback__C5_std_string_R1);
	I_SimpleProperty(const osg::Matrix &, InvBindMatrixInSkeletonSpace, 
	                 __C5_osg_Matrix_R1__getInvBindMatrixInSkeletonSpace, 
	                 __void__setInvBindMatrixInSkeletonSpace__C5_osg_Matrix_R1);
	I_SimpleProperty(const osg::Matrix &, MatrixInBoneSpace, 
	                 __C5_osg_Matrix_R1__getMatrixInBoneSpace, 
	                 0);
	I_SimpleProperty(const osg::Matrix &, MatrixInSkeletonSpace, 
	                 __C5_osg_Matrix_R1__getMatrixInSkeletonSpace, 
	                 __void__setMatrixInSkeletonSpace__C5_osg_Matrix_R1);
END_REFLECTOR

TYPE_NAME_ALIAS(std::map< std::string COMMA  osg::ref_ptr< osgAnimation::Bone > >, osgAnimation::BoneMap)

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osgAnimation::Bone >)
	I_DeclaringFile("osg/ref_ptr");
	I_Constructor0(____ref_ptr,
	               "",
	               "");
	I_Constructor1(IN, osgAnimation::Bone *, ptr,
	               Properties::NON_EXPLICIT,
	               ____ref_ptr__T_P1,
	               "",
	               "");
	I_Constructor1(IN, const osg::ref_ptr< osgAnimation::Bone > &, rp,
	               Properties::NON_EXPLICIT,
	               ____ref_ptr__C5_ref_ptr_R1,
	               "",
	               "");
	I_Method0(osgAnimation::Bone *, get,
	          Properties::NON_VIRTUAL,
	          __T_P1__get,
	          "",
	          "");
	I_Method0(bool, valid,
	          Properties::NON_VIRTUAL,
	          __bool__valid,
	          "",
	          "");
	I_Method0(osgAnimation::Bone *, release,
	          Properties::NON_VIRTUAL,
	          __T_P1__release,
	          "",
	          "");
	I_Method1(void, swap, IN, osg::ref_ptr< osgAnimation::Bone > &, rp,
	          Properties::NON_VIRTUAL,
	          __void__swap__ref_ptr_R1,
	          "",
	          "");
	I_SimpleProperty(osgAnimation::Bone *, , 
	                 __T_P1__get, 
	                 0);
END_REFLECTOR

STD_MAP_REFLECTOR(std::map< std::string COMMA  osg::ref_ptr< osgAnimation::Bone > >)

