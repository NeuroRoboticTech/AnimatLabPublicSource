// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Geometry>
#include <osg/Matrix>
#include <osg/Object>
#include <osg/RenderInfo>
#include <osgAnimation/RigGeometry>
#include <osgAnimation/RigTransform>
#include <osgAnimation/Skeleton>
#include <osgAnimation/VertexInfluence>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgAnimation::RigGeometry)
	I_DeclaringFile("osgAnimation/RigGeometry");
	I_BaseType(osg::Geometry);
	I_Constructor0(____RigGeometry,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgAnimation::RigGeometry &, b, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____RigGeometry__C5_RigGeometry_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "Clone the type of an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "Clone an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "return the name of the object's library. ",
	          "Must be defined by derived classes. The OpenSceneGraph convention is that the namespace of a library is the same as the library name. ");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "return the name of the object's class type. ",
	          "Must be defined by derived classes. ");
	I_Method1(void, setInfluenceMap, IN, osgAnimation::VertexInfluenceMap *, vertexInfluenceMap,
	          Properties::NON_VIRTUAL,
	          __void__setInfluenceMap__VertexInfluenceMap_P1,
	          "",
	          "");
	I_Method0(const osgAnimation::VertexInfluenceMap *, getInfluenceMap,
	          Properties::NON_VIRTUAL,
	          __C5_VertexInfluenceMap_P1__getInfluenceMap,
	          "",
	          "");
	I_Method0(osgAnimation::VertexInfluenceMap *, getInfluenceMap,
	          Properties::NON_VIRTUAL,
	          __VertexInfluenceMap_P1__getInfluenceMap,
	          "",
	          "");
	I_Method0(const osgAnimation::Skeleton *, getSkeleton,
	          Properties::NON_VIRTUAL,
	          __C5_Skeleton_P1__getSkeleton,
	          "",
	          "");
	I_Method0(osgAnimation::Skeleton *, getSkeleton,
	          Properties::NON_VIRTUAL,
	          __Skeleton_P1__getSkeleton,
	          "",
	          "");
	I_Method1(void, setSkeleton, IN, osgAnimation::Skeleton *, x,
	          Properties::NON_VIRTUAL,
	          __void__setSkeleton__Skeleton_P1,
	          "",
	          "");
	I_Method1(void, setNeedToComputeMatrix, IN, bool, state,
	          Properties::NON_VIRTUAL,
	          __void__setNeedToComputeMatrix__bool,
	          "",
	          "");
	I_Method0(bool, getNeedToComputeMatrix,
	          Properties::NON_VIRTUAL,
	          __bool__getNeedToComputeMatrix,
	          "",
	          "");
	I_Method0(void, buildVertexInfluenceSet,
	          Properties::NON_VIRTUAL,
	          __void__buildVertexInfluenceSet,
	          "",
	          "");
	I_Method0(const osgAnimation::VertexInfluenceSet &, getVertexInfluenceSet,
	          Properties::NON_VIRTUAL,
	          __C5_VertexInfluenceSet_R1__getVertexInfluenceSet,
	          "",
	          "");
	I_Method0(void, computeMatrixFromRootSkeleton,
	          Properties::NON_VIRTUAL,
	          __void__computeMatrixFromRootSkeleton,
	          "",
	          "");
	I_Method1(void, setRigTransformImplementation, IN, osgAnimation::RigTransform *, x,
	          Properties::NON_VIRTUAL,
	          __void__setRigTransformImplementation__RigTransform_P1,
	          "",
	          "");
	I_Method0(osgAnimation::RigTransform *, getRigTransformImplementation,
	          Properties::NON_VIRTUAL,
	          __RigTransform_P1__getRigTransformImplementation,
	          "",
	          "");
	I_Method1(void, drawImplementation, IN, osg::RenderInfo &, renderInfo,
	          Properties::VIRTUAL,
	          __void__drawImplementation__osg_RenderInfo_R1,
	          "Draw Geometry directly ignoring an OpenGL display list which could be attached. ",
	          "This is the internal draw method which does the drawing itself, and is the method to override when deriving from Geometry for user-drawn objects. ");
	I_Method0(void, update,
	          Properties::NON_VIRTUAL,
	          __void__update,
	          "",
	          "");
	I_Method0(const osg::Matrix &, getMatrixFromSkeletonToGeometry,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Matrix_R1__getMatrixFromSkeletonToGeometry,
	          "",
	          "");
	I_Method0(const osg::Matrix &, getInvMatrixFromSkeletonToGeometry,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Matrix_R1__getInvMatrixFromSkeletonToGeometry,
	          "",
	          "");
	I_Method0(osg::Geometry *, getSourceGeometry,
	          Properties::NON_VIRTUAL,
	          __osg_Geometry_P1__getSourceGeometry,
	          "",
	          "");
	I_Method0(const osg::Geometry *, getSourceGeometry,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Geometry_P1__getSourceGeometry,
	          "",
	          "");
	I_Method1(void, setSourceGeometry, IN, osg::Geometry *, geometry,
	          Properties::NON_VIRTUAL,
	          __void__setSourceGeometry__osg_Geometry_P1,
	          "",
	          "");
	I_Method1(void, copyFrom, IN, osg::Geometry &, from,
	          Properties::NON_VIRTUAL,
	          __void__copyFrom__osg_Geometry_R1,
	          "",
	          "");
	I_SimpleProperty(osgAnimation::VertexInfluenceMap *, InfluenceMap, 
	                 __VertexInfluenceMap_P1__getInfluenceMap, 
	                 __void__setInfluenceMap__VertexInfluenceMap_P1);
	I_SimpleProperty(const osg::Matrix &, InvMatrixFromSkeletonToGeometry, 
	                 __C5_osg_Matrix_R1__getInvMatrixFromSkeletonToGeometry, 
	                 0);
	I_SimpleProperty(const osg::Matrix &, MatrixFromSkeletonToGeometry, 
	                 __C5_osg_Matrix_R1__getMatrixFromSkeletonToGeometry, 
	                 0);
	I_SimpleProperty(bool, NeedToComputeMatrix, 
	                 __bool__getNeedToComputeMatrix, 
	                 __void__setNeedToComputeMatrix__bool);
	I_SimpleProperty(osgAnimation::RigTransform *, RigTransformImplementation, 
	                 __RigTransform_P1__getRigTransformImplementation, 
	                 __void__setRigTransformImplementation__RigTransform_P1);
	I_SimpleProperty(osgAnimation::Skeleton *, Skeleton, 
	                 __Skeleton_P1__getSkeleton, 
	                 __void__setSkeleton__Skeleton_P1);
	I_SimpleProperty(osg::Geometry *, SourceGeometry, 
	                 __osg_Geometry_P1__getSourceGeometry, 
	                 __void__setSourceGeometry__osg_Geometry_P1);
	I_SimpleProperty(const osgAnimation::VertexInfluenceSet &, VertexInfluenceSet, 
	                 __C5_VertexInfluenceSet_R1__getVertexInfluenceSet, 
	                 0);
END_REFLECTOR

