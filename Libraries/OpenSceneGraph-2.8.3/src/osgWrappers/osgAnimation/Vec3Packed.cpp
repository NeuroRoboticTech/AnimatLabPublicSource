// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Vec3>
#include <osg/Vec3f>
#include <osgAnimation/Vec3Packed>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_VALUE_REFLECTOR(osgAnimation::Vec3ArrayPacked)
	I_DeclaringFile("osgAnimation/Vec3Packed");
	I_Constructor0(____Vec3ArrayPacked,
	               "",
	               "");
	I_Method1(void, analyze, IN, const std::vector< osg::Vec3 > &, src,
	          Properties::NON_VIRTUAL,
	          __void__analyze__C5_std_vectorT1_osg_Vec3__R1,
	          "",
	          "");
	I_Method1(void, compress, IN, const std::vector< osg::Vec3 > &, src,
	          Properties::NON_VIRTUAL,
	          __void__compress__C5_std_vectorT1_osg_Vec3__R1,
	          "",
	          "");
	I_PublicMemberProperty(std::vector< osgAnimation::Vec3Packed >, mVecCompressed);
	I_PublicMemberProperty(osg::Vec3, mMin);
	I_PublicMemberProperty(osg::Vec3, mScale);
	I_PublicMemberProperty(osg::Vec3, mScaleInv);
END_REFLECTOR

TYPE_NAME_ALIAS(unsigned int, osgAnimation::Vec3Packed::uint32_t)

BEGIN_VALUE_REFLECTOR(osgAnimation::Vec3Packed)
	I_DeclaringFile("osgAnimation/Vec3Packed");
	I_Constructor1(IN, osgAnimation::Vec3Packed::uint32_t, val,
	               Properties::NON_EXPLICIT,
	               ____Vec3Packed__uint32_t,
	               "",
	               "");
	I_Constructor0(____Vec3Packed,
	               "",
	               "");
	I_Method3(void, uncompress, IN, const osg::Vec3 &, scale, IN, const osg::Vec3 &, min, IN, osg::Vec3 &, result,
	          Properties::NON_VIRTUAL,
	          __void__uncompress__C5_osg_Vec3_R1__C5_osg_Vec3_R1__osg_Vec3_R1,
	          "",
	          "");
	I_Method3(void, compress, IN, const osg::Vec3f &, src, IN, const osg::Vec3f &, min, IN, const osg::Vec3f &, scaleInv,
	          Properties::NON_VIRTUAL,
	          __void__compress__C5_osg_Vec3f_R1__C5_osg_Vec3f_R1__C5_osg_Vec3f_R1,
	          "",
	          "");
	I_PublicMemberProperty(osgAnimation::Vec3Packed::uint32_t, m32bits);
END_REFLECTOR

