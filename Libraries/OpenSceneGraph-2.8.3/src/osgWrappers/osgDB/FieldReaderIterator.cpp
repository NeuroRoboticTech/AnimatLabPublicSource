// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Vec2d>
#include <osg/Vec2f>
#include <osg/Vec3d>
#include <osg/Vec3f>
#include <osg/Vec4d>
#include <osg/Vec4f>
#include <osgDB/Field>
#include <osgDB/FieldReader>
#include <osgDB/FieldReaderIterator>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_VALUE_REFLECTOR(osgDB::FieldReaderIterator)
	I_DeclaringFile("osgDB/FieldReaderIterator");
	I_Constructor0(____FieldReaderIterator,
	               "",
	               "");
	I_Constructor1(IN, const osgDB::FieldReaderIterator &, ic,
	               Properties::NON_EXPLICIT,
	               ____FieldReaderIterator__C5_FieldReaderIterator_R1,
	               "",
	               "");
	I_Method1(void, attach, IN, std::istream *, input,
	          Properties::NON_VIRTUAL,
	          __void__attach__std_istream_P1,
	          "",
	          "");
	I_Method0(void, detach,
	          Properties::NON_VIRTUAL,
	          __void__detach,
	          "",
	          "");
	I_Method0(bool, eof,
	          Properties::VIRTUAL,
	          __bool__eof,
	          "",
	          "");
	I_Method0(osgDB::FieldReader &, getFieldReader,
	          Properties::NON_VIRTUAL,
	          __FieldReader_R1__getFieldReader,
	          "",
	          "");
	I_Method2(void, insert, IN, int, pos, IN, osgDB::Field *, field,
	          Properties::NON_VIRTUAL,
	          __void__insert__int__Field_P1,
	          "",
	          "");
	I_Method2(void, insert, IN, int, pos, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __void__insert__int__C5_char_P1,
	          "",
	          "");
	I_Method1(osgDB::Field &, field, IN, int, pos,
	          Properties::NON_VIRTUAL,
	          __Field_R1__field__int,
	          "",
	          "");
	I_Method0(void, advanceOverCurrentFieldOrBlock,
	          Properties::NON_VIRTUAL,
	          __void__advanceOverCurrentFieldOrBlock,
	          "increments the iterator of the next simple field or whole block if the current field[0] is an open bracket ",
	          "");
	I_Method0(void, advanceToEndOfCurrentBlock,
	          Properties::NON_VIRTUAL,
	          __void__advanceToEndOfCurrentBlock,
	          "",
	          "");
	I_Method1(void, advanceToEndOfBlock, IN, int, noNestBrackets,
	          Properties::NON_VIRTUAL,
	          __void__advanceToEndOfBlock__int,
	          "",
	          "");
	I_Method1(bool, matchSequence, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __bool__matchSequence__C5_char_P1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, std::string &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__std_string_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, unsigned int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__unsigned_int_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__int_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, float &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__float_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec2f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec2f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec3f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec3f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec4f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec4f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec2d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec2d_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec3d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec3d_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec4d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec4d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, std::string &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__std_string_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, unsigned int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__unsigned_int_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__int_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, float &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__float_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec2f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec2f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec3f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec3f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec4f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec4f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec2d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec2d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec3d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec3d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec4d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec4d_R1,
	          "",
	          "");
	I_SimpleProperty(osgDB::FieldReader &, FieldReader, 
	                 __FieldReader_R1__getFieldReader, 
	                 0);
END_REFLECTOR

