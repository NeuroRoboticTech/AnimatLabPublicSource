// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Vec2>
#include <osg/Vec3>
#include <osg/Vec4>
#include <osgParticle/range>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

TYPE_NAME_ALIAS(osgParticle::range< float >, osgParticle::rangef)

TYPE_NAME_ALIAS(osgParticle::range< osg::Vec2 >, osgParticle::rangev2)

TYPE_NAME_ALIAS(osgParticle::range< osg::Vec3 >, osgParticle::rangev3)

TYPE_NAME_ALIAS(osgParticle::range< osg::Vec4 >, osgParticle::rangev4)

BEGIN_VALUE_REFLECTOR(osgParticle::range< float >)
	I_DeclaringFile("osgParticle/range");
	I_Constructor0(____range,
	               "Construct the object by calling default constructors for min and max. ",
	               "");
	I_Constructor2(IN, const float &, mn, IN, const float &, mx,
	               ____range__C5_ValueType_R1__C5_ValueType_R1,
	               "Construct and initialize min and max directly. ",
	               "");
	I_Method2(void, set, IN, const float &, mn, IN, const float &, mx,
	          Properties::NON_VIRTUAL,
	          __void__set__C5_ValueType_R1__C5_ValueType_R1,
	          "Set min and max. ",
	          "");
	I_Method0(float, get_random,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random,
	          "Get a random value between min and max. ",
	          "");
	I_Method0(float, get_random_sqrtf,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random_sqrtf,
	          "Get a random square root value between min and max. ",
	          "");
	I_Method0(float, mid,
	          Properties::NON_VIRTUAL,
	          __ValueType__mid,
	          "",
	          "");
	I_PublicMemberProperty(float, minimum);
	I_PublicMemberProperty(float, maximum);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgParticle::range< osg::Vec2 >)
	I_DeclaringFile("osgParticle/range");
	I_Constructor0(____range,
	               "Construct the object by calling default constructors for min and max. ",
	               "");
	I_Constructor2(IN, const osg::Vec2 &, mn, IN, const osg::Vec2 &, mx,
	               ____range__C5_ValueType_R1__C5_ValueType_R1,
	               "Construct and initialize min and max directly. ",
	               "");
	I_Method2(void, set, IN, const osg::Vec2 &, mn, IN, const osg::Vec2 &, mx,
	          Properties::NON_VIRTUAL,
	          __void__set__C5_ValueType_R1__C5_ValueType_R1,
	          "Set min and max. ",
	          "");
	I_Method0(osg::Vec2, get_random,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random,
	          "Get a random value between min and max. ",
	          "");
	I_Method0(osg::Vec2, get_random_sqrtf,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random_sqrtf,
	          "Get a random square root value between min and max. ",
	          "");
	I_Method0(osg::Vec2, mid,
	          Properties::NON_VIRTUAL,
	          __ValueType__mid,
	          "",
	          "");
	I_PublicMemberProperty(osg::Vec2, minimum);
	I_PublicMemberProperty(osg::Vec2, maximum);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgParticle::range< osg::Vec3 >)
	I_DeclaringFile("osgParticle/range");
	I_Constructor0(____range,
	               "Construct the object by calling default constructors for min and max. ",
	               "");
	I_Constructor2(IN, const osg::Vec3 &, mn, IN, const osg::Vec3 &, mx,
	               ____range__C5_ValueType_R1__C5_ValueType_R1,
	               "Construct and initialize min and max directly. ",
	               "");
	I_Method2(void, set, IN, const osg::Vec3 &, mn, IN, const osg::Vec3 &, mx,
	          Properties::NON_VIRTUAL,
	          __void__set__C5_ValueType_R1__C5_ValueType_R1,
	          "Set min and max. ",
	          "");
	I_Method0(osg::Vec3, get_random,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random,
	          "Get a random value between min and max. ",
	          "");
	I_Method0(osg::Vec3, get_random_sqrtf,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random_sqrtf,
	          "Get a random square root value between min and max. ",
	          "");
	I_Method0(osg::Vec3, mid,
	          Properties::NON_VIRTUAL,
	          __ValueType__mid,
	          "",
	          "");
	I_PublicMemberProperty(osg::Vec3, minimum);
	I_PublicMemberProperty(osg::Vec3, maximum);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgParticle::range< osg::Vec4 >)
	I_DeclaringFile("osgParticle/range");
	I_Constructor0(____range,
	               "Construct the object by calling default constructors for min and max. ",
	               "");
	I_Constructor2(IN, const osg::Vec4 &, mn, IN, const osg::Vec4 &, mx,
	               ____range__C5_ValueType_R1__C5_ValueType_R1,
	               "Construct and initialize min and max directly. ",
	               "");
	I_Method2(void, set, IN, const osg::Vec4 &, mn, IN, const osg::Vec4 &, mx,
	          Properties::NON_VIRTUAL,
	          __void__set__C5_ValueType_R1__C5_ValueType_R1,
	          "Set min and max. ",
	          "");
	I_Method0(osg::Vec4, get_random,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random,
	          "Get a random value between min and max. ",
	          "");
	I_Method0(osg::Vec4, get_random_sqrtf,
	          Properties::NON_VIRTUAL,
	          __ValueType__get_random_sqrtf,
	          "Get a random square root value between min and max. ",
	          "");
	I_Method0(osg::Vec4, mid,
	          Properties::NON_VIRTUAL,
	          __ValueType__mid,
	          "",
	          "");
	I_PublicMemberProperty(osg::Vec4, minimum);
	I_PublicMemberProperty(osg::Vec4, maximum);
END_REFLECTOR

