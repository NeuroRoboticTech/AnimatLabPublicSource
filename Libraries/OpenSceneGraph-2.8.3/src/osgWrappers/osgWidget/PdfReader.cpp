// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Vec3>
#include <osg/Vec4>
#include <osgWidget/PdfReader>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ENUM_REFLECTOR(osgWidget::GeometryHints::AspectRatioPolicy)
	I_DeclaringFile("osgWidget/PdfReader");
	I_EnumLabel(osgWidget::GeometryHints::RESIZE_HEIGHT_TO_MAINTAINCE_ASPECT_RATIO);
	I_EnumLabel(osgWidget::GeometryHints::RESIZE_WIDTH_TO_MAINTAINCE_ASPECT_RATIO);
	I_EnumLabel(osgWidget::GeometryHints::IGNORE_DOCUMENT_ASPECT_RATIO);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgWidget::GeometryHints)
	I_DeclaringFile("osgWidget/PdfReader");
	I_Constructor0(____GeometryHints,
	               "",
	               "");
	I_ConstructorWithDefaults7(IN, const osg::Vec3 &, pos, , IN, const osg::Vec3 &, wVec, , IN, const osg::Vec3 &, hVec, , IN, const osg::Vec4 &, bColor, , IN, osgWidget::GeometryHints::AspectRatioPolicy, asp, osgWidget::GeometryHints::RESIZE_HEIGHT_TO_MAINTAINCE_ASPECT_RATIO, IN, unsigned int, wRes, 1024, IN, unsigned int, hRes, 1024,
	                           ____GeometryHints__C5_osg_Vec3_R1__C5_osg_Vec3_R1__C5_osg_Vec3_R1__C5_osg_Vec4_R1__AspectRatioPolicy__unsigned_int__unsigned_int,
	                           "",
	                           "");
	I_PublicMemberProperty(osg::Vec3, position);
	I_PublicMemberProperty(osg::Vec3, widthVec);
	I_PublicMemberProperty(osg::Vec3, heightVec);
	I_PublicMemberProperty(osg::Vec4, backgroundColor);
	I_PublicMemberProperty(osgWidget::GeometryHints::AspectRatioPolicy, aspectRatioPolicy);
	I_PublicMemberProperty(unsigned int, widthResolution);
	I_PublicMemberProperty(unsigned int, heightResolution);
END_REFLECTOR

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osgWidget::PdfImage)
	I_DeclaringFile("osgWidget/PdfReader");
	I_BaseType(osg::Image);
	I_Constructor0(____PdfImage,
	               "",
	               "");
	I_Method1(void, setBackgroundColor, IN, const osg::Vec4 &, backgroundColor,
	          Properties::NON_VIRTUAL,
	          __void__setBackgroundColor__C5_osg_Vec4_R1,
	          "",
	          "");
	I_Method0(const osg::Vec4 &, getBackgroundColor,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Vec4_R1__getBackgroundColor,
	          "",
	          "");
	I_Method0(int, getPageNum,
	          Properties::NON_VIRTUAL,
	          __int__getPageNum,
	          "",
	          "");
	I_Method0(int, getNumOfPages,
	          Properties::PURE_VIRTUAL,
	          __int__getNumOfPages,
	          "",
	          "");
	I_Method1(bool, page, IN, int, pageNum,
	          Properties::PURE_VIRTUAL,
	          __bool__page__int,
	          "",
	          "");
	I_Method0(bool, previous,
	          Properties::NON_VIRTUAL,
	          __bool__previous,
	          "",
	          "");
	I_Method0(bool, next,
	          Properties::NON_VIRTUAL,
	          __bool__next,
	          "",
	          "");
	I_Method1(void, setNextPageKeyEvent, IN, int, key,
	          Properties::NON_VIRTUAL,
	          __void__setNextPageKeyEvent__int,
	          "",
	          "");
	I_Method0(int, getNextPageKeyEvent,
	          Properties::NON_VIRTUAL,
	          __int__getNextPageKeyEvent,
	          "",
	          "");
	I_Method1(void, setPreviousPageKeyEvent, IN, int, key,
	          Properties::NON_VIRTUAL,
	          __void__setPreviousPageKeyEvent__int,
	          "",
	          "");
	I_Method0(int, getPreviousPageKeyEvent,
	          Properties::NON_VIRTUAL,
	          __int__getPreviousPageKeyEvent,
	          "",
	          "");
	I_SimpleProperty(const osg::Vec4 &, BackgroundColor, 
	                 __C5_osg_Vec4_R1__getBackgroundColor, 
	                 __void__setBackgroundColor__C5_osg_Vec4_R1);
	I_SimpleProperty(int, NextPageKeyEvent, 
	                 __int__getNextPageKeyEvent, 
	                 __void__setNextPageKeyEvent__int);
	I_SimpleProperty(int, PageNum, 
	                 __int__getPageNum, 
	                 0);
	I_SimpleProperty(int, PreviousPageKeyEvent, 
	                 __int__getPreviousPageKeyEvent, 
	                 __void__setPreviousPageKeyEvent__int);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgWidget::PdfReader)
	I_DeclaringFile("osgWidget/PdfReader");
	I_BaseType(osg::Geode);
	I_Constructor0(____PdfReader,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const std::string &, filename, , IN, const osgWidget::GeometryHints &, hints, osgWidget::GeometryHints(),
	                           ____PdfReader__C5_std_string_R1__C5_GeometryHints_R1,
	                           "",
	                           "");
	I_MethodWithDefaults2(bool, assign, IN, osgWidget::PdfImage *, pdfImage, , IN, const osgWidget::GeometryHints &, hints, osgWidget::GeometryHints(),
	                      Properties::NON_VIRTUAL,
	                      __bool__assign__PdfImage_P1__C5_GeometryHints_R1,
	                      "",
	                      "");
	I_MethodWithDefaults2(bool, open, IN, const std::string &, filename, , IN, const osgWidget::GeometryHints &, hints, osgWidget::GeometryHints(),
	                      Properties::NON_VIRTUAL,
	                      __bool__open__C5_std_string_R1__C5_GeometryHints_R1,
	                      "",
	                      "");
	I_Method1(bool, page, IN, int, pageNum,
	          Properties::NON_VIRTUAL,
	          __bool__page__int,
	          "",
	          "");
	I_Method0(bool, previous,
	          Properties::NON_VIRTUAL,
	          __bool__previous,
	          "",
	          "");
	I_Method0(bool, next,
	          Properties::NON_VIRTUAL,
	          __bool__next,
	          "",
	          "");
END_REFLECTOR

