/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2006 Robert Osfield 
 *
 * This library is open source and may be redistributed and/or modified under  
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * OpenSceneGraph Public License for more details.
*/
//osgIntrospection - Copyright (C) 2005 Marco Jez

#ifndef OSGINTROSPECTION_TYPENAMEALIASPROXY_
#define OSGINTROSPECTION_TYPENAMEALIASPROXY_

#include <osgIntrospection/Type>
#include <osgIntrospection/Reflection>

#include <string>
#include <algorithm>

namespace osgIntrospection
{

    template<typename C>
    struct TypeNameAliasProxy
    {
        TypeNameAliasProxy(const std::string& name)
        {
            Type* type = Reflection::getOrRegisterType(extended_typeid<C>());
            if (std::find(type->_aliases.begin(), type->_aliases.end(), name) == type->_aliases.end())
                type->_aliases.push_back(name);
        }
    };

}

#endif
